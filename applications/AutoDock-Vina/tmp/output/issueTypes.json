{
  "type" : "Coverity Issue Type Definitions",
  "format_version" : 1,
  "issue_type" : [
    {
      "type" : "AUTOSAR_Cpp14_A15_2_1",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "AUTOSAR C++14 Exception Handling"
      },
      "description" : {
        "en" : "Constructors that are not noexcept shall not be invoked before program startup."
      },
      "local_effect" : {
        "en" : "AUTOSAR Violation"
      },
      "origin" : "AUTOSAR C++14",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 755,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "AUTOSAR_Cpp14_A15_2_1",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "AUTOSAR C++14 Exception Handling"
      },
      "description" : {
        "en" : "Constructors that are not noexcept shall not be invoked before program startup."
      },
      "local_effect" : {
        "en" : "AUTOSAR Violation"
      },
      "origin" : "AUTOSAR C++14",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 755,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "BAD_CHECK_OF_WAIT_COND",
      "subtype" : "dead_wait",
      "code-language" : "c#",
      "name" : {
        "en" : "Indefinite wait"
      },
      "description" : {
        "en" : "A thread waits for a thread-shared condition which may have already been satisfied, causing a hang."
      },
      "local_effect" : {
        "en" : "This thread can wait after its wait condition has been satisfied, causing it to wait needlessly, perhaps forever."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "dead_wait",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1284
      }
    },
    {
      "type" : "BAD_CHECK_OF_WAIT_COND",
      "subtype" : "spurious_wakeup",
      "code-language" : "c#",
      "name" : {
        "en" : "Data race condition"
      },
      "description" : {
        "en" : "A thread does not re-check its wait condition after waking up from a wait."
      },
      "local_effect" : {
        "en" : "This thread does not re-check the wait condition upon wakeup, which may cause it to continue prematurely."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "spurious_wakeup",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1284
      }
    },
    {
      "type" : "BAD_EQ",
      "subtype" : "referential",
      "code-language" : "java",
      "name" : {
        "en" : "Wrong equality (referential)"
      },
      "description" : {
        "en" : "Using referential equality when value equality is the norm for this type"
      },
      "local_effect" : {
        "en" : "Referential equality may consider objects different when value equality considers them the same."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 595,
        "impact" : "Medium",
        "subcategory" : "referential",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1063
      }
    },
    {
      "type" : "BAD_SHIFT",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Bad bit shift operation"
      },
      "description" : {
        "en" : "A bit shift operation has a shift amount which is too large or has a negative value."
      },
      "local_effect" : {
        "en" : "The operation may yield an unexpected result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 655
      }
    },
    {
      "type" : "CERT_DCL57_CPP",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "CERT-CPP Declarations and Initialisation"
      },
      "description" : {
        "en" : "Do not let exceptions escape from destructors or deallocation functions."
      },
      "local_effect" : {
        "en" : "CERT Violation"
      },
      "origin" : "CERT C++",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 758,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "L3"
      }
    },
    {
      "type" : "CERT_DCL57_CPP",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "CERT-CPP Declarations and Initialisation"
      },
      "description" : {
        "en" : "Do not let exceptions escape from destructors or deallocation functions."
      },
      "local_effect" : {
        "en" : "CERT Violation"
      },
      "origin" : "CERT C++",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 758,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "L3"
      }
    },
    {
      "type" : "CERT_EXP43_C",
      "subtype" : "OVERLAP",
      "code-language" : "c/c++",
      "name" : {
        "en" : "CERT-C Expression"
      },
      "description" : {
        "en" : "Avoid undefined behavior when using restrict-qualified pointers."
      },
      "local_effect" : {
        "en" : "CERT Violation"
      },
      "origin" : "CERT C",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 758,
        "impact" : "Low",
        "subcategory" : "OVERLAP",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "L3"
      }
    },
    {
      "type" : "CERT_EXP43_C",
      "subtype" : "OVERLAP",
      "code-language" : "cuda",
      "name" : {
        "en" : "CERT-C Expression"
      },
      "description" : {
        "en" : "Avoid undefined behavior when using restrict-qualified pointers."
      },
      "local_effect" : {
        "en" : "CERT Violation"
      },
      "origin" : "CERT C",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 758,
        "impact" : "Low",
        "subcategory" : "OVERLAP",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "L3"
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : null,
      "code-language" : "apex",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : null,
      "code-language" : "ruby",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : null,
      "code-language" : "scala",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : null,
      "code-language" : "swift",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : null,
      "code-language" : "text",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "library_function",
      "code-language" : "apex",
      "name" : {
        "en" : "Unchecked return value from library"
      },
      "description" : {
        "en" : "Value returned from a library function is not checked for errors before being used. This value may indicate an error condition."
      },
      "local_effect" : {
        "en" : "The function returns a value that indicates an error condition. If this is not checked, the error condition may not be handled correctly."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "library_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "library_function",
      "code-language" : "javascript",
      "name" : {
        "en" : "Unchecked return value from library"
      },
      "description" : {
        "en" : "Value returned from a library function is not checked for errors before being used. This value may indicate an error condition."
      },
      "local_effect" : {
        "en" : "The function returns a value that indicates an error condition. If this is not checked, the error condition may not be handled correctly."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "library_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "library_function",
      "code-language" : "php",
      "name" : {
        "en" : "Unchecked return value from library"
      },
      "description" : {
        "en" : "Value returned from a library function is not checked for errors before being used. This value may indicate an error condition."
      },
      "local_effect" : {
        "en" : "The function returns a value that indicates an error condition. If this is not checked, the error condition may not be handled correctly."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "library_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "library_function",
      "code-language" : "python",
      "name" : {
        "en" : "Unchecked return value from library"
      },
      "description" : {
        "en" : "Value returned from a library function is not checked for errors before being used. This value may indicate an error condition."
      },
      "local_effect" : {
        "en" : "The function returns a value that indicates an error condition. If this is not checked, the error condition may not be handled correctly."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "library_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "library_function",
      "code-language" : "ruby",
      "name" : {
        "en" : "Unchecked return value from library"
      },
      "description" : {
        "en" : "Value returned from a library function is not checked for errors before being used. This value may indicate an error condition."
      },
      "local_effect" : {
        "en" : "The function returns a value that indicates an error condition. If this is not checked, the error condition may not be handled correctly."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "library_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "library_function",
      "code-language" : "scala",
      "name" : {
        "en" : "Unchecked return value from library"
      },
      "description" : {
        "en" : "Value returned from a library function is not checked for errors before being used. This value may indicate an error condition."
      },
      "local_effect" : {
        "en" : "The function returns a value that indicates an error condition. If this is not checked, the error condition may not be handled correctly."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "library_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "library_function",
      "code-language" : "swift",
      "name" : {
        "en" : "Unchecked return value from library"
      },
      "description" : {
        "en" : "Value returned from a library function is not checked for errors before being used. This value may indicate an error condition."
      },
      "local_effect" : {
        "en" : "The function returns a value that indicates an error condition. If this is not checked, the error condition may not be handled correctly."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "library_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "library_function",
      "code-language" : "text",
      "name" : {
        "en" : "Unchecked return value from library"
      },
      "description" : {
        "en" : "Value returned from a library function is not checked for errors before being used. This value may indicate an error condition."
      },
      "local_effect" : {
        "en" : "The function returns a value that indicates an error condition. If this is not checked, the error condition may not be handled correctly."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "library_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "library_function",
      "code-language" : "typescript",
      "name" : {
        "en" : "Unchecked return value from library"
      },
      "description" : {
        "en" : "Value returned from a library function is not checked for errors before being used. This value may indicate an error condition."
      },
      "local_effect" : {
        "en" : "The function returns a value that indicates an error condition. If this is not checked, the error condition may not be handled correctly."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "library_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "library_function",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Unchecked return value from library"
      },
      "description" : {
        "en" : "Value returned from a library function is not checked for errors before being used. This value may indicate an error condition."
      },
      "local_effect" : {
        "en" : "The function returns a value that indicates an error condition. If this is not checked, the error condition may not be handled correctly."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "library_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "short_read",
      "code-language" : "apex",
      "name" : {
        "en" : "Ignoring number of bytes read"
      },
      "description" : {
        "en" : "Value returned from a function and indicating the number of bytes read is ignored."
      },
      "local_effect" : {
        "en" : "The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "short_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "short_read",
      "code-language" : "javascript",
      "name" : {
        "en" : "Ignoring number of bytes read"
      },
      "description" : {
        "en" : "Value returned from a function and indicating the number of bytes read is ignored."
      },
      "local_effect" : {
        "en" : "The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "short_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "short_read",
      "code-language" : "php",
      "name" : {
        "en" : "Ignoring number of bytes read"
      },
      "description" : {
        "en" : "Value returned from a function and indicating the number of bytes read is ignored."
      },
      "local_effect" : {
        "en" : "The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "short_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "short_read",
      "code-language" : "python",
      "name" : {
        "en" : "Ignoring number of bytes read"
      },
      "description" : {
        "en" : "Value returned from a function and indicating the number of bytes read is ignored."
      },
      "local_effect" : {
        "en" : "The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "short_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "short_read",
      "code-language" : "ruby",
      "name" : {
        "en" : "Ignoring number of bytes read"
      },
      "description" : {
        "en" : "Value returned from a function and indicating the number of bytes read is ignored."
      },
      "local_effect" : {
        "en" : "The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "short_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "short_read",
      "code-language" : "scala",
      "name" : {
        "en" : "Ignoring number of bytes read"
      },
      "description" : {
        "en" : "Value returned from a function and indicating the number of bytes read is ignored."
      },
      "local_effect" : {
        "en" : "The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "short_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "short_read",
      "code-language" : "swift",
      "name" : {
        "en" : "Ignoring number of bytes read"
      },
      "description" : {
        "en" : "Value returned from a function and indicating the number of bytes read is ignored."
      },
      "local_effect" : {
        "en" : "The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "short_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "short_read",
      "code-language" : "text",
      "name" : {
        "en" : "Ignoring number of bytes read"
      },
      "description" : {
        "en" : "Value returned from a function and indicating the number of bytes read is ignored."
      },
      "local_effect" : {
        "en" : "The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "short_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "short_read",
      "code-language" : "typescript",
      "name" : {
        "en" : "Ignoring number of bytes read"
      },
      "description" : {
        "en" : "Value returned from a function and indicating the number of bytes read is ignored."
      },
      "local_effect" : {
        "en" : "The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "short_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "short_read",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Ignoring number of bytes read"
      },
      "description" : {
        "en" : "Value returned from a function and indicating the number of bytes read is ignored."
      },
      "local_effect" : {
        "en" : "The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "short_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "user_required",
      "code-language" : "apex",
      "name" : {
        "en" : "Unchecked return value from user code"
      },
      "description" : {
        "en" : "Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "user_required",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "user_required",
      "code-language" : "javascript",
      "name" : {
        "en" : "Unchecked return value from user code"
      },
      "description" : {
        "en" : "Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "user_required",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "user_required",
      "code-language" : "php",
      "name" : {
        "en" : "Unchecked return value from user code"
      },
      "description" : {
        "en" : "Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "user_required",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "user_required",
      "code-language" : "python",
      "name" : {
        "en" : "Unchecked return value from user code"
      },
      "description" : {
        "en" : "Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "user_required",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "user_required",
      "code-language" : "ruby",
      "name" : {
        "en" : "Unchecked return value from user code"
      },
      "description" : {
        "en" : "Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "user_required",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "user_required",
      "code-language" : "scala",
      "name" : {
        "en" : "Unchecked return value from user code"
      },
      "description" : {
        "en" : "Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "user_required",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "user_required",
      "code-language" : "swift",
      "name" : {
        "en" : "Unchecked return value from user code"
      },
      "description" : {
        "en" : "Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "user_required",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "user_required",
      "code-language" : "text",
      "name" : {
        "en" : "Unchecked return value from user code"
      },
      "description" : {
        "en" : "Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "user_required",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "user_required",
      "code-language" : "typescript",
      "name" : {
        "en" : "Unchecked return value from user code"
      },
      "description" : {
        "en" : "Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "user_required",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CHECKED_RETURN",
      "subtype" : "user_required",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Unchecked return value from user code"
      },
      "description" : {
        "en" : "Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "user_required",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : null,
      "code-language" : "apex",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : null,
      "code-language" : "swift",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : null,
      "code-language" : "text",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "bit_and_with_zero",
      "code-language" : "apex",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "bit_and_with_zero",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "bit_and_with_zero",
      "code-language" : "swift",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "bit_and_with_zero",
      "code-language" : "text",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "bit_and_with_zero",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "extra_high_bits",
      "code-language" : "scala",
      "name" : {
        "en" : "Extra high-order bits"
      },
      "description" : {
        "en" : "In an operation, the high-order bits of wider operand do not affect the narrower operand"
      },
      "local_effect" : {
        "en" : "An operation that disregards the high-order bits may lead to incorrect value to be used in a logical computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "extra_high_bits",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "logical_vs_bitwise",
      "code-language" : "apex",
      "name" : {
        "en" : "Logical vs. bitwise operator"
      },
      "description" : {
        "en" : "Logical operator used in place of bitwise operator or vice versa"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "logical_vs_bitwise",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "logical_vs_bitwise",
      "code-language" : "swift",
      "name" : {
        "en" : "Logical vs. bitwise operator"
      },
      "description" : {
        "en" : "Logical operator used in place of bitwise operator or vice versa"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "logical_vs_bitwise",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "logical_vs_bitwise",
      "code-language" : "text",
      "name" : {
        "en" : "Logical vs. bitwise operator"
      },
      "description" : {
        "en" : "Logical operator used in place of bitwise operator or vice versa"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "logical_vs_bitwise",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "logical_vs_bitwise",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Logical vs. bitwise operator"
      },
      "description" : {
        "en" : "Logical operator used in place of bitwise operator or vice versa"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "logical_vs_bitwise",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "missing_parentheses",
      "code-language" : "apex",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "missing_parentheses",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "missing_parentheses",
      "code-language" : "swift",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "missing_parentheses",
      "code-language" : "text",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "missing_parentheses",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "operator_confusion",
      "code-language" : "apex",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "operator_confusion",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "operator_confusion",
      "code-language" : "swift",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "operator_confusion",
      "code-language" : "text",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "operator_confusion",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "result_independent_of_operands",
      "code-language" : "apex",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "result_independent_of_operands",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "result_independent_of_operands",
      "code-language" : "swift",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "result_independent_of_operands",
      "code-language" : "text",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "result_independent_of_operands",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "same_on_both_sides",
      "code-language" : "apex",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "same_on_both_sides",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "same_on_both_sides",
      "code-language" : "swift",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "same_on_both_sides",
      "code-language" : "text",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "same_on_both_sides",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "unnecessary_op_assign",
      "code-language" : "apex",
      "name" : {
        "en" : "Suspicious &= or |="
      },
      "description" : {
        "en" : "Using a bitwise assignment operator to assign a constant value"
      },
      "local_effect" : {
        "en" : "A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "unnecessary_op_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "unnecessary_op_assign",
      "code-language" : "swift",
      "name" : {
        "en" : "Suspicious &= or |="
      },
      "description" : {
        "en" : "Using a bitwise assignment operator to assign a constant value"
      },
      "local_effect" : {
        "en" : "A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "unnecessary_op_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "unnecessary_op_assign",
      "code-language" : "text",
      "name" : {
        "en" : "Suspicious &= or |="
      },
      "description" : {
        "en" : "Using a bitwise assignment operator to assign a constant value"
      },
      "local_effect" : {
        "en" : "A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "unnecessary_op_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "CONSTANT_EXPRESSION_RESULT",
      "subtype" : "unnecessary_op_assign",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Suspicious &= or |="
      },
      "description" : {
        "en" : "Using a bitwise assignment operator to assign a constant value"
      },
      "local_effect" : {
        "en" : "A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "unnecessary_op_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "CUDA.INACTIVE_THREAD_AT_COLLECTIVE_WARP",
      "subtype" : "unsafe_partial_warp",
      "code-language" : "cuda",
      "name" : {
        "en" : "Inactive lanes participating"
      },
      "description" : {
        "en" : "The number of threads launched requires the creation of a partial warp, but some shuffle operations use a width that is incompatible with the size of this partial warp."
      },
      "local_effect" : {
        "en" : "SHFL calculations might be made with stale or uninitialized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Rule violations",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "unsafe_partial_warp",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "CUDA.INACTIVE_THREAD_AT_COLLECTIVE_WARP",
      "subtype" : "use_activemask",
      "code-language" : "cuda",
      "name" : {
        "en" : "Invalid mask"
      },
      "description" : {
        "en" : "The __activemask() function does not synchronize, so it is rarely correct to use it."
      },
      "local_effect" : {
        "en" : "Program may produce incorrect results."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "use_activemask",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "CUDA.INACTIVE_THREAD_AT_COLLECTIVE_WARP",
      "subtype" : "use_incorrect_literal_mask",
      "code-language" : "cuda",
      "name" : {
        "en" : "A literal mask doesn't match the active threads"
      },
      "description" : {
        "en" : "A barrier that requires all threads in the warp to participate is only encountered by a subset or superset of the threads."
      },
      "local_effect" : {
        "en" : "The program may hang or produce invalid results as non-participating threads are used in a warp mask"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "use_incorrect_literal_mask",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "CUDA.INACTIVE_THREAD_AT_COLLECTIVE_WARP",
      "subtype" : "use_invalid_delta",
      "code-language" : "cuda",
      "name" : {
        "en" : "The delta in a shuffle operation is incompatible with the participating threads set"
      },
      "description" : {
        "en" : "Some non-participating threads will contribute values to the shuffle."
      },
      "local_effect" : {
        "en" : "The program will invoke undefined behaviour"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "use_invalid_delta",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "CUDA.INACTIVE_THREAD_AT_COLLECTIVE_WARP",
      "subtype" : "use_invalid_mask",
      "code-language" : "cuda",
      "name" : {
        "en" : "Invalid mask"
      },
      "description" : {
        "en" : "A mask that might be invalid is used."
      },
      "local_effect" : {
        "en" : "Program may hang or produce incorrect results."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "use_invalid_mask",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "CUDA.INACTIVE_THREAD_AT_COLLECTIVE_WARP",
      "subtype" : "use_mask_without_test",
      "code-language" : "cuda",
      "name" : {
        "en" : "Unchecked mask"
      },
      "description" : {
        "en" : "A barrier that requires all threads in the warp to participate is only encountered by a subset of the threads."
      },
      "local_effect" : {
        "en" : "Some threads may block forever waiting for synchronization with other threads."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "use_mask_without_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "CUDA.INACTIVE_THREAD_AT_COLLECTIVE_WARP",
      "subtype" : "use_unchecked_mask",
      "code-language" : "cuda",
      "name" : {
        "en" : "Possibly invalid mask"
      },
      "description" : {
        "en" : "A mask that could potentially be all bits zero is used without testing."
      },
      "local_effect" : {
        "en" : "Undefined behaviour is invoked if a thread calling this function does not have a bit set in the mask."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "use_unchecked_mask",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "CUDA.INACTIVE_THREAD_AT_COLLECTIVE_WARP",
      "subtype" : "use_unsafe_mask_shfl",
      "code-language" : "cuda",
      "name" : {
        "en" : "Inactive lanes participating"
      },
      "description" : {
        "en" : "A mask that might contain inactive lanes is used in a SHFL function for which that can lead to incorrect results."
      },
      "local_effect" : {
        "en" : "SHFL calculations might be made with stale or uninitialized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Rule violations",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "use_unsafe_mask_shfl",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "CUDA.SHARE_OBJECT_STREAM_ASSOCIATED",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Access managed object from wrong stream."
      },
      "description" : {
        "en" : "A memory access is performed when that memory is attached to a stream, but the access is not performed from within that stream."
      },
      "local_effect" : {
        "en" : "Undefined behaviour occurs if access is made to a managed variable when that variable is attached to a stream, and the access is not made from that stream."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DC.DANGEROUS",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Call to an inherently dangerous function"
      },
      "description" : {
        "en" : "Calling an inherently dangerous function for which better alternatives exist."
      },
      "local_effect" : {
        "en" : "Program invariants may be violated in unexpected and irrecoverable ways."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 242,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 761
      }
    },
    {
      "type" : "DC.DEADLOCK",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Call to a deadlock-prone function"
      },
      "description" : {
        "en" : "Using a deprecated API that can easily lead to a deadlock despite the existence of better alternatives."
      },
      "local_effect" : {
        "en" : "Program may deadlock: two or more threads will be waiting on each other indefinitely and unable to progress."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 833,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1225
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : null,
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "apex",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "fortran",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "html",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "ruby",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "scala",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "swift",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "text",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : null,
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "apex",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "fortran",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "html",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "ruby",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "scala",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "swift",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "text",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "DEFAULT_SECURITY_ISSUE_TYPE",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Other violation"
      },
      "description" : {
        "en" : "Unclassified violation"
      },
      "local_effect" : {
        "en" : "This violation is found by an unclassified checker, such as a Coverity SDK checker that implements a custom detection algorithm to uncover additional defects in source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "IDENTICAL_BRANCHES",
      "subtype" : "case",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Identical code for different cases"
      },
      "description" : {
        "en" : "The same code is executed for two cases in the same switch statement"
      },
      "local_effect" : {
        "en" : "The case is redundant or can be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "case",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "IDENTICAL_BRANCHES",
      "subtype" : "case",
      "code-language" : "python",
      "name" : {
        "en" : "Identical code for different cases"
      },
      "description" : {
        "en" : "The same code is executed for two cases in the same switch statement"
      },
      "local_effect" : {
        "en" : "The case is redundant or can be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "case",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "IDENTICAL_BRANCHES",
      "subtype" : "chain",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Identical code for different branches of an else-if chain"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The conditions could be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "chain",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "IDENTICAL_BRANCHES",
      "subtype" : "if",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "if",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "IDENTICAL_BRANCHES",
      "subtype" : "ternary",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "ternary",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "INFINITE_LOOP",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Infinite loop"
      },
      "description" : {
        "en" : "Infinite loop with unsatisfiable exit condition"
      },
      "local_effect" : {
        "en" : "The loop does not have a normal termination condition, so will continue until an abnormal condition arises."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 835,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1227
      }
    },
    {
      "type" : "INFINITE_LOOP",
      "subtype" : "no_escape",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Infinite loop"
      },
      "description" : {
        "en" : "Infinite loop with no exit condition"
      },
      "local_effect" : {
        "en" : "The loop will execute forever, or until system resources are exhausted or the system is otherwise stopped."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 835,
        "impact" : "Medium",
        "subcategory" : "no_escape",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1227
      }
    },
    {
      "type" : "INVALIDATE_ITERATOR",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Using invalid iterator"
      },
      "description" : {
        "en" : "An invalid or past-the-end iterator is being used"
      },
      "local_effect" : {
        "en" : "Undefined behavior may result; the program may crash or subtly misbehave."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 119,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "INVALIDATE_ITERATOR",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Using invalid iterator"
      },
      "description" : {
        "en" : "An invalid or past-the-end iterator is being used"
      },
      "local_effect" : {
        "en" : "Undefined behavior may result; the program may crash or subtly misbehave."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 119,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "INVALIDATE_ITERATOR",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Using invalid iterator"
      },
      "description" : {
        "en" : "An invalid or past-the-end iterator is being used"
      },
      "local_effect" : {
        "en" : "Undefined behavior may result; the program may crash or subtly misbehave."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 119,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "ISO_TS17961_2013_restrict",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "ISO TS17961 2013 Passing pointers into the same object as arguments to different restrict-qualified parameters."
      },
      "description" : {
        "en" : "restrict"
      },
      "local_effect" : {
        "en" : "ISO TS 17961:2013 Violation"
      },
      "origin" : "ISO TS 17961",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "ISO_TS17961_2013_restrict",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "ISO TS17961 2013 Passing pointers into the same object as arguments to different restrict-qualified parameters."
      },
      "description" : {
        "en" : "restrict"
      },
      "local_effect" : {
        "en" : "ISO TS 17961:2013 Violation"
      },
      "origin" : "ISO TS 17961",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "MISRA_C_2004_Rule_14.1",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "MISRA C-2004 Control Flow"
      },
      "description" : {
        "en" : "There shall be no unreachable code."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C-2004",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_C_2004_Rule_14.1",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "MISRA C-2004 Control Flow"
      },
      "description" : {
        "en" : "There shall be no unreachable code."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C-2004",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_C_2004_Rule_18.2",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "MISRA C-2004 Structures and Unions"
      },
      "description" : {
        "en" : "An object shall not be assigned to an overlapping object."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C-2004",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 416,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_C_2004_Rule_18.2",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "MISRA C-2004 Structures and Unions"
      },
      "description" : {
        "en" : "An object shall not be assigned to an overlapping object."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C-2004",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 416,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_C_2012_Rule_19.1",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "MISRA C-2012 Overlapping Storage"
      },
      "description" : {
        "en" : "An object shall not be assigned or copied to an overlapping object."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C-2012",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 416,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Mandatory"
      }
    },
    {
      "type" : "MISRA_C_2012_Rule_19.1",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "MISRA C-2012 Overlapping Storage"
      },
      "description" : {
        "en" : "An object shall not be assigned or copied to an overlapping object."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C-2012",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 416,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Mandatory"
      }
    },
    {
      "type" : "MISRA_Cpp_2008_Rule_0_2_1",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "MISRA C++-2008 Language Independent Issues"
      },
      "description" : {
        "en" : "An object shall not be assigned to an overlapping object."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C++-2008",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 416,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_Cpp_2008_Rule_0_2_1",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "MISRA C++-2008 Language Independent Issues"
      },
      "description" : {
        "en" : "An object shall not be assigned to an overlapping object."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C++-2008",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 416,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_Cpp_2008_Rule_15_1_1",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "MISRA C++-2008 Exception Handling"
      },
      "description" : {
        "en" : "The assignment-expression of a throw statement shall not itself cause an exception to be thrown."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C++-2008",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 755,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_Cpp_2008_Rule_15_1_1",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "MISRA C++-2008 Exception Handling"
      },
      "description" : {
        "en" : "The assignment-expression of a throw statement shall not itself cause an exception to be thrown."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C++-2008",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 755,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_Cpp_2008_Rule_15_3_1",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "MISRA C++-2008 Exception Handling"
      },
      "description" : {
        "en" : "Exceptions shall be raised only after start-up and before termination of the program."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C++-2008",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 755,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_Cpp_2008_Rule_15_3_1",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "MISRA C++-2008 Exception Handling"
      },
      "description" : {
        "en" : "Exceptions shall be raised only after start-up and before termination of the program."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C++-2008",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 755,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_Cpp_2008_Rule_15_3_2",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "MISRA C++-2008 Exception Handling"
      },
      "description" : {
        "en" : "There should be at least one exception handler to catch all otherwise unhandled exceptions."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C++-2008",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 703,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Advisory"
      }
    },
    {
      "type" : "MISRA_Cpp_2008_Rule_15_3_2",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "MISRA C++-2008 Exception Handling"
      },
      "description" : {
        "en" : "There should be at least one exception handler to catch all otherwise unhandled exceptions."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C++-2008",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 703,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Advisory"
      }
    },
    {
      "type" : "MISRA_Cpp_2008_Rule_15_3_4",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "MISRA C++-2008 Exception Handling"
      },
      "description" : {
        "en" : "Each exception explicitly thrown in the code shall have a handler of a compatible type in all call paths that could lead to that point."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C++-2008",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 755,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_Cpp_2008_Rule_15_3_4",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "MISRA C++-2008 Exception Handling"
      },
      "description" : {
        "en" : "Each exception explicitly thrown in the code shall have a handler of a compatible type in all call paths that could lead to that point."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C++-2008",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 755,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_Cpp_2008_Rule_15_5_1",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "MISRA C++-2008 Exception Handling"
      },
      "description" : {
        "en" : "A class destructor shall not exit with an exception."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C++-2008",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 755,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_Cpp_2008_Rule_15_5_1",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "MISRA C++-2008 Exception Handling"
      },
      "description" : {
        "en" : "A class destructor shall not exit with an exception."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C++-2008",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 755,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_Cpp_2008_Rule_15_5_2",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "MISRA C++-2008 Exception Handling"
      },
      "description" : {
        "en" : "Where a function's declaration includes an exception specification, the function shall only be capable of throwing exceptions of the indicated type(s)."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C++-2008",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 758,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_Cpp_2008_Rule_15_5_2",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "MISRA C++-2008 Exception Handling"
      },
      "description" : {
        "en" : "Where a function's declaration includes an exception specification, the function shall only be capable of throwing exceptions of the indicated type(s)."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C++-2008",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 758,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_Cpp_2008_Rule_15_5_3",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "MISRA C++-2008 Exception Handling"
      },
      "description" : {
        "en" : "The terminate() function shall not be called implicitly."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C++-2008",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 758,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISRA_Cpp_2008_Rule_15_5_3",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "MISRA C++-2008 Exception Handling"
      },
      "description" : {
        "en" : "The terminate() function shall not be called implicitly."
      },
      "local_effect" : {
        "en" : "MISRA Violation"
      },
      "origin" : "MISRA C++-2008",
      "cim_checker_properties" : {
        "category" : "Coding standard violation",
        "cweCategory" : 758,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null,
        "ruleStrength" : "Required"
      }
    },
    {
      "type" : "MISSING_RESTORE",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "MISSING_RESTORE",
      "subtype" : "likely",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "likely",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "MISSING_RESTORE",
      "subtype" : "possible",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Possible failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then possibly intending to restore it to its original state but not doing so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then possibly intending to restore it to the expected value but not doing so along a path.  Such code is only incorrect if the intent really was to restore along all paths."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 573,
        "impact" : "Low",
        "subcategory" : "possible",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "NO_EFFECT",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Expression with no effect"
      },
      "description" : {
        "en" : "An expression is useless because it has no side effects and its result is ignored."
      },
      "local_effect" : {
        "en" : "Perhaps the code was intended to affect the behavior of the program, but it does not."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "NO_EFFECT",
      "subtype" : "self_assign",
      "code-language" : "fortran",
      "name" : {
        "en" : "Self assignment"
      },
      "description" : {
        "en" : "Assignment of a variable or expression to itself has no effect"
      },
      "local_effect" : {
        "en" : "The variable's value will not change, so the assignment has no effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 665,
        "impact" : "Medium",
        "subcategory" : "self_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "NO_EFFECT",
      "subtype" : "self_assign",
      "code-language" : "python",
      "name" : {
        "en" : "Self assignment"
      },
      "description" : {
        "en" : "Assignment of a variable or expression to itself has no effect"
      },
      "local_effect" : {
        "en" : "The variable's value will not change, so the assignment has no effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 665,
        "impact" : "Medium",
        "subcategory" : "self_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "NO_EFFECT",
      "subtype" : "useless_continue",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Continue has no effect"
      },
      "description" : {
        "en" : "Continue might be at the wrong place"
      },
      "local_effect" : {
        "en" : "Continue has no effect on control flow."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 465,
        "impact" : "Medium",
        "subcategory" : "useless_continue",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1433
      }
    },
    {
      "type" : "NO_EFFECT",
      "subtype" : "useless_continue",
      "code-language" : "cuda",
      "name" : {
        "en" : "Continue has no effect"
      },
      "description" : {
        "en" : "Continue might be at the wrong place"
      },
      "local_effect" : {
        "en" : "Continue has no effect on control flow."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 465,
        "impact" : "Medium",
        "subcategory" : "useless_continue",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1433
      }
    },
    {
      "type" : "NO_EFFECT",
      "subtype" : "useless_continue",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Continue has no effect"
      },
      "description" : {
        "en" : "Continue might be at the wrong place"
      },
      "local_effect" : {
        "en" : "Continue has no effect on control flow."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 465,
        "impact" : "Medium",
        "subcategory" : "useless_continue",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1433
      }
    },
    {
      "type" : "ORM_LOAD_NULL_CHECK",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "ORM usage error"
      },
      "description" : {
        "en" : "A possibly proxy object is pointlessly tested for null."
      },
      "local_effect" : {
        "en" : "Use of a proxy for a non-existent object will throw an exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 253,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "PW.ASSIGN_WHERE_COMPARE_MEANT",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Assign instead of compare"
      },
      "description" : {
        "en" : "An assignment (=) occurs where compare (==) is probably intended"
      },
      "local_effect" : {
        "en" : "The variable will be assigned the value that it was intended to compare against, causing the result to always be true."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 481,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 966
      }
    },
    {
      "type" : "PW.ASSIGN_WHERE_COMPARE_MEANT",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Assign instead of compare"
      },
      "description" : {
        "en" : "An assignment (=) occurs where compare (==) is probably intended"
      },
      "local_effect" : {
        "en" : "The variable will be assigned the value that it was intended to compare against, causing the result to always be true."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 481,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 966
      }
    },
    {
      "type" : "PW.BAD_CAST",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Lossy integer to pointer"
      },
      "description" : {
        "en" : "A cast from an integer to a pointer of narrower precision"
      },
      "local_effect" : {
        "en" : "Some bits of the integer value will be lost in the conversion, possibly producing a corrupt pointer value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 704,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1151
      }
    },
    {
      "type" : "PW.BAD_CAST",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Lossy integer to pointer"
      },
      "description" : {
        "en" : "A cast from an integer to a pointer of narrower precision"
      },
      "local_effect" : {
        "en" : "Some bits of the integer value will be lost in the conversion, possibly producing a corrupt pointer value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 704,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1151
      }
    },
    {
      "type" : "PW.BAD_PRINTF_FORMAT_STRING",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Printf format string issue"
      },
      "description" : {
        "en" : "A printf format string contains an unrecognized format specifier"
      },
      "local_effect" : {
        "en" : "The format string may be interpreted incorrectly by printf, causing undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 628,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1094
      }
    },
    {
      "type" : "PW.BAD_PRINTF_FORMAT_STRING",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Printf format string issue"
      },
      "description" : {
        "en" : "A printf format string contains an unrecognized format specifier"
      },
      "local_effect" : {
        "en" : "The format string may be interpreted incorrectly by printf, causing undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 628,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1094
      }
    },
    {
      "type" : "PW.BRANCH_PAST_INITIALIZATION",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Branch past initialization"
      },
      "description" : {
        "en" : "A goto jumps past the initialization of a variable"
      },
      "local_effect" : {
        "en" : "If the variable is used after the target, it will be uninitialized."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 457,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "PW.BRANCH_PAST_INITIALIZATION",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Branch past initialization"
      },
      "description" : {
        "en" : "A goto jumps past the initialization of a variable"
      },
      "local_effect" : {
        "en" : "If the variable is used after the target, it will be uninitialized."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 457,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "PW.CONVERSION_TO_POINTER_LOSES_BITS",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Lossy integer to pointer"
      },
      "description" : {
        "en" : "A cast from an integer to a pointer of narrower precision"
      },
      "local_effect" : {
        "en" : "Some bits of the integer value will be lost in the conversion, possibly producing a corrupt pointer value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 704,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1151
      }
    },
    {
      "type" : "PW.CONVERSION_TO_POINTER_LOSES_BITS",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Lossy integer to pointer"
      },
      "description" : {
        "en" : "A cast from an integer to a pointer of narrower precision"
      },
      "local_effect" : {
        "en" : "Some bits of the integer value will be lost in the conversion, possibly producing a corrupt pointer value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 704,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1151
      }
    },
    {
      "type" : "PW.DIVIDE_BY_ZERO",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Divide by zero"
      },
      "description" : {
        "en" : "Divide by zero"
      },
      "local_effect" : {
        "en" : "The program will have undefined behavior, likely a crash."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "PW.DIVIDE_BY_ZERO",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Divide by zero"
      },
      "description" : {
        "en" : "Divide by zero"
      },
      "local_effect" : {
        "en" : "The program will have undefined behavior, likely a crash."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "PW.EXPR_HAS_NO_EFFECT",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Expression with no effect"
      },
      "description" : {
        "en" : "An expression with no side-effect or unintended effect indicates a possible logic flaw"
      },
      "local_effect" : {
        "en" : "The expression will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "PW.EXPR_HAS_NO_EFFECT",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Expression with no effect"
      },
      "description" : {
        "en" : "An expression with no side-effect or unintended effect indicates a possible logic flaw"
      },
      "local_effect" : {
        "en" : "The expression will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "PW.INCLUDE_RECURSION",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Recursion in included headers"
      },
      "description" : {
        "en" : "Recursion in included header files"
      },
      "local_effect" : {
        "en" : "Compilation errors or even run-time errors (in the presence of function overloading) can result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Build system issues",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "PW.INCLUDE_RECURSION",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Recursion in included headers"
      },
      "description" : {
        "en" : "Recursion in included header files"
      },
      "local_effect" : {
        "en" : "Compilation errors or even run-time errors (in the presence of function overloading) can result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Build system issues",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "PW.INTEGER_OVERFLOW",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Integer overflow warning"
      },
      "description" : {
        "en" : "An integer overflow occurs at compile time when parsing this expression"
      },
      "local_effect" : {
        "en" : "The value of the constant expression may be an unexpected very small or negative value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 190,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 328
      }
    },
    {
      "type" : "PW.INTEGER_OVERFLOW",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Integer overflow warning"
      },
      "description" : {
        "en" : "An integer overflow occurs at compile time when parsing this expression"
      },
      "local_effect" : {
        "en" : "The value of the constant expression may be an unexpected very small or negative value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 190,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 328
      }
    },
    {
      "type" : "PW.INTEGER_TOO_LARGE",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Integer overflow warning"
      },
      "description" : {
        "en" : "An integer overflow occurs at compile time when parsing this expression"
      },
      "local_effect" : {
        "en" : "The value of the constant expression may be an unexpected very small or negative value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 190,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 328
      }
    },
    {
      "type" : "PW.INTEGER_TOO_LARGE",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Integer overflow warning"
      },
      "description" : {
        "en" : "An integer overflow occurs at compile time when parsing this expression"
      },
      "local_effect" : {
        "en" : "The value of the constant expression may be an unexpected very small or negative value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 190,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 328
      }
    },
    {
      "type" : "PW.NON_CONST_PRINTF_FORMAT_STRING",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Non-constant format string"
      },
      "description" : {
        "en" : "A non-constant printf format string may be susceptible to format string attacks"
      },
      "local_effect" : {
        "en" : "If an attacker can affect the format string, they may leverage it to corrupt the stack and take over execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 134,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 659
      }
    },
    {
      "type" : "PW.NON_CONST_PRINTF_FORMAT_STRING",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Non-constant format string"
      },
      "description" : {
        "en" : "A non-constant printf format string may be susceptible to format string attacks"
      },
      "local_effect" : {
        "en" : "If an attacker can affect the format string, they may leverage it to corrupt the stack and take over execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 134,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 659
      }
    },
    {
      "type" : "PW.PRINTF_ARG_MISMATCH",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Printf arg type mismatch"
      },
      "description" : {
        "en" : "A printf format string does not match the types of one of the arguments"
      },
      "local_effect" : {
        "en" : "The value will be misinterpreted by printf, causing incorrect output and possibly out-of-bounds memory access."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 686,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1136
      }
    },
    {
      "type" : "PW.PRINTF_ARG_MISMATCH",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Printf arg type mismatch"
      },
      "description" : {
        "en" : "A printf format string does not match the types of one of the arguments"
      },
      "local_effect" : {
        "en" : "The value will be misinterpreted by printf, causing incorrect output and possibly out-of-bounds memory access."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 686,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1136
      }
    },
    {
      "type" : "PW.RETURN_PTR_TO_LOCAL_TEMP",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Returning pointer to temp"
      },
      "description" : {
        "en" : "Returning a pointer to a temporary variable, which will be destroyed on function exit"
      },
      "local_effect" : {
        "en" : "The pointer will reference freed memory, causing a use-after-free in the caller if the pointer is ever used."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 562,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1033
      }
    },
    {
      "type" : "PW.RETURN_PTR_TO_LOCAL_TEMP",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Returning pointer to temp"
      },
      "description" : {
        "en" : "Returning a pointer to a temporary variable, which will be destroyed on function exit"
      },
      "local_effect" : {
        "en" : "The pointer will reference freed memory, causing a use-after-free in the caller if the pointer is ever used."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 562,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1033
      }
    },
    {
      "type" : "PW.SHIFT_COUNT_TOO_LARGE",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Integer overflow warning"
      },
      "description" : {
        "en" : "An integer overflow occurs at compile time when parsing this expression"
      },
      "local_effect" : {
        "en" : "The value of the constant expression may be an unexpected very small or negative value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 190,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 328
      }
    },
    {
      "type" : "PW.SHIFT_COUNT_TOO_LARGE",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Integer overflow warning"
      },
      "description" : {
        "en" : "An integer overflow occurs at compile time when parsing this expression"
      },
      "local_effect" : {
        "en" : "The value of the constant expression may be an unexpected very small or negative value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 190,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 328
      }
    },
    {
      "type" : "PW.TOO_FEW_PRINTF_ARGS",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Printf arg count mismatch"
      },
      "description" : {
        "en" : "The number of arguments to printf does not match the format string"
      },
      "local_effect" : {
        "en" : "If there are too many arguments, some values will be ignored; if there are too few, undefined behavior may result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 685,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1135
      }
    },
    {
      "type" : "PW.TOO_FEW_PRINTF_ARGS",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Printf arg count mismatch"
      },
      "description" : {
        "en" : "The number of arguments to printf does not match the format string"
      },
      "local_effect" : {
        "en" : "If there are too many arguments, some values will be ignored; if there are too few, undefined behavior may result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 685,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1135
      }
    },
    {
      "type" : "PW.TOO_MANY_PRINTF_ARGS",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Printf arg count mismatch"
      },
      "description" : {
        "en" : "The number of arguments to printf does not match the format string"
      },
      "local_effect" : {
        "en" : "If there are too many arguments, some values will be ignored; if there are too few, undefined behavior may result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 685,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1135
      }
    },
    {
      "type" : "PW.TOO_MANY_PRINTF_ARGS",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Printf arg count mismatch"
      },
      "description" : {
        "en" : "The number of arguments to printf does not match the format string"
      },
      "local_effect" : {
        "en" : "If there are too many arguments, some values will be ignored; if there are too few, undefined behavior may result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 685,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1135
      }
    },
    {
      "type" : "PW.UNSIGNED_COMPARE_WITH_NEGATIVE",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unsigned compared with neg"
      },
      "description" : {
        "en" : "An unsigned value, which can never be less than 0, is compared with a negative value"
      },
      "local_effect" : {
        "en" : "The condition will not ensure a constraint on the value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 570,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1040
      }
    },
    {
      "type" : "PW.UNSIGNED_COMPARE_WITH_NEGATIVE",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Unsigned compared with neg"
      },
      "description" : {
        "en" : "An unsigned value, which can never be less than 0, is compared with a negative value"
      },
      "local_effect" : {
        "en" : "The condition will not ensure a constraint on the value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 570,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1040
      }
    },
    {
      "type" : "REGEX_CONFUSION",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unintended regular expression"
      },
      "description" : {
        "en" : "A string intended to be matched literally is instead treated as a regular expression, changing its meaning."
      },
      "local_effect" : {
        "en" : "The string manipulation will return incorrect results for some inputs."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 185,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 708
      }
    },
    {
      "type" : "REVERSE_INULL",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Dereference before null check"
      },
      "description" : {
        "en" : "All paths that lead to this null pointer comparison already dereference the pointer earlier"
      },
      "local_effect" : {
        "en" : "There may be a null pointer exception, or else the comparison against null is unnecessary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "SWAPPED_ARGUMENTS",
      "subtype" : null,
      "code-language" : "apex",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "SWAPPED_ARGUMENTS",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "SWAPPED_ARGUMENTS",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "SWAPPED_ARGUMENTS",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "SWAPPED_ARGUMENTS",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "SWAPPED_ARGUMENTS",
      "subtype" : null,
      "code-language" : "ruby",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "SWAPPED_ARGUMENTS",
      "subtype" : null,
      "code-language" : "scala",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "SWAPPED_ARGUMENTS",
      "subtype" : null,
      "code-language" : "swift",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "SWAPPED_ARGUMENTS",
      "subtype" : null,
      "code-language" : "text",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "SWAPPED_ARGUMENTS",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "UNINTENDED_INTEGER_DIVISION",
      "subtype" : null,
      "code-language" : "apex",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "UNINTENDED_INTEGER_DIVISION",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "UNINTENDED_INTEGER_DIVISION",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "UNINTENDED_INTEGER_DIVISION",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "UNINTENDED_INTEGER_DIVISION",
      "subtype" : null,
      "code-language" : "ruby",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "UNINTENDED_INTEGER_DIVISION",
      "subtype" : null,
      "code-language" : "swift",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "UNINTENDED_INTEGER_DIVISION",
      "subtype" : null,
      "code-language" : "text",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "UNINTENDED_INTEGER_DIVISION",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "UNINTENDED_INTEGER_DIVISION",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "UNUSED_VALUE",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unused value"
      },
      "description" : {
        "en" : "A value assigned to a variable is never used."
      },
      "local_effect" : {
        "en" : "An assigned value that is never used may represent unnecessary computation, an incorrect algorithm, or possibly the need for cleanup or refactoring."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 563,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1034
      }
    },
    {
      "type" : "UNUSED_VALUE",
      "subtype" : "adjacent",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unused value"
      },
      "description" : {
        "en" : "A value assigned to a variable is never used."
      },
      "local_effect" : {
        "en" : "An assigned value that is never used may represent unnecessary computation, an incorrect algorithm, or possibly the need for cleanup or refactoring."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 563,
        "impact" : "Medium",
        "subcategory" : "adjacent",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1034
      }
    },
    {
      "type" : "VOLATILE_ATOMICITY",
      "subtype" : "read_padding",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Volatile not atomically updated"
      },
      "description" : {
        "en" : "A variable is not correctly updated"
      },
      "local_effect" : {
        "en" : "Two objects that the programmer expected would compare equal instead compare unequal."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 188,
        "impact" : "High",
        "subcategory" : "read_padding",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "WRONG_METHOD",
      "subtype" : null,
      "code-language" : "apex",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "WRONG_METHOD",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "WRONG_METHOD",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "WRONG_METHOD",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "WRONG_METHOD",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "WRONG_METHOD",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "WRONG_METHOD",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "WRONG_METHOD",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "WRONG_METHOD",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "WRONG_METHOD",
      "subtype" : null,
      "code-language" : "ruby",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "WRONG_METHOD",
      "subtype" : null,
      "code-language" : "scala",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "WRONG_METHOD",
      "subtype" : null,
      "code-language" : "swift",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "WRONG_METHOD",
      "subtype" : null,
      "code-language" : "text",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "WRONG_METHOD",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "WRONG_METHOD",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "__UNSAFE_XML_PARSE_CONFIG_CPP",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "unsafe_xml_parse_config"
      },
      "description" : {
        "en" : "Unsafe XML parsing configuration"
      },
      "local_effect" : {
        "en" : "Unsafe XML parsing configuration is vulnerable to various attacks, such as XML external entity attack, billion laughs attack, XML parsing recovery error attack, Xinclude attack."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1434
      }
    },
    {
      "type" : "__UNSAFE_XML_PARSE_CONFIG_CPP",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "unsafe_xml_parse_config"
      },
      "description" : {
        "en" : "Unsafe XML parsing configuration"
      },
      "local_effect" : {
        "en" : "Unsafe XML parsing configuration is vulnerable to various attacks, such as XML external entity attack, billion laughs attack, XML parsing recovery error attack, Xinclude attack."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1434
      }
    },
    {
      "type" : "android_capability_leak",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Capability exposed without permission check"
      },
      "description" : {
        "en" : "A capability is exposed without checking whether the caller has permission for it."
      },
      "local_effect" : {
        "en" : "A malicious application could abuse the unprotected capability to perform activities for which it does not have permission."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 926,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 342
      }
    },
    {
      "type" : "android_capability_leak",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Capability exposed without permission check"
      },
      "description" : {
        "en" : "A capability is exposed without checking whether the caller has permission for it."
      },
      "local_effect" : {
        "en" : "A malicious application could abuse the unprotected capability to perform activities for which it does not have permission."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 926,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 342
      }
    },
    {
      "type" : "android_exposed_preferences",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Insufficient protection of data"
      },
      "description" : {
        "en" : "Creating a SharedPreferences object in a mode other than MODE_PRIVATE."
      },
      "local_effect" : {
        "en" : "Malicious applications can read or write this SharedPreferences object."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 538,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1296
      }
    },
    {
      "type" : "android_implicit_intent",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Implicit intent use"
      },
      "description" : {
        "en" : "Using an intent without setting a specific receiver component."
      },
      "local_effect" : {
        "en" : "A malicious application could register to receive this Intent and see any information in it."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 927,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 333
      }
    },
    {
      "type" : "android_implicit_intent",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Implicit intent use"
      },
      "description" : {
        "en" : "Using an intent without setting a specific receiver component."
      },
      "local_effect" : {
        "en" : "A malicious application could register to receive this Intent and see any information in it."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 927,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 333
      }
    },
    {
      "type" : "android_missing_permission_for_broadcast",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Missing permission for broadcast"
      },
      "description" : {
        "en" : "A broadcast is sent or received without appropriate permissions."
      },
      "local_effect" : {
        "en" : "A malicious application could send or receive these broadcasts."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 925,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1254
      }
    },
    {
      "type" : "android_missing_permission_for_broadcast",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Missing permission for broadcast"
      },
      "description" : {
        "en" : "A broadcast is sent or received without appropriate permissions."
      },
      "local_effect" : {
        "en" : "A malicious application could send or receive these broadcasts."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 925,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1254
      }
    },
    {
      "type" : "android_unrestricted_access_to_file",
      "subtype" : "unrestricted_database_access",
      "code-language" : "java",
      "name" : {
        "en" : "Database on external storage"
      },
      "description" : {
        "en" : "There are no access restrictions on external storage."
      },
      "local_effect" : {
        "en" : "An attacker can access and modify the information contained in this database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 921,
        "impact" : "Low",
        "subcategory" : "unrestricted_database_access",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1252
      }
    },
    {
      "type" : "android_unrestricted_access_to_file",
      "subtype" : "unrestricted_database_access",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Database on external storage"
      },
      "description" : {
        "en" : "There are no access restrictions on external storage."
      },
      "local_effect" : {
        "en" : "An attacker can access and modify the information contained in this database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 921,
        "impact" : "Low",
        "subcategory" : "unrestricted_database_access",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1252
      }
    },
    {
      "type" : "android_unrestricted_access_to_file",
      "subtype" : "unrestricted_database_read",
      "code-language" : "java",
      "name" : {
        "en" : "Exposed database read"
      },
      "description" : {
        "en" : "Read access to the database is not restricted to this application."
      },
      "local_effect" : {
        "en" : "An attacker can access any sensitive information stored in this database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 538,
        "impact" : "Low",
        "subcategory" : "unrestricted_database_read",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1443
      }
    },
    {
      "type" : "android_unrestricted_access_to_file",
      "subtype" : "unrestricted_database_read",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Exposed database read"
      },
      "description" : {
        "en" : "Read access to the database is not restricted to this application."
      },
      "local_effect" : {
        "en" : "An attacker can access any sensitive information stored in this database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 538,
        "impact" : "Low",
        "subcategory" : "unrestricted_database_read",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1443
      }
    },
    {
      "type" : "android_unrestricted_access_to_file",
      "subtype" : "unrestricted_database_write",
      "code-language" : "java",
      "name" : {
        "en" : "Exposed database write"
      },
      "description" : {
        "en" : "Read/write access to the database is not restricted to this application."
      },
      "local_effect" : {
        "en" : "An attacker can access and modify the information stored in this database"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 538,
        "impact" : "Low",
        "subcategory" : "unrestricted_database_write",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1443
      }
    },
    {
      "type" : "android_unrestricted_access_to_file",
      "subtype" : "unrestricted_database_write",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Exposed database write"
      },
      "description" : {
        "en" : "Read/write access to the database is not restricted to this application."
      },
      "local_effect" : {
        "en" : "An attacker can access and modify the information stored in this database"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 538,
        "impact" : "Low",
        "subcategory" : "unrestricted_database_write",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1443
      }
    },
    {
      "type" : "android_unrestricted_access_to_file",
      "subtype" : "unrestricted_file_access",
      "code-language" : "java",
      "name" : {
        "en" : "File on external storage"
      },
      "description" : {
        "en" : "There are no access restrictions on external storage."
      },
      "local_effect" : {
        "en" : "An attacker can access and modify the information contained in this file."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 921,
        "impact" : "Low",
        "subcategory" : "unrestricted_file_access",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1252
      }
    },
    {
      "type" : "android_unrestricted_access_to_file",
      "subtype" : "unrestricted_file_access",
      "code-language" : "kotlin",
      "name" : {
        "en" : "File on external storage"
      },
      "description" : {
        "en" : "There are no access restrictions on external storage."
      },
      "local_effect" : {
        "en" : "An attacker can access and modify the information contained in this file."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 921,
        "impact" : "Low",
        "subcategory" : "unrestricted_file_access",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1252
      }
    },
    {
      "type" : "android_unrestricted_access_to_file",
      "subtype" : "unrestricted_file_read",
      "code-language" : "java",
      "name" : {
        "en" : "Exposed file read"
      },
      "description" : {
        "en" : "Read access to the file is not restricted to this application."
      },
      "local_effect" : {
        "en" : "An attacker can access any sensitive information stored in this file."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 538,
        "impact" : "Low",
        "subcategory" : "unrestricted_file_read",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1443
      }
    },
    {
      "type" : "android_unrestricted_access_to_file",
      "subtype" : "unrestricted_file_read",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Exposed file read"
      },
      "description" : {
        "en" : "Read access to the file is not restricted to this application."
      },
      "local_effect" : {
        "en" : "An attacker can access any sensitive information stored in this file."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 538,
        "impact" : "Low",
        "subcategory" : "unrestricted_file_read",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1443
      }
    },
    {
      "type" : "android_unrestricted_access_to_file",
      "subtype" : "unrestricted_file_write",
      "code-language" : "java",
      "name" : {
        "en" : "Exposed file write"
      },
      "description" : {
        "en" : "Read/write access to this file is not restricted to this application."
      },
      "local_effect" : {
        "en" : "An attacker can access and modify this file."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 538,
        "impact" : "Low",
        "subcategory" : "unrestricted_file_write",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1443
      }
    },
    {
      "type" : "android_unrestricted_access_to_file",
      "subtype" : "unrestricted_file_write",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Exposed file write"
      },
      "description" : {
        "en" : "Read/write access to this file is not restricted to this application."
      },
      "local_effect" : {
        "en" : "An attacker can access and modify this file."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 538,
        "impact" : "Low",
        "subcategory" : "unrestricted_file_write",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1443
      }
    },
    {
      "type" : "angular_expression_injection",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Angular Expression Injection"
      },
      "description" : {
        "en" : "An untrusted value is used to construct an Angular expression."
      },
      "local_effect" : {
        "en" : "An attacker may be able to maliciously affect the application's behavior by controlling an Angular expression."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 917,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 269
      }
    },
    {
      "type" : "angular_expression_injection",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Angular Expression Injection"
      },
      "description" : {
        "en" : "An untrusted value is used to construct an Angular expression."
      },
      "local_effect" : {
        "en" : "An attacker may be able to maliciously affect the application's behavior by controlling an Angular expression."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 917,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 269
      }
    },
    {
      "type" : "array_compared_against_null",
      "subtype" : "no_effect",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Array compared against 0"
      },
      "description" : {
        "en" : "Array compared against NULL pointer"
      },
      "local_effect" : {
        "en" : "The address of an array is never NULL, so the comparison will always evaluate the same way."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "array_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1040
      }
    },
    {
      "type" : "array_compared_against_null",
      "subtype" : "no_effect",
      "code-language" : "cuda",
      "name" : {
        "en" : "Array compared against 0"
      },
      "description" : {
        "en" : "Array compared against NULL pointer"
      },
      "local_effect" : {
        "en" : "The address of an array is never NULL, so the comparison will always evaluate the same way."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "array_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1040
      }
    },
    {
      "type" : "array_compared_against_null",
      "subtype" : "no_effect",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Array compared against 0"
      },
      "description" : {
        "en" : "Array compared against NULL pointer"
      },
      "local_effect" : {
        "en" : "The address of an array is never NULL, so the comparison will always evaluate the same way."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "array_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1040
      }
    },
    {
      "type" : "asp_viewstate_mac",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Disabled View State MAC generation"
      },
      "description" : {
        "en" : "View State Machine Authentication Code (MAC) generation was disabled"
      },
      "local_effect" : {
        "en" : "In .NET 4.5.1 and earlier, disabling View State Machine Authentication Code (MAC) generation potentially allows an attacker to upload and execute arbitrary code on the web server."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 354,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 123
      }
    },
    {
      "type" : "bad_cert_verification",
      "subtype" : "bad_hostname_verifier",
      "code-language" : "java",
      "name" : {
        "en" : "Insecure SSL/TLS: bad HostnameVerifier"
      },
      "description" : {
        "en" : "Turning off hostname verification when establishing SSL/TLS connections."
      },
      "local_effect" : {
        "en" : "An attacker can execute a man-in-the-middle attack to eavesdrop on or interfere with all traffic in the session."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 297,
        "impact" : "High",
        "subcategory" : "bad_hostname_verifier",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 166
      }
    },
    {
      "type" : "bad_cert_verification",
      "subtype" : "bad_hostname_verifier",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Insecure SSL/TLS: bad HostnameVerifier"
      },
      "description" : {
        "en" : "Turning off hostname verification when establishing SSL/TLS connections."
      },
      "local_effect" : {
        "en" : "An attacker can execute a man-in-the-middle attack to eavesdrop on or interfere with all traffic in the session."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 297,
        "impact" : "High",
        "subcategory" : "bad_hostname_verifier",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 166
      }
    },
    {
      "type" : "bad_cert_verification",
      "subtype" : "bad_revocation_check",
      "code-language" : "java",
      "name" : {
        "en" : "Insecure SSL/TLS: disabling certificate revocation check"
      },
      "description" : {
        "en" : "Turning off checking for certificate revocation fails to properly authenticate its SSL/TLS peer."
      },
      "local_effect" : {
        "en" : "Can connect to a system with a revoked certificate, which is almost certainly malicious."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 299,
        "impact" : "High",
        "subcategory" : "bad_revocation_check",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 808
      }
    },
    {
      "type" : "bad_cert_verification",
      "subtype" : "bad_revocation_check",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Insecure SSL/TLS: disabling certificate revocation check"
      },
      "description" : {
        "en" : "Turning off checking for certificate revocation fails to properly authenticate its SSL/TLS peer."
      },
      "local_effect" : {
        "en" : "Can connect to a system with a revoked certificate, which is almost certainly malicious."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 299,
        "impact" : "High",
        "subcategory" : "bad_revocation_check",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 808
      }
    },
    {
      "type" : "bad_cert_verification",
      "subtype" : "bad_ssl_session",
      "code-language" : "java",
      "name" : {
        "en" : "Insecure SSL/TLS: SSLSession hostname not verified"
      },
      "description" : {
        "en" : "When using raw SSLSocket, SSLEngine, or SSLSocketFactory one must verify the hostname by calling HostnameVerifier.verify on the corresponding SSLSession."
      },
      "local_effect" : {
        "en" : "It may be possible for a redirection or spoofing attack to allow a malicious host with a valid certificate to impersonate a trusted host."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 297,
        "impact" : "High",
        "subcategory" : "bad_ssl_session",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 166
      }
    },
    {
      "type" : "bad_cert_verification",
      "subtype" : "bad_ssl_session",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Insecure SSL/TLS: SSLSession hostname not verified"
      },
      "description" : {
        "en" : "When using raw SSLSocket, SSLEngine, or SSLSocketFactory one must verify the hostname by calling HostnameVerifier.verify on the corresponding SSLSession."
      },
      "local_effect" : {
        "en" : "It may be possible for a redirection or spoofing attack to allow a malicious host with a valid certificate to impersonate a trusted host."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 297,
        "impact" : "High",
        "subcategory" : "bad_ssl_session",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 166
      }
    },
    {
      "type" : "bad_cert_verification",
      "subtype" : "bad_trust_manager",
      "code-language" : "java",
      "name" : {
        "en" : "Insecure SSL/TLS: bad TrustManager"
      },
      "description" : {
        "en" : "The TrustManager fails to properly authenticate its SSL/TLS peer."
      },
      "local_effect" : {
        "en" : "An attacker can execute a man-in-the-middle attack to eavesdrop on or interfere with all traffic in the session."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 296,
        "impact" : "High",
        "subcategory" : "bad_trust_manager",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 161
      }
    },
    {
      "type" : "bad_cert_verification",
      "subtype" : "bad_trust_manager",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Insecure SSL/TLS: bad TrustManager"
      },
      "description" : {
        "en" : "The TrustManager fails to properly authenticate its SSL/TLS peer."
      },
      "local_effect" : {
        "en" : "An attacker can execute a man-in-the-middle attack to eavesdrop on or interfere with all traffic in the session."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 296,
        "impact" : "High",
        "subcategory" : "bad_trust_manager",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 161
      }
    },
    {
      "type" : "bad_cert_verification",
      "subtype" : "ssl_verification_bypass_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SSL verification bypass"
      },
      "description" : {
        "en" : "Setting the SSL verification mode to VERIFY_NONE turns off verification of the server certificate. Any SSL certificate will be accepted, allowing an attacker to easily impersonate the intended server or perform a man-in-the-middle attack, reading the traffic between the application and the legitimate server."
      },
      "local_effect" : {
        "en" : "An attacker can execute a man-in-the-middle attack to eavesdrop on or interfere with all traffic in the session."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 599,
        "impact" : "High",
        "subcategory" : "ssl_verification_bypass_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 190
      }
    },
    {
      "type" : "bad_compare",
      "subtype" : "address_of_function_with_zero",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Function address comparison"
      },
      "description" : {
        "en" : "Address of function compared to zero"
      },
      "local_effect" : {
        "en" : "The function is not called.  This may indicate missing function call arguments."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 628,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1094
      }
    },
    {
      "type" : "bad_compare",
      "subtype" : "address_of_function_with_zero",
      "code-language" : "cuda",
      "name" : {
        "en" : "Function address comparison"
      },
      "description" : {
        "en" : "Address of function compared to zero"
      },
      "local_effect" : {
        "en" : "The function is not called.  This may indicate missing function call arguments."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 628,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1094
      }
    },
    {
      "type" : "bad_compare",
      "subtype" : "address_of_function_with_zero",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Function address comparison"
      },
      "description" : {
        "en" : "Address of function compared to zero"
      },
      "local_effect" : {
        "en" : "The function is not called.  This may indicate missing function call arguments."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 628,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1094
      }
    },
    {
      "type" : "bad_compare",
      "subtype" : "comparator_misuse",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Misuse of memcmp-style function"
      },
      "description" : {
        "en" : "A memcmp-style function is used assuming that it returns -1, 0, or 1."
      },
      "local_effect" : {
        "en" : "The return value may be misinterpreted if the function returns an unexpected value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 253,
        "impact" : "Medium",
        "subcategory" : "comparator_misuse",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1286
      }
    },
    {
      "type" : "bad_compare",
      "subtype" : "comparator_misuse",
      "code-language" : "cuda",
      "name" : {
        "en" : "Misuse of memcmp-style function"
      },
      "description" : {
        "en" : "A memcmp-style function is used assuming that it returns -1, 0, or 1."
      },
      "local_effect" : {
        "en" : "The return value may be misinterpreted if the function returns an unexpected value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 253,
        "impact" : "Medium",
        "subcategory" : "comparator_misuse",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1286
      }
    },
    {
      "type" : "bad_compare",
      "subtype" : "comparator_misuse",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Misuse of memcmp-style function"
      },
      "description" : {
        "en" : "A memcmp-style function is used assuming that it returns -1, 0, or 1."
      },
      "local_effect" : {
        "en" : "The return value may be misinterpreted if the function returns an unexpected value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 253,
        "impact" : "Medium",
        "subcategory" : "comparator_misuse",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1286
      }
    },
    {
      "type" : "bad_compare",
      "subtype" : "inequality_against_null",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Inequality comparison against NULL"
      },
      "description" : {
        "en" : "Comparing a pointer against NULL using an operator such as < or >=."
      },
      "local_effect" : {
        "en" : "The expression will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "null_misuse",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "bad_compare",
      "subtype" : "inequality_against_null",
      "code-language" : "cuda",
      "name" : {
        "en" : "Inequality comparison against NULL"
      },
      "description" : {
        "en" : "Comparing a pointer against NULL using an operator such as < or >=."
      },
      "local_effect" : {
        "en" : "The expression will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "null_misuse",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "bad_compare",
      "subtype" : "inequality_against_null",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Inequality comparison against NULL"
      },
      "description" : {
        "en" : "Comparing a pointer against NULL using an operator such as < or >=."
      },
      "local_effect" : {
        "en" : "The expression will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "null_misuse",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "bad_compare",
      "subtype" : "misuse_of_not",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unintended comparison to logical negation"
      },
      "description" : {
        "en" : "Logical negation is applied to a comparison operand instead of the comparison result."
      },
      "local_effect" : {
        "en" : "The comparison may evaluate to an incorrect value, because the logical negation is applied to the left hand operand, not the comparison result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "misuse_of_not",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "bad_compare",
      "subtype" : "misuse_of_not",
      "code-language" : "cuda",
      "name" : {
        "en" : "Unintended comparison to logical negation"
      },
      "description" : {
        "en" : "Logical negation is applied to a comparison operand instead of the comparison result."
      },
      "local_effect" : {
        "en" : "The comparison may evaluate to an incorrect value, because the logical negation is applied to the left hand operand, not the comparison result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "misuse_of_not",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "bad_compare",
      "subtype" : "misuse_of_not",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Unintended comparison to logical negation"
      },
      "description" : {
        "en" : "Logical negation is applied to a comparison operand instead of the comparison result."
      },
      "local_effect" : {
        "en" : "The comparison may evaluate to an incorrect value, because the logical negation is applied to the left hand operand, not the comparison result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "misuse_of_not",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "bad_compare",
      "subtype" : "pointer_with_string_literal",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Pointer comparison with string literal"
      },
      "description" : {
        "en" : "Comparing against the address of a string literal."
      },
      "local_effect" : {
        "en" : "The comparison evaluates to an incorrect value, because the strings' contents are ignored."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 597,
        "impact" : "Medium",
        "subcategory" : "string_lit_comparison",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1065
      }
    },
    {
      "type" : "bad_compare",
      "subtype" : "pointer_with_string_literal",
      "code-language" : "cuda",
      "name" : {
        "en" : "Pointer comparison with string literal"
      },
      "description" : {
        "en" : "Comparing against the address of a string literal."
      },
      "local_effect" : {
        "en" : "The comparison evaluates to an incorrect value, because the strings' contents are ignored."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 597,
        "impact" : "Medium",
        "subcategory" : "string_lit_comparison",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1065
      }
    },
    {
      "type" : "bad_compare",
      "subtype" : "pointer_with_string_literal",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Pointer comparison with string literal"
      },
      "description" : {
        "en" : "Comparing against the address of a string literal."
      },
      "local_effect" : {
        "en" : "The comparison evaluates to an incorrect value, because the strings' contents are ignored."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 597,
        "impact" : "Medium",
        "subcategory" : "string_lit_comparison",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1065
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "address_of_expression",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Free of address-of expression"
      },
      "description" : {
        "en" : "Free of an address-of expression, which can never be heap allocated"
      },
      "local_effect" : {
        "en" : "A non-heap pointer is placed on the free list, likely causing a crash later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "address",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "address_of_expression",
      "code-language" : "cuda",
      "name" : {
        "en" : "Free of address-of expression"
      },
      "description" : {
        "en" : "Free of an address-of expression, which can never be heap allocated"
      },
      "local_effect" : {
        "en" : "A non-heap pointer is placed on the free list, likely causing a crash later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "address",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "address_of_expression",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Free of address-of expression"
      },
      "description" : {
        "en" : "Free of an address-of expression, which can never be heap allocated"
      },
      "local_effect" : {
        "en" : "A non-heap pointer is placed on the free list, likely causing a crash later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "address",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "array",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Free of array-typed value"
      },
      "description" : {
        "en" : "Free of array-typed value"
      },
      "local_effect" : {
        "en" : "A pointer to the array is placed on the free list, likely causing a crash later; an array is not heap allocated by the program and, hence, cannot be freed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "array",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "array",
      "code-language" : "cuda",
      "name" : {
        "en" : "Free of array-typed value"
      },
      "description" : {
        "en" : "Free of array-typed value"
      },
      "local_effect" : {
        "en" : "A pointer to the array is placed on the free list, likely causing a crash later; an array is not heap allocated by the program and, hence, cannot be freed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "array",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "array",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Free of array-typed value"
      },
      "description" : {
        "en" : "Free of array-typed value"
      },
      "local_effect" : {
        "en" : "A pointer to the array is placed on the free list, likely causing a crash later; an array is not heap allocated by the program and, hence, cannot be freed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "array",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "first_field_address",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Free of address-of first field"
      },
      "description" : {
        "en" : "Free of an address-of the first field of a struct"
      },
      "local_effect" : {
        "en" : "A non-heap pointer is placed on the free list, likely causing a crash later; on some platforms, this could be used deliberately since it is equivalent to freeing the struct itself."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "first_field_address",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "first_field_address",
      "code-language" : "cuda",
      "name" : {
        "en" : "Free of address-of first field"
      },
      "description" : {
        "en" : "Free of an address-of the first field of a struct"
      },
      "local_effect" : {
        "en" : "A non-heap pointer is placed on the free list, likely causing a crash later; on some platforms, this could be used deliberately since it is equivalent to freeing the struct itself."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "first_field_address",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "first_field_address",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Free of address-of first field"
      },
      "description" : {
        "en" : "Free of an address-of the first field of a struct"
      },
      "local_effect" : {
        "en" : "A non-heap pointer is placed on the free list, likely causing a crash later; on some platforms, this could be used deliberately since it is equivalent to freeing the struct itself."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "first_field_address",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "function_pointer",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Free of function pointer"
      },
      "description" : {
        "en" : "Free of function pointer"
      },
      "local_effect" : {
        "en" : "A pointer to the function's executable code is placed on the free list, likely causing a crash later; functions are not heap allocated and, hence, cannot be freed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "function_pointer",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "function_pointer",
      "code-language" : "cuda",
      "name" : {
        "en" : "Free of function pointer"
      },
      "description" : {
        "en" : "Free of function pointer"
      },
      "local_effect" : {
        "en" : "A pointer to the function's executable code is placed on the free list, likely causing a crash later; functions are not heap allocated and, hence, cannot be freed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "function_pointer",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "function_pointer",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Free of function pointer"
      },
      "description" : {
        "en" : "Free of function pointer"
      },
      "local_effect" : {
        "en" : "A pointer to the function's executable code is placed on the free list, likely causing a crash later; functions are not heap allocated and, hence, cannot be freed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "function_pointer",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "not_from_alloc",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Free of invalid pointer value"
      },
      "description" : {
        "en" : "Free of an pointer that was not returned from an allocation function"
      },
      "local_effect" : {
        "en" : "A pointer is erroneously placed on the system allocator's free list, likely causing a crash later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "not_from_alloc",
      "code-language" : "cuda",
      "name" : {
        "en" : "Free of invalid pointer value"
      },
      "description" : {
        "en" : "Free of an pointer that was not returned from an allocation function"
      },
      "local_effect" : {
        "en" : "A pointer is erroneously placed on the system allocator's free list, likely causing a crash later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "not_from_alloc",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Free of invalid pointer value"
      },
      "description" : {
        "en" : "Free of an pointer that was not returned from an allocation function"
      },
      "local_effect" : {
        "en" : "A pointer is erroneously placed on the system allocator's free list, likely causing a crash later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "stack_allocated",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Free of stack-allocated memory"
      },
      "description" : {
        "en" : "Free of stack-allocated buffer"
      },
      "local_effect" : {
        "en" : "A non-heap pointer is placed on the free list, likely causing a crash later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "alloca",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "stack_allocated",
      "code-language" : "cuda",
      "name" : {
        "en" : "Free of stack-allocated memory"
      },
      "description" : {
        "en" : "Free of stack-allocated buffer"
      },
      "local_effect" : {
        "en" : "A non-heap pointer is placed on the free list, likely causing a crash later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "alloca",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_free",
      "subtype" : "stack_allocated",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Free of stack-allocated memory"
      },
      "description" : {
        "en" : "Free of stack-allocated buffer"
      },
      "local_effect" : {
        "en" : "A non-heap pointer is placed on the free list, likely causing a crash later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 590,
        "impact" : "High",
        "subcategory" : "alloca",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1058
      }
    },
    {
      "type" : "bad_lock_object",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Bad choice of lock object"
      },
      "description" : {
        "en" : "Locking upon an object which is a poor choice due to too broad, too narrow, or too unpredictable aliasing behavior."
      },
      "local_effect" : {
        "en" : "Data race condition"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 543,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1017
      }
    },
    {
      "type" : "bad_lock_object",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Bad choice of lock object"
      },
      "description" : {
        "en" : "Locking upon an object which is a poor choice due to too broad, too narrow, or too unpredictable aliasing behavior."
      },
      "local_effect" : {
        "en" : "Data race condition"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 543,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1017
      }
    },
    {
      "type" : "bad_lock_object",
      "subtype" : "boxed_object",
      "code-language" : "c#",
      "name" : {
        "en" : "Bad choice of lock object"
      },
      "description" : {
        "en" : "Using a boxed primitive as a lock may cause different locking behavior in different versions of the Java VM. locking behavior. It can also cause deadlocks or performance problems if a library also uses the boxed primitive as a lock."
      },
      "local_effect" : {
        "en" : "Potential system-dependent lock collisions"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Unreliable locking behavior",
        "cweCategory" : 543,
        "impact" : "High",
        "subcategory" : "boxed_lock",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1017
      }
    },
    {
      "type" : "bad_lock_object",
      "subtype" : "boxed_object",
      "code-language" : "java",
      "name" : {
        "en" : "Bad choice of lock object"
      },
      "description" : {
        "en" : "Using a boxed primitive as a lock may cause different locking behavior in different versions of the Java VM. locking behavior. It can also cause deadlocks or performance problems if a library also uses the boxed primitive as a lock."
      },
      "local_effect" : {
        "en" : "Potential system-dependent lock collisions"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Unreliable locking behavior",
        "cweCategory" : 543,
        "impact" : "High",
        "subcategory" : "boxed_lock",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1017
      }
    },
    {
      "type" : "bad_lock_object",
      "subtype" : "interned_string",
      "code-language" : "c#",
      "name" : {
        "en" : "Bad choice of lock object"
      },
      "description" : {
        "en" : "Using an interned string as a lock may cause deadlocks or performance problems if a library also uses the interned string as a lock."
      },
      "local_effect" : {
        "en" : "Potential lock collisions"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 543,
        "impact" : "Medium",
        "subcategory" : "interned_string_lock",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1017
      }
    },
    {
      "type" : "bad_lock_object",
      "subtype" : "interned_string",
      "code-language" : "java",
      "name" : {
        "en" : "Bad choice of lock object"
      },
      "description" : {
        "en" : "Using an interned string as a lock may cause deadlocks or performance problems if a library also uses the interned string as a lock."
      },
      "local_effect" : {
        "en" : "Potential lock collisions"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 543,
        "impact" : "Medium",
        "subcategory" : "interned_string_lock",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1017
      }
    },
    {
      "type" : "bad_lock_object",
      "subtype" : "non_thread_shared_object",
      "code-language" : "c#",
      "name" : {
        "en" : "Bad choice of lock object"
      },
      "description" : {
        "en" : "Using an object which is only accessible to a single thread as a lock provides no protection against race conditions."
      },
      "local_effect" : {
        "en" : "Lock provides no protection"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Unreliable locking behavior",
        "cweCategory" : 543,
        "impact" : "High",
        "subcategory" : "single_thread_lock",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1017
      }
    },
    {
      "type" : "bad_lock_object",
      "subtype" : "non_thread_shared_object",
      "code-language" : "java",
      "name" : {
        "en" : "Bad choice of lock object"
      },
      "description" : {
        "en" : "Using an object which is only accessible to a single thread as a lock provides no protection against race conditions."
      },
      "local_effect" : {
        "en" : "Lock provides no protection"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Unreliable locking behavior",
        "cweCategory" : 543,
        "impact" : "High",
        "subcategory" : "single_thread_lock",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1017
      }
    },
    {
      "type" : "bad_override",
      "subtype" : "virtual_method_type_mismatch",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Failed to override method"
      },
      "description" : {
        "en" : "Virtual function does not override parent method because of type signature mismatch, usually due to const"
      },
      "local_effect" : {
        "en" : "The method will not be called when virtual dispatch is used, this may cause the class to not perform as expected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Class hierarchy inconsistencies",
        "cweCategory" : 710,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1288
      }
    },
    {
      "type" : "bad_override",
      "subtype" : "virtual_method_type_mismatch",
      "code-language" : "cuda",
      "name" : {
        "en" : "Failed to override method"
      },
      "description" : {
        "en" : "Virtual function does not override parent method because of type signature mismatch, usually due to const"
      },
      "local_effect" : {
        "en" : "The method will not be called when virtual dispatch is used, this may cause the class to not perform as expected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Class hierarchy inconsistencies",
        "cweCategory" : 710,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1288
      }
    },
    {
      "type" : "bad_override",
      "subtype" : "virtual_method_type_mismatch",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Failed to override method"
      },
      "description" : {
        "en" : "Virtual function does not override parent method because of type signature mismatch, usually due to const"
      },
      "local_effect" : {
        "en" : "The method will not be called when virtual dispatch is used, this may cause the class to not perform as expected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Class hierarchy inconsistencies",
        "cweCategory" : 710,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1288
      }
    },
    {
      "type" : "bad_shift",
      "subtype" : "modulus",
      "code-language" : "c#",
      "name" : {
        "en" : "Bad bit shift operation"
      },
      "description" : {
        "en" : "A bit shift operation has a shift amount which is too large or has a negative value."
      },
      "local_effect" : {
        "en" : "The operation may yield an unexpected result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 655
      }
    },
    {
      "type" : "bad_shift",
      "subtype" : "modulus",
      "code-language" : "java",
      "name" : {
        "en" : "Bad bit shift operation"
      },
      "description" : {
        "en" : "A bit shift operation has a shift amount which is too large or has a negative value."
      },
      "local_effect" : {
        "en" : "The operation may yield an unexpected result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 655
      }
    },
    {
      "type" : "bad_shift",
      "subtype" : "undefined_result",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Bad bit shift operation"
      },
      "description" : {
        "en" : "A bit shift operation has a shift amount which is too large or has a negative value."
      },
      "local_effect" : {
        "en" : "The operation may have an undefined behavior or yield an unexpected result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 655
      }
    },
    {
      "type" : "bad_shift",
      "subtype" : "undefined_result",
      "code-language" : "cuda",
      "name" : {
        "en" : "Bad bit shift operation"
      },
      "description" : {
        "en" : "A bit shift operation has a shift amount which is too large or has a negative value."
      },
      "local_effect" : {
        "en" : "The operation may have an undefined behavior or yield an unexpected result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 655
      }
    },
    {
      "type" : "bad_shift",
      "subtype" : "undefined_result",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Bad bit shift operation"
      },
      "description" : {
        "en" : "A bit shift operation has a shift amount which is too large or has a negative value."
      },
      "local_effect" : {
        "en" : "The operation may have an undefined behavior or yield an unexpected result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 655
      }
    },
    {
      "type" : "bad_sizeof",
      "subtype" : "logic_error",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Incorrect sizeof expression"
      },
      "description" : {
        "en" : "The sizeof operator was applied to an unintended variable or expression, such as a pointer variable instead of its target"
      },
      "local_effect" : {
        "en" : "This is usually caused by a typo or a misunderstanding of the sizeof operator, which should be applied to the actual type whose size is desired. An incorrect sizeof value is used in further computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 467,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 951
      }
    },
    {
      "type" : "bad_sizeof",
      "subtype" : "logic_error",
      "code-language" : "cuda",
      "name" : {
        "en" : "Incorrect sizeof expression"
      },
      "description" : {
        "en" : "The sizeof operator was applied to an unintended variable or expression, such as a pointer variable instead of its target"
      },
      "local_effect" : {
        "en" : "This is usually caused by a typo or a misunderstanding of the sizeof operator, which should be applied to the actual type whose size is desired. An incorrect sizeof value is used in further computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 467,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 951
      }
    },
    {
      "type" : "bad_sizeof",
      "subtype" : "logic_error",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Incorrect sizeof expression"
      },
      "description" : {
        "en" : "The sizeof operator was applied to an unintended variable or expression, such as a pointer variable instead of its target"
      },
      "local_effect" : {
        "en" : "This is usually caused by a typo or a misunderstanding of the sizeof operator, which should be applied to the actual type whose size is desired. An incorrect sizeof value is used in further computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 467,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 951
      }
    },
    {
      "type" : "bad_sizeof",
      "subtype" : "sizeof_ptr_expr",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Sizeof pointer expression"
      },
      "description" : {
        "en" : "The sizeof operator was applied to a pointer expression, which may not be intended"
      },
      "local_effect" : {
        "en" : "This is a suspicious usage that may be due to a typo or a misunderstanding of the sizeof operator, which should be applied to the target of the pointer. However, sometimes this usage is intentional."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 467,
        "impact" : "Medium",
        "subcategory" : "sizeof_ptr_expr",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 951
      }
    },
    {
      "type" : "bad_sizeof",
      "subtype" : "sizeof_ptr_expr",
      "code-language" : "cuda",
      "name" : {
        "en" : "Sizeof pointer expression"
      },
      "description" : {
        "en" : "The sizeof operator was applied to a pointer expression, which may not be intended"
      },
      "local_effect" : {
        "en" : "This is a suspicious usage that may be due to a typo or a misunderstanding of the sizeof operator, which should be applied to the target of the pointer. However, sometimes this usage is intentional."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 467,
        "impact" : "Medium",
        "subcategory" : "sizeof_ptr_expr",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 951
      }
    },
    {
      "type" : "bad_sizeof",
      "subtype" : "sizeof_ptr_expr",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Sizeof pointer expression"
      },
      "description" : {
        "en" : "The sizeof operator was applied to a pointer expression, which may not be intended"
      },
      "local_effect" : {
        "en" : "This is a suspicious usage that may be due to a typo or a misunderstanding of the sizeof operator, which should be applied to the target of the pointer. However, sometimes this usage is intentional."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 467,
        "impact" : "Medium",
        "subcategory" : "sizeof_ptr_expr",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 951
      }
    },
    {
      "type" : "buffer_size",
      "subtype" : "fixed_size_dest",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Copy into fixed size buffer"
      },
      "description" : {
        "en" : "A source buffer of statically unknown size is copied into a fixed-size destination buffer"
      },
      "local_effect" : {
        "en" : "The string operation will write past the end of the fixed-size destination buffer if the source buffer is too large."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 120,
        "impact" : "Low",
        "subcategory" : "fixed_size_dest",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "buffer_size",
      "subtype" : "fixed_size_dest",
      "code-language" : "cuda",
      "name" : {
        "en" : "Copy into fixed size buffer"
      },
      "description" : {
        "en" : "A source buffer of statically unknown size is copied into a fixed-size destination buffer"
      },
      "local_effect" : {
        "en" : "The string operation will write past the end of the fixed-size destination buffer if the source buffer is too large."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 120,
        "impact" : "Low",
        "subcategory" : "fixed_size_dest",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "buffer_size",
      "subtype" : "fixed_size_dest",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Copy into fixed size buffer"
      },
      "description" : {
        "en" : "A source buffer of statically unknown size is copied into a fixed-size destination buffer"
      },
      "local_effect" : {
        "en" : "The string operation will write past the end of the fixed-size destination buffer if the source buffer is too large."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 120,
        "impact" : "Low",
        "subcategory" : "fixed_size_dest",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "buffer_size",
      "subtype" : "likely_overflow",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Destination buffer too small"
      },
      "description" : {
        "en" : "Size of destination buffer is smaller than the size argument specified"
      },
      "local_effect" : {
        "en" : "Some memory locations will be written with incorrect values, possibly corrupting data structures or data integrity."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 120,
        "impact" : "High",
        "subcategory" : "likely_overflow",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "buffer_size",
      "subtype" : "likely_overflow",
      "code-language" : "cuda",
      "name" : {
        "en" : "Destination buffer too small"
      },
      "description" : {
        "en" : "Size of destination buffer is smaller than the size argument specified"
      },
      "local_effect" : {
        "en" : "Some memory locations will be written with incorrect values, possibly corrupting data structures or data integrity."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 120,
        "impact" : "High",
        "subcategory" : "likely_overflow",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "buffer_size",
      "subtype" : "likely_overflow",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Destination buffer too small"
      },
      "description" : {
        "en" : "Size of destination buffer is smaller than the size argument specified"
      },
      "local_effect" : {
        "en" : "Some memory locations will be written with incorrect values, possibly corrupting data structures or data integrity."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 120,
        "impact" : "High",
        "subcategory" : "likely_overflow",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "buffer_size",
      "subtype" : "overflow",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Destination buffer too small"
      },
      "description" : {
        "en" : "Size of destination buffer is smaller than the required size"
      },
      "local_effect" : {
        "en" : "Some memory locations will be written with incorrect values, possibly corrupting data structures or data integrity."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 120,
        "impact" : "High",
        "subcategory" : "overflow",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "buffer_size",
      "subtype" : "overflow",
      "code-language" : "cuda",
      "name" : {
        "en" : "Destination buffer too small"
      },
      "description" : {
        "en" : "Size of destination buffer is smaller than the required size"
      },
      "local_effect" : {
        "en" : "Some memory locations will be written with incorrect values, possibly corrupting data structures or data integrity."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 120,
        "impact" : "High",
        "subcategory" : "overflow",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "buffer_size",
      "subtype" : "overflow",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Destination buffer too small"
      },
      "description" : {
        "en" : "Size of destination buffer is smaller than the required size"
      },
      "local_effect" : {
        "en" : "Some memory locations will be written with incorrect values, possibly corrupting data structures or data integrity."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 120,
        "impact" : "High",
        "subcategory" : "overflow",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "buffer_size",
      "subtype" : "overlapping_buffer",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Overlapping buffer in memory copy"
      },
      "description" : {
        "en" : "Buffers may be overlapping in a string copy function"
      },
      "local_effect" : {
        "en" : "Results in an undefined behavior"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 758,
        "impact" : "Medium",
        "subcategory" : "overlapping_buffer",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1166
      }
    },
    {
      "type" : "buffer_size",
      "subtype" : "overlapping_buffer",
      "code-language" : "cuda",
      "name" : {
        "en" : "Overlapping buffer in memory copy"
      },
      "description" : {
        "en" : "Buffers may be overlapping in a string copy function"
      },
      "local_effect" : {
        "en" : "Results in an undefined behavior"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 758,
        "impact" : "Medium",
        "subcategory" : "overlapping_buffer",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1166
      }
    },
    {
      "type" : "buffer_size",
      "subtype" : "overlapping_buffer",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Overlapping buffer in memory copy"
      },
      "description" : {
        "en" : "Buffers may be overlapping in a string copy function"
      },
      "local_effect" : {
        "en" : "Results in an undefined behavior"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 758,
        "impact" : "Medium",
        "subcategory" : "overlapping_buffer",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1166
      }
    },
    {
      "type" : "call_super",
      "subtype" : "clone",
      "code-language" : "java",
      "name" : {
        "en" : "Failure to call super.clone()"
      },
      "description" : {
        "en" : "All implementations of Object.clone are required to call super.clone to allocate the new object"
      },
      "local_effect" : {
        "en" : "Failure to call super.clone may result in the wrong object type being created when cloning subclasses."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Class hierarchy inconsistencies",
        "cweCategory" : 580,
        "impact" : "Medium",
        "subcategory" : "clone",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1051
      }
    },
    {
      "type" : "call_super",
      "subtype" : "finalize",
      "code-language" : "java",
      "name" : {
        "en" : "Failure to call super.finalize()"
      },
      "description" : {
        "en" : "It is good practice to call super.finalize in finalize methods"
      },
      "local_effect" : {
        "en" : "The superclass may not get a chance to finalize, possibly leaking resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Class hierarchy inconsistencies",
        "cweCategory" : 568,
        "impact" : "Medium",
        "subcategory" : "finalize",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1038
      }
    },
    {
      "type" : "call_super",
      "subtype" : "inferred",
      "code-language" : "c#",
      "name" : {
        "en" : "Missing call to base class"
      },
      "description" : {
        "en" : "Overrider does not call the base class method, even though most other overriders do"
      },
      "local_effect" : {
        "en" : "Whatever action the base class method implements will not occur, if the base class call is actually required."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Class hierarchy inconsistencies",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1043
      }
    },
    {
      "type" : "call_super",
      "subtype" : "inferred",
      "code-language" : "java",
      "name" : {
        "en" : "Missing call to superclass"
      },
      "description" : {
        "en" : "Overrider does not call the superclass method, even though most other overriders do"
      },
      "local_effect" : {
        "en" : "Whatever action the superclass method implements will not occur, if the superclass call is actually required."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Class hierarchy inconsistencies",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1043
      }
    },
    {
      "type" : "call_super",
      "subtype" : "inferred",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Missing call to base class"
      },
      "description" : {
        "en" : "Overrider does not call the base class method, even though most other overriders do"
      },
      "local_effect" : {
        "en" : "Whatever action the base class method implements will not occur, if the base class call is actually required."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Class hierarchy inconsistencies",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1043
      }
    },
    {
      "type" : "char_io",
      "subtype" : "truncated",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Truncated stdio return value"
      },
      "description" : {
        "en" : "Stdio character-oriented I/O functions return int values such as EOF not representable by char variables"
      },
      "local_effect" : {
        "en" : "It will not be possible to distinguish between EOF and a valid character."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 197,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 718
      }
    },
    {
      "type" : "char_io",
      "subtype" : "truncated",
      "code-language" : "cuda",
      "name" : {
        "en" : "Truncated stdio return value"
      },
      "description" : {
        "en" : "Stdio character-oriented I/O functions return int values such as EOF not representable by char variables"
      },
      "local_effect" : {
        "en" : "It will not be possible to distinguish between EOF and a valid character."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 197,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 718
      }
    },
    {
      "type" : "char_io",
      "subtype" : "truncated",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Truncated stdio return value"
      },
      "description" : {
        "en" : "Stdio character-oriented I/O functions return int values such as EOF not representable by char variables"
      },
      "local_effect" : {
        "en" : "It will not be possible to distinguish between EOF and a valid character."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 197,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 718
      }
    },
    {
      "type" : "com.bstr.conv",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "COM bad conversion to BSTR"
      },
      "description" : {
        "en" : "A wide character string cannot be converted to a BSTR because it lacks the hidden length field"
      },
      "local_effect" : {
        "en" : "Accessing a wchar_t as if it were a BSTR may read out of bounds memory or cause memory corruption."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 135,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 662
      }
    },
    {
      "type" : "com.bstr.conv",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "COM bad conversion to BSTR"
      },
      "description" : {
        "en" : "A wide character string cannot be converted to a BSTR because it lacks the hidden length field"
      },
      "local_effect" : {
        "en" : "Accessing a wchar_t as if it were a BSTR may read out of bounds memory or cause memory corruption."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 135,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 662
      }
    },
    {
      "type" : "com.bstr.conv",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "COM bad conversion to BSTR"
      },
      "description" : {
        "en" : "A wide character string cannot be converted to a BSTR because it lacks the hidden length field"
      },
      "local_effect" : {
        "en" : "Accessing a wchar_t as if it were a BSTR may read out of bounds memory or cause memory corruption."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 135,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 662
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "bit_and_with_zero",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "bit_and_with_zero",
      "code-language" : "c#",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "bit_and_with_zero",
      "code-language" : "cuda",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "bit_and_with_zero",
      "code-language" : "go",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "bit_and_with_zero",
      "code-language" : "java",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "bit_and_with_zero",
      "code-language" : "javascript",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "bit_and_with_zero",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "bit_and_with_zero",
      "code-language" : "php",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "bit_and_with_zero",
      "code-language" : "python",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "bit_and_with_zero",
      "code-language" : "ruby",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "bit_and_with_zero",
      "code-language" : "scala",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "bit_and_with_zero",
      "code-language" : "typescript",
      "name" : {
        "en" : "Bitwise-and with zero"
      },
      "description" : {
        "en" : "Bitwise-and ('&amp;') operation applied to zero always produces zero"
      },
      "local_effect" : {
        "en" : "The expression's value is always zero; construct may indicate an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "bit_and_with_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "extra_high_bits",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Extra high-order bits"
      },
      "description" : {
        "en" : "In an operation, the high-order bits of wider operand do not affect the narrower operand"
      },
      "local_effect" : {
        "en" : "An operation that disregards the high-order bits may lead to incorrect value to be used in a logical computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "extra_high_bits",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "extra_high_bits",
      "code-language" : "c#",
      "name" : {
        "en" : "Extra high-order bits"
      },
      "description" : {
        "en" : "In an operation, the high-order bits of wider operand do not affect the narrower operand"
      },
      "local_effect" : {
        "en" : "An operation that disregards the high-order bits may lead to incorrect value to be used in a logical computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "extra_high_bits",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "extra_high_bits",
      "code-language" : "cuda",
      "name" : {
        "en" : "Extra high-order bits"
      },
      "description" : {
        "en" : "In an operation, the high-order bits of wider operand do not affect the narrower operand"
      },
      "local_effect" : {
        "en" : "An operation that disregards the high-order bits may lead to incorrect value to be used in a logical computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "extra_high_bits",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "extra_high_bits",
      "code-language" : "java",
      "name" : {
        "en" : "Extra high-order bits"
      },
      "description" : {
        "en" : "In an operation, the high-order bits of wider operand do not affect the narrower operand"
      },
      "local_effect" : {
        "en" : "An operation that disregards the high-order bits may lead to incorrect value to be used in a logical computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "extra_high_bits",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "extra_high_bits",
      "code-language" : "javascript",
      "name" : {
        "en" : "Extra high-order bits"
      },
      "description" : {
        "en" : "In an operation, the high-order bits of wider operand do not affect the narrower operand"
      },
      "local_effect" : {
        "en" : "An operation that disregards the high-order bits may lead to incorrect value to be used in a logical computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "extra_high_bits",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "extra_high_bits",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Extra high-order bits"
      },
      "description" : {
        "en" : "In an operation, the high-order bits of wider operand do not affect the narrower operand"
      },
      "local_effect" : {
        "en" : "An operation that disregards the high-order bits may lead to incorrect value to be used in a logical computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "extra_high_bits",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "extra_high_bits",
      "code-language" : "php",
      "name" : {
        "en" : "Extra high-order bits"
      },
      "description" : {
        "en" : "In an operation, the high-order bits of wider operand do not affect the narrower operand"
      },
      "local_effect" : {
        "en" : "An operation that disregards the high-order bits may lead to incorrect value to be used in a logical computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "extra_high_bits",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "extra_high_bits",
      "code-language" : "python",
      "name" : {
        "en" : "Extra high-order bits"
      },
      "description" : {
        "en" : "In an operation, the high-order bits of wider operand do not affect the narrower operand"
      },
      "local_effect" : {
        "en" : "An operation that disregards the high-order bits may lead to incorrect value to be used in a logical computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "extra_high_bits",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "extra_high_bits",
      "code-language" : "ruby",
      "name" : {
        "en" : "Extra high-order bits"
      },
      "description" : {
        "en" : "In an operation, the high-order bits of wider operand do not affect the narrower operand"
      },
      "local_effect" : {
        "en" : "An operation that disregards the high-order bits may lead to incorrect value to be used in a logical computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "extra_high_bits",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "extra_high_bits",
      "code-language" : "typescript",
      "name" : {
        "en" : "Extra high-order bits"
      },
      "description" : {
        "en" : "In an operation, the high-order bits of wider operand do not affect the narrower operand"
      },
      "local_effect" : {
        "en" : "An operation that disregards the high-order bits may lead to incorrect value to be used in a logical computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "extra_high_bits",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logic_error",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logic_error",
      "code-language" : "c#",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logic_error",
      "code-language" : "cuda",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logic_error",
      "code-language" : "go",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logic_error",
      "code-language" : "java",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logic_error",
      "code-language" : "javascript",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logic_error",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logic_error",
      "code-language" : "php",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logic_error",
      "code-language" : "python",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logic_error",
      "code-language" : "ruby",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logic_error",
      "code-language" : "scala",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logic_error",
      "code-language" : "typescript",
      "name" : {
        "en" : "Constant expression result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logical_vs_bitwise",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Logical vs. bitwise operator"
      },
      "description" : {
        "en" : "Logical operator used in place of bitwise operator or vice versa"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "logical_vs_bitwise",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logical_vs_bitwise",
      "code-language" : "c#",
      "name" : {
        "en" : "Logical vs. bitwise operator"
      },
      "description" : {
        "en" : "Logical operator used in place of bitwise operator or vice versa"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "logical_vs_bitwise",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logical_vs_bitwise",
      "code-language" : "cuda",
      "name" : {
        "en" : "Logical vs. bitwise operator"
      },
      "description" : {
        "en" : "Logical operator used in place of bitwise operator or vice versa"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "logical_vs_bitwise",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logical_vs_bitwise",
      "code-language" : "go",
      "name" : {
        "en" : "Logical vs. bitwise operator"
      },
      "description" : {
        "en" : "Logical operator used in place of bitwise operator or vice versa"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "logical_vs_bitwise",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logical_vs_bitwise",
      "code-language" : "java",
      "name" : {
        "en" : "Logical vs. bitwise operator"
      },
      "description" : {
        "en" : "Logical operator used in place of bitwise operator or vice versa"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "logical_vs_bitwise",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logical_vs_bitwise",
      "code-language" : "javascript",
      "name" : {
        "en" : "Logical vs. bitwise operator"
      },
      "description" : {
        "en" : "Logical operator used in place of bitwise operator or vice versa"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "logical_vs_bitwise",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logical_vs_bitwise",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Logical vs. bitwise operator"
      },
      "description" : {
        "en" : "Logical operator used in place of bitwise operator or vice versa"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "logical_vs_bitwise",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logical_vs_bitwise",
      "code-language" : "php",
      "name" : {
        "en" : "Logical vs. bitwise operator"
      },
      "description" : {
        "en" : "Logical operator used in place of bitwise operator or vice versa"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "logical_vs_bitwise",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logical_vs_bitwise",
      "code-language" : "python",
      "name" : {
        "en" : "Logical vs. bitwise operator"
      },
      "description" : {
        "en" : "Logical operator used in place of bitwise operator or vice versa"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "logical_vs_bitwise",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logical_vs_bitwise",
      "code-language" : "ruby",
      "name" : {
        "en" : "Logical vs. bitwise operator"
      },
      "description" : {
        "en" : "Logical operator used in place of bitwise operator or vice versa"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "logical_vs_bitwise",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logical_vs_bitwise",
      "code-language" : "scala",
      "name" : {
        "en" : "Logical vs. bitwise operator"
      },
      "description" : {
        "en" : "Logical operator used in place of bitwise operator or vice versa"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "logical_vs_bitwise",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "logical_vs_bitwise",
      "code-language" : "typescript",
      "name" : {
        "en" : "Logical vs. bitwise operator"
      },
      "description" : {
        "en" : "Logical operator used in place of bitwise operator or vice versa"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "logical_vs_bitwise",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "missing_parentheses",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "missing_parentheses",
      "code-language" : "c#",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "missing_parentheses",
      "code-language" : "cuda",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "missing_parentheses",
      "code-language" : "go",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "missing_parentheses",
      "code-language" : "java",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "missing_parentheses",
      "code-language" : "javascript",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "missing_parentheses",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "missing_parentheses",
      "code-language" : "php",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "missing_parentheses",
      "code-language" : "python",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "missing_parentheses",
      "code-language" : "ruby",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "missing_parentheses",
      "code-language" : "scala",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "missing_parentheses",
      "code-language" : "typescript",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "number_as_truth_value",
      "code-language" : "ruby",
      "name" : {
        "en" : "Number used as truth value"
      },
      "description" : {
        "en" : "A numerical value is used where a Boolean value is expected, and it will always evaluate to true."
      },
      "local_effect" : {
        "en" : "In the source language, a numerical expression used as a truth value always evaluates to true; either a comparison operation is missing or the conditional can be removed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "number_as_truth_value",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "operator_confusion",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "operator_confusion",
      "code-language" : "c#",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "operator_confusion",
      "code-language" : "cuda",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "operator_confusion",
      "code-language" : "go",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "operator_confusion",
      "code-language" : "java",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "operator_confusion",
      "code-language" : "javascript",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "operator_confusion",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "operator_confusion",
      "code-language" : "php",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "operator_confusion",
      "code-language" : "python",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "operator_confusion",
      "code-language" : "ruby",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "operator_confusion",
      "code-language" : "scala",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "operator_confusion",
      "code-language" : "typescript",
      "name" : {
        "en" : "Wrong operator used"
      },
      "description" : {
        "en" : "Wrong operator used in expression"
      },
      "local_effect" : {
        "en" : "Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "operator_confusion",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "pointless_string_compare",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Pointless string comparison"
      },
      "description" : {
        "en" : "A string is compared against itself with strcmp or strncmp."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  The comparison will always return zero."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "pointless_string_compare",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "pointless_string_compare",
      "code-language" : "cuda",
      "name" : {
        "en" : "Pointless string comparison"
      },
      "description" : {
        "en" : "A string is compared against itself with strcmp or strncmp."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  The comparison will always return zero."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "pointless_string_compare",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "pointless_string_compare",
      "code-language" : "javascript",
      "name" : {
        "en" : "Pointless string comparison"
      },
      "description" : {
        "en" : "A string is compared against itself with strcmp or strncmp."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  The comparison will always return zero."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "pointless_string_compare",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "pointless_string_compare",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Pointless string comparison"
      },
      "description" : {
        "en" : "A string is compared against itself with strcmp or strncmp."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  The comparison will always return zero."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "pointless_string_compare",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "pointless_string_compare",
      "code-language" : "php",
      "name" : {
        "en" : "Pointless string comparison"
      },
      "description" : {
        "en" : "A string is compared against itself with strcmp or strncmp."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  The comparison will always return zero."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "pointless_string_compare",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "pointless_string_compare",
      "code-language" : "python",
      "name" : {
        "en" : "Pointless string comparison"
      },
      "description" : {
        "en" : "A string is compared against itself with strcmp or strncmp."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  The comparison will always return zero."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "pointless_string_compare",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "pointless_string_compare",
      "code-language" : "ruby",
      "name" : {
        "en" : "Pointless string comparison"
      },
      "description" : {
        "en" : "A string is compared against itself with strcmp or strncmp."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  The comparison will always return zero."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "pointless_string_compare",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "pointless_string_compare",
      "code-language" : "typescript",
      "name" : {
        "en" : "Pointless string comparison"
      },
      "description" : {
        "en" : "A string is compared against itself with strcmp or strncmp."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  The comparison will always return zero."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "pointless_string_compare",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "result_independent_of_operands",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "result_independent_of_operands",
      "code-language" : "c#",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "result_independent_of_operands",
      "code-language" : "cuda",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "result_independent_of_operands",
      "code-language" : "go",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "result_independent_of_operands",
      "code-language" : "java",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "result_independent_of_operands",
      "code-language" : "javascript",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "result_independent_of_operands",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "result_independent_of_operands",
      "code-language" : "php",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "result_independent_of_operands",
      "code-language" : "python",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "result_independent_of_operands",
      "code-language" : "ruby",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "result_independent_of_operands",
      "code-language" : "scala",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "result_independent_of_operands",
      "code-language" : "typescript",
      "name" : {
        "en" : "Operands don't affect result"
      },
      "description" : {
        "en" : "An operation with non-constant operands that computes a result with constant value"
      },
      "local_effect" : {
        "en" : "The expression's value does not depend on the operands; often, this represents an inadvertent logic error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "result_independent_of_operands",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "same_on_both_sides",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "same_on_both_sides",
      "code-language" : "c#",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "same_on_both_sides",
      "code-language" : "cuda",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "same_on_both_sides",
      "code-language" : "go",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "same_on_both_sides",
      "code-language" : "java",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "same_on_both_sides",
      "code-language" : "javascript",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "same_on_both_sides",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "same_on_both_sides",
      "code-language" : "php",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "same_on_both_sides",
      "code-language" : "python",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "same_on_both_sides",
      "code-language" : "ruby",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "same_on_both_sides",
      "code-language" : "scala",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "same_on_both_sides",
      "code-language" : "typescript",
      "name" : {
        "en" : "Same on both sides"
      },
      "description" : {
        "en" : "The same expression occurs on both sides of an operator."
      },
      "local_effect" : {
        "en" : "This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "same_on_both_sides",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 424
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "typeof_misuse",
      "code-language" : "javascript",
      "name" : {
        "en" : "Misuse of typeof"
      },
      "description" : {
        "en" : "Meaningless check against the result of a typeof operation"
      },
      "local_effect" : {
        "en" : "The code's behavior is not affected by the operand of typeof, so the code might not work as intended."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "typeof_misuse",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "typeof_misuse",
      "code-language" : "typescript",
      "name" : {
        "en" : "Misuse of typeof"
      },
      "description" : {
        "en" : "Meaningless check against the result of a typeof operation"
      },
      "local_effect" : {
        "en" : "The code's behavior is not affected by the operand of typeof, so the code might not work as intended."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "typeof_misuse",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1132
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "unnecessary_op_assign",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Suspicious &= or |="
      },
      "description" : {
        "en" : "Using a bitwise assignment operator to assign a constant value"
      },
      "local_effect" : {
        "en" : "A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "unnecessary_op_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "unnecessary_op_assign",
      "code-language" : "c#",
      "name" : {
        "en" : "Suspicious &= or |="
      },
      "description" : {
        "en" : "Using a bitwise assignment operator to assign a constant value"
      },
      "local_effect" : {
        "en" : "A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "unnecessary_op_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "unnecessary_op_assign",
      "code-language" : "cuda",
      "name" : {
        "en" : "Suspicious &= or |="
      },
      "description" : {
        "en" : "Using a bitwise assignment operator to assign a constant value"
      },
      "local_effect" : {
        "en" : "A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "unnecessary_op_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "unnecessary_op_assign",
      "code-language" : "go",
      "name" : {
        "en" : "Suspicious &= or |="
      },
      "description" : {
        "en" : "Using a bitwise assignment operator to assign a constant value"
      },
      "local_effect" : {
        "en" : "A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "unnecessary_op_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "unnecessary_op_assign",
      "code-language" : "java",
      "name" : {
        "en" : "Suspicious &= or |="
      },
      "description" : {
        "en" : "Using a bitwise assignment operator to assign a constant value"
      },
      "local_effect" : {
        "en" : "A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "unnecessary_op_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "unnecessary_op_assign",
      "code-language" : "javascript",
      "name" : {
        "en" : "Suspicious &= or |="
      },
      "description" : {
        "en" : "Using a bitwise assignment operator to assign a constant value"
      },
      "local_effect" : {
        "en" : "A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "unnecessary_op_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "unnecessary_op_assign",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Suspicious &= or |="
      },
      "description" : {
        "en" : "Using a bitwise assignment operator to assign a constant value"
      },
      "local_effect" : {
        "en" : "A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "unnecessary_op_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "unnecessary_op_assign",
      "code-language" : "php",
      "name" : {
        "en" : "Suspicious &= or |="
      },
      "description" : {
        "en" : "Using a bitwise assignment operator to assign a constant value"
      },
      "local_effect" : {
        "en" : "A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "unnecessary_op_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "unnecessary_op_assign",
      "code-language" : "python",
      "name" : {
        "en" : "Suspicious &= or |="
      },
      "description" : {
        "en" : "Using a bitwise assignment operator to assign a constant value"
      },
      "local_effect" : {
        "en" : "A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "unnecessary_op_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "unnecessary_op_assign",
      "code-language" : "ruby",
      "name" : {
        "en" : "Suspicious &= or |="
      },
      "description" : {
        "en" : "Using a bitwise assignment operator to assign a constant value"
      },
      "local_effect" : {
        "en" : "A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "unnecessary_op_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "unnecessary_op_assign",
      "code-language" : "scala",
      "name" : {
        "en" : "Suspicious &= or |="
      },
      "description" : {
        "en" : "Using a bitwise assignment operator to assign a constant value"
      },
      "local_effect" : {
        "en" : "A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "unnecessary_op_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "constant_expression_result",
      "subtype" : "unnecessary_op_assign",
      "code-language" : "typescript",
      "name" : {
        "en" : "Suspicious &= or |="
      },
      "description" : {
        "en" : "Using a bitwise assignment operator to assign a constant value"
      },
      "local_effect" : {
        "en" : "A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "unnecessary_op_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "cookie_injection",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Cookie injection"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct a cookie."
      },
      "local_effect" : {
        "en" : "An attacker may be able to set a session ID (session fixation), change the scope or expiration time of a cookie, and otherwise affect the application's behavior by setting new cookies."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 20,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1035
      }
    },
    {
      "type" : "cookie_injection",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Cookie injection"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct a cookie."
      },
      "local_effect" : {
        "en" : "An attacker may be able to set a session ID (session fixation), change the scope or expiration time of a cookie, and otherwise affect the application's behavior by setting new cookies."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 20,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1035
      }
    },
    {
      "type" : "cookie_injection",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Cookie injection"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct a cookie."
      },
      "local_effect" : {
        "en" : "An attacker may be able to set a session ID (session fixation), change the scope or expiration time of a cookie, and otherwise affect the application's behavior by setting new cookies."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 20,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1035
      }
    },
    {
      "type" : "cookie_serializer_config",
      "subtype" : "unsafe_cookie_serialization_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Remote code execution"
      },
      "description" : {
        "en" : "Deserializing cookie values using Marshal is unsafe due to possible remote code execution during deserialization."
      },
      "local_effect" : {
        "en" : "An attacker can instantiate arbitrary classes, possibly resulting in a denial of service or potentially unintended code execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 502,
        "impact" : "Medium",
        "subcategory" : "unsafe_cookie_serialization_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 983
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Copy-paste error"
      },
      "description" : {
        "en" : "A copied piece of code is inconsistent with the original"
      },
      "local_effect" : {
        "en" : "The copied code will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Copy-paste error"
      },
      "description" : {
        "en" : "A copied piece of code is inconsistent with the original"
      },
      "local_effect" : {
        "en" : "The copied code will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Copy-paste error"
      },
      "description" : {
        "en" : "A copied piece of code is inconsistent with the original"
      },
      "local_effect" : {
        "en" : "The copied code will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "Copy-paste error"
      },
      "description" : {
        "en" : "A copied piece of code is inconsistent with the original"
      },
      "local_effect" : {
        "en" : "The copied code will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Copy-paste error"
      },
      "description" : {
        "en" : "A copied piece of code is inconsistent with the original"
      },
      "local_effect" : {
        "en" : "The copied code will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Copy-paste error"
      },
      "description" : {
        "en" : "A copied piece of code is inconsistent with the original"
      },
      "local_effect" : {
        "en" : "The copied code will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Copy-paste error"
      },
      "description" : {
        "en" : "A copied piece of code is inconsistent with the original"
      },
      "local_effect" : {
        "en" : "The copied code will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Copy-paste error"
      },
      "description" : {
        "en" : "A copied piece of code is inconsistent with the original"
      },
      "local_effect" : {
        "en" : "The copied code will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Copy-paste error"
      },
      "description" : {
        "en" : "A copied piece of code is inconsistent with the original"
      },
      "local_effect" : {
        "en" : "The copied code will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : null,
      "code-language" : "ruby",
      "name" : {
        "en" : "Copy-paste error"
      },
      "description" : {
        "en" : "A copied piece of code is inconsistent with the original"
      },
      "local_effect" : {
        "en" : "The copied code will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : null,
      "code-language" : "scala",
      "name" : {
        "en" : "Copy-paste error"
      },
      "description" : {
        "en" : "A copied piece of code is inconsistent with the original"
      },
      "local_effect" : {
        "en" : "The copied code will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Copy-paste error"
      },
      "description" : {
        "en" : "A copied piece of code is inconsistent with the original"
      },
      "local_effect" : {
        "en" : "The copied code will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Copy-paste error"
      },
      "description" : {
        "en" : "A copied piece of code is inconsistent with the original"
      },
      "local_effect" : {
        "en" : "The copied code will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : "property_mixup",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Property getter or setter mixup"
      },
      "description" : {
        "en" : "This method appears to be getting or setting the wrong member."
      },
      "local_effect" : {
        "en" : "This may lead to incorrect program behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : "property_mixup",
      "code-language" : "c#",
      "name" : {
        "en" : "Property getter or setter mixup"
      },
      "description" : {
        "en" : "This method appears to be getting or setting the wrong member."
      },
      "local_effect" : {
        "en" : "This may lead to incorrect program behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : "property_mixup",
      "code-language" : "cuda",
      "name" : {
        "en" : "Property getter or setter mixup"
      },
      "description" : {
        "en" : "This method appears to be getting or setting the wrong member."
      },
      "local_effect" : {
        "en" : "This may lead to incorrect program behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : "property_mixup",
      "code-language" : "java",
      "name" : {
        "en" : "Property getter or setter mixup"
      },
      "description" : {
        "en" : "This method appears to be getting or setting the wrong member."
      },
      "local_effect" : {
        "en" : "This may lead to incorrect program behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : "property_mixup",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Property getter or setter mixup"
      },
      "description" : {
        "en" : "This method appears to be getting or setting the wrong member."
      },
      "local_effect" : {
        "en" : "This may lead to incorrect program behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "copy_paste_error",
      "subtype" : "property_mixup",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Property getter or setter mixup"
      },
      "description" : {
        "en" : "This method appears to be getting or setting the wrong member."
      },
      "local_effect" : {
        "en" : "This may lead to incorrect program behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1300
      }
    },
    {
      "type" : "csrf",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 352,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 352,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 352,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 352,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 352,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 352,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "csrf_not_protected_by_raising_exception_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "In this version of Ruby on Rails, unless with: :exception is specified for protect_from_forgery, mismatched or missing CSRF tokens will clear the session but still continue executing the request. In most cases this is unexpected behavior considering the request is likely malicious. Continuing to process the request is especially dangerous if the application relies on different cookies for authentication or authorization."
      },
      "local_effect" : {
        "en" : "Controller actions might be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 352,
        "impact" : "Medium",
        "subcategory" : "csrf_not_protected_by_raising_exception_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "csrf_protection_disabled_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The default cross-site request forgery protection available in Ruby on Rails is disabled."
      },
      "local_effect" : {
        "en" : "Controller actions might be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 352,
        "impact" : "High",
        "subcategory" : "csrf_protection_disabled_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "csrf_protection_missing_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "This controller is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controller actions might be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 352,
        "impact" : "High",
        "subcategory" : "csrf_protection_missing_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "cve_2011_0447_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "Flash can be used to manipulate headers and bypass cross-site request forgery protection.\n\nOfficial description of vulnerability: There is a vulnerability in this version of Ruby on Rails that could allow an attacker to circumvent the CSRF protection provided.\n\nCertain combinations of browser plugins and HTTP redirects can be used to trick the user's browser into making cross-domain requests that include arbitrary HTTP headers specified by the attacker. An attacker can use this to spoof AJAX and API requests, bypass the built in CSRF protection, and successfully attack an application."
      },
      "local_effect" : {
        "en" : "Controller actions might be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 352,
        "impact" : "High",
        "subcategory" : "cve_2011_0447_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "database_update",
      "code-language" : "c#",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 352,
        "impact" : "High",
        "subcategory" : "database_update",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "database_update",
      "code-language" : "java",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 352,
        "impact" : "High",
        "subcategory" : "database_update",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "database_update",
      "code-language" : "javascript",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 352,
        "impact" : "High",
        "subcategory" : "database_update",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "database_update",
      "code-language" : "python",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 352,
        "impact" : "High",
        "subcategory" : "database_update",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "database_update",
      "code-language" : "typescript",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 352,
        "impact" : "High",
        "subcategory" : "database_update",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "database_update",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 352,
        "impact" : "High",
        "subcategory" : "database_update",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "filesystem_modification",
      "code-language" : "c#",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 352,
        "impact" : "Medium",
        "subcategory" : "filesystem_modification",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "filesystem_modification",
      "code-language" : "java",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 352,
        "impact" : "Medium",
        "subcategory" : "filesystem_modification",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "filesystem_modification",
      "code-language" : "javascript",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 352,
        "impact" : "Medium",
        "subcategory" : "filesystem_modification",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "filesystem_modification",
      "code-language" : "typescript",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 352,
        "impact" : "Medium",
        "subcategory" : "filesystem_modification",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "filesystem_modification",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "The web application controller modifies data or state and is unprotected from cross-site request forgery."
      },
      "local_effect" : {
        "en" : "Controllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 352,
        "impact" : "Medium",
        "subcategory" : "filesystem_modification",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "hana_xs_prevent_xsrf_disabled",
      "code-language" : "javascript",
      "name" : {
        "en" : "XSRF prevention disabled"
      },
      "description" : {
        "en" : "The configuration file does not enable cross-site request forgery prevention."
      },
      "local_effect" : {
        "en" : "Application request handlers that execute actions or update state may be hijacked to perform activities without the user's knowledge or authorization."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 352,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "hana_xs_prevent_xsrf_disabled",
      "code-language" : "typescript",
      "name" : {
        "en" : "XSRF prevention disabled"
      },
      "description" : {
        "en" : "The configuration file does not enable cross-site request forgery prevention."
      },
      "local_effect" : {
        "en" : "Application request handlers that execute actions or update state may be hijacked to perform activities without the user's knowledge or authorization."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 352,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "http_verb_confusion_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Http verb confusion"
      },
      "description" : {
        "en" : "This check may not handle HEAD verb requests correctly."
      },
      "local_effect" : {
        "en" : "If the code assumes that the request is a POST because it is not a GET, it may overlook HEAD requests. This can result in CSRF bypass, since CSRF is not verified for GET or HEAD requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 352,
        "impact" : "Low",
        "subcategory" : "http_verb_confusion_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "csrf",
      "subtype" : "symfony_protection_disabled",
      "code-language" : "php",
      "name" : {
        "en" : "CSRF protection disabled"
      },
      "description" : {
        "en" : "Disabling Symfony's built-in cross-site request forgery protection."
      },
      "local_effect" : {
        "en" : "Symfony will not protect your application from CSRF attacks.  Unless you implement your own CSRF protection, an attacker may cause your controllers to update application state or perform activities using a user's session without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 352,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "css_injection",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "CSS Injection"
      },
      "description" : {
        "en" : "A user-controllable string is used as part of a CSS directive."
      },
      "local_effect" : {
        "en" : "An attacker may be able to steal information contained in the web page, or leverage this CSS injection to facilitate phishing attacks."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 74,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1302
      }
    },
    {
      "type" : "css_injection",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "CSS Injection"
      },
      "description" : {
        "en" : "A user-controllable string is used as part of a CSS directive."
      },
      "local_effect" : {
        "en" : "An attacker may be able to steal information contained in the web page, or leverage this CSS injection to facilitate phishing attacks."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 74,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1302
      }
    },
    {
      "type" : "cuda.divergance_at_collective_operation",
      "subtype" : "collective_block_participants_converged",
      "code-language" : "cuda",
      "name" : {
        "en" : "Divergence at collective operation"
      },
      "description" : {
        "en" : "Device-thread-block collective operations are executed on a per-warp basis. For this reason, performing these operations in conditional branches, where all participating device-threads do not evaluate the condition identically, can lead to undefined behavior."
      },
      "local_effect" : {
        "en" : "Participating device threads in a device-thread-block collective operation have diverged leading to undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact quality",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "collective_block_participants_converged",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "cuda.divergance_at_collective_operation",
      "subtype" : "collective_warp_converged",
      "code-language" : "cuda",
      "name" : {
        "en" : "Divergence at collective operation"
      },
      "description" : {
        "en" : "Before Compute Capability 7.0, calling warp collective operations in conditional branches, where all participating device-threads do not evaluate the condition identically, can lead to undefined behavior."
      },
      "local_effect" : {
        "en" : "Participating device threads in a warp collective operation have diverged leading to undefined behaviour."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact quality",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "collective_warp_converged",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "cuda.invalid_memory_access",
      "subtype" : "device_private",
      "code-language" : "cuda",
      "name" : {
        "en" : "Invalid memory access"
      },
      "description" : {
        "en" : "Device-private objects do not exist in the host program. This address, when used in host code, will either be invalid, or contain different data. This leads to undefined behavior."
      },
      "local_effect" : {
        "en" : "Usage of a device-private object in host code has undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "device_private",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "cuda.invalid_memory_access",
      "subtype" : "device_thread",
      "code-language" : "cuda",
      "name" : {
        "en" : "Invalid memory access"
      },
      "description" : {
        "en" : "A device-thread object is only accessible from within the device-thread in which it was created. This address, when used in a different device-thread, will either be invalid, or contain different data. This leads to undefined behavior."
      },
      "local_effect" : {
        "en" : "Usage of a device-thread object outside of its device-thread has undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "device_thread",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "cuda.invalid_memory_access",
      "subtype" : "device_thread_block",
      "code-language" : "cuda",
      "name" : {
        "en" : "Invalid memory access"
      },
      "description" : {
        "en" : "A device-thread-block object is only accessible from within the device-thread-block in which it was created. This address, when used in a different device-thread-block, will either be invalid, or contain different data. This leads to undefined behavior."
      },
      "local_effect" : {
        "en" : "Usage of a device-thread-block object outside of its device-thread-block has undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "device_thread_block",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "cuda.invalid_memory_access",
      "subtype" : "host_private",
      "code-language" : "cuda",
      "name" : {
        "en" : "Invalid memory access"
      },
      "description" : {
        "en" : "Host-private objects do not exist in device programs. This address, when used in device code, will either be invalid, or contain different data. This leads to undefined behavior."
      },
      "local_effect" : {
        "en" : "Usage of a host-private object in device code has undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "host_private",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "cuda.invalid_memory_access",
      "subtype" : "mixed_memory_spaces",
      "code-language" : "cuda",
      "name" : {
        "en" : "Invalid memory access"
      },
      "description" : {
        "en" : "An object allocated in one space contains sub-objects that are allocated in a different space.  Functions or kernels that use this object are likely to display undefined behaviour."
      },
      "local_effect" : {
        "en" : "Use of this aggregate is likely incorrect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "mixed_memory_spaces",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "cuda.share_function",
      "subtype" : "call_device_only",
      "code-language" : "cuda",
      "name" : {
        "en" : "Function call in incorrect execution space"
      },
      "description" : {
        "en" : "A function with only __device__ specifier cannot be called from a function with __host__ specifier."
      },
      "local_effect" : {
        "en" : "Calling device-only function in the host execution space can lead to undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact quality",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "call_device_only",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "cuda.share_function",
      "subtype" : "call_host_only",
      "code-language" : "cuda",
      "name" : {
        "en" : "Function call in incorrect execution space"
      },
      "description" : {
        "en" : "A function with no __device__ specifier cannot be called from a function with __device__ or __global__ specifier."
      },
      "local_effect" : {
        "en" : "Calling host-only function in the device execution space can lead to undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact quality",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "call_host_only",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "cuda.specifiers_inconsistency",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Inconsistent CUDA specifiers across function declarations"
      },
      "description" : {
        "en" : "CUDA specifiers are inconsistent across declarations of the same function. It is therefore unclear which specifiers are applicable to the function and which are disregarded. This is a subtle violation of the sharing guidelines, and leads to undefined behavior."
      },
      "local_effect" : {
        "en" : "Differing CUDA specifiers on function declarations of the same name can lead to undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact quality",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "cuda.specifiers_inconsistency",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Inconsistent CUDA specifiers across function declarations"
      },
      "description" : {
        "en" : "CUDA specifiers are inconsistent across declarations of the same function. It is therefore unclear which specifiers are applicable to the function and which are disregarded. This is a subtle violation of the sharing guidelines, and leads to undefined behavior."
      },
      "local_effect" : {
        "en" : "Differing CUDA specifiers on function declarations of the same name can lead to undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact quality",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "cuda.specifiers_inconsistency",
      "subtype" : "parse_warnings",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Inconsistent CUDA specifiers across function declarations"
      },
      "description" : {
        "en" : "CUDA specifiers are inconsistent across declarations of the same function. It is therefore unclear which specifiers are applicable to the function and which are disregarded. This is a subtle violation of the sharing guidelines, and leads to undefined behavior."
      },
      "local_effect" : {
        "en" : "Differing CUDA specifiers on function declarations of the same name can lead to undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact quality",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "parse_warnings",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "cuda.specifiers_inconsistency",
      "subtype" : "parse_warnings",
      "code-language" : "cuda",
      "name" : {
        "en" : "Inconsistent CUDA specifiers across function declarations"
      },
      "description" : {
        "en" : "CUDA specifiers are inconsistent across declarations of the same function. It is therefore unclear which specifiers are applicable to the function and which are disregarded. This is a subtle violation of the sharing guidelines, and leads to undefined behavior."
      },
      "local_effect" : {
        "en" : "Differing CUDA specifiers on function declarations of the same name can lead to undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact quality",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "parse_warnings",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "dangerous_api",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Call to an inherently dangerous function"
      },
      "description" : {
        "en" : "Calling an inherently dangerous function for which better alternatives exist."
      },
      "local_effect" : {
        "en" : "Program invariants may be violated in unexpected and irrecoverable ways."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 242,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 761
      }
    },
    {
      "type" : "dc.predictable_key_password",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Calling risky function"
      },
      "description" : {
        "en" : "The called function is unsafe for security related code"
      },
      "local_effect" : {
        "en" : "May result in a security violation"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 676,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1129
      }
    },
    {
      "type" : "dc.predictable_key_password",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Calling risky function"
      },
      "description" : {
        "en" : "The called function is unsafe for security related code"
      },
      "local_effect" : {
        "en" : "May result in a security violation"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 676,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1129
      }
    },
    {
      "type" : "dc.predictable_key_password",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Calling risky function"
      },
      "description" : {
        "en" : "The called function is unsafe for security related code"
      },
      "local_effect" : {
        "en" : "May result in a security violation"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 676,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1129
      }
    },
    {
      "type" : "dc.stream_buffer",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Calling risky function"
      },
      "description" : {
        "en" : "The called function is unsafe for security related code"
      },
      "local_effect" : {
        "en" : "May result in a security violation"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 676,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1129
      }
    },
    {
      "type" : "dc.stream_buffer",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Calling risky function"
      },
      "description" : {
        "en" : "The called function is unsafe for security related code"
      },
      "local_effect" : {
        "en" : "May result in a security violation"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 676,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1129
      }
    },
    {
      "type" : "dc.stream_buffer",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Calling risky function"
      },
      "description" : {
        "en" : "The called function is unsafe for security related code"
      },
      "local_effect" : {
        "en" : "May result in a security violation"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 676,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1129
      }
    },
    {
      "type" : "dc.weak_crypto",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Calling risky function"
      },
      "description" : {
        "en" : "The called function is unsafe for security related code"
      },
      "local_effect" : {
        "en" : "May result in a security violation"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 676,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1129
      }
    },
    {
      "type" : "dc.weak_crypto",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Calling risky function"
      },
      "description" : {
        "en" : "The called function is unsafe for security related code"
      },
      "local_effect" : {
        "en" : "May result in a security violation"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 676,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1129
      }
    },
    {
      "type" : "dc.weak_crypto",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Calling risky function"
      },
      "description" : {
        "en" : "The called function is unsafe for security related code"
      },
      "local_effect" : {
        "en" : "May result in a security violation"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 676,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1129
      }
    },
    {
      "type" : "dead_authorization_rule",
      "subtype" : "dead_allow_rule",
      "code-language" : "c#",
      "name" : {
        "en" : "Dead Allow Rule"
      },
      "description" : {
        "en" : "An allow rule has no effect"
      },
      "local_effect" : {
        "en" : "An allow rule is unreachable after one or more conflicting deny rules."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 863,
        "impact" : "Low",
        "subcategory" : "dead_allow_rule",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1296
      }
    },
    {
      "type" : "dead_authorization_rule",
      "subtype" : "dead_deny_rule",
      "code-language" : "c#",
      "name" : {
        "en" : "Dead Deny Rule"
      },
      "description" : {
        "en" : "A deny rule has no effect"
      },
      "local_effect" : {
        "en" : "A deny rule is unreachable after one or more conflicting allow rules."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 863,
        "impact" : "Medium",
        "subcategory" : "dead_deny_rule",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1296
      }
    },
    {
      "type" : "dead_wait",
      "subtype" : "bad_check_of_wait_condition",
      "code-language" : "java",
      "name" : {
        "en" : "Indefinite wait"
      },
      "description" : {
        "en" : "A thread waits for a thread-shared condition which may have already been satisfied, causing a hang."
      },
      "local_effect" : {
        "en" : "This thread can wait after its wait condition has been satisfied, causing it to wait needlessly, perhaps forever."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "dead_wait",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1284
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_case_in_switch",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Dead case in switch"
      },
      "description" : {
        "en" : "Switch never goes directly to this case"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches this switch statement, the value cannot be equal to the given case. The code at the case is not dead, because it can be reached by falling through from a previous case."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_case_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_case_in_switch",
      "code-language" : "c#",
      "name" : {
        "en" : "Dead case in switch"
      },
      "description" : {
        "en" : "Switch never goes directly to this case"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches this switch statement, the value cannot be equal to the given case. The code at the case is not dead, because it can be reached by falling through from a previous case."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_case_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_case_in_switch",
      "code-language" : "cuda",
      "name" : {
        "en" : "Dead case in switch"
      },
      "description" : {
        "en" : "Switch never goes directly to this case"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches this switch statement, the value cannot be equal to the given case. The code at the case is not dead, because it can be reached by falling through from a previous case."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_case_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_case_in_switch",
      "code-language" : "go",
      "name" : {
        "en" : "Dead case in switch"
      },
      "description" : {
        "en" : "Switch never goes directly to this case"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches this switch statement, the value cannot be equal to the given case. The code at the case is not dead, because it can be reached by falling through from a previous case."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_case_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_case_in_switch",
      "code-language" : "java",
      "name" : {
        "en" : "Dead case in switch"
      },
      "description" : {
        "en" : "Switch never goes directly to this case"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches this switch statement, the value cannot be equal to the given case. The code at the case is not dead, because it can be reached by falling through from a previous case."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_case_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_case_in_switch",
      "code-language" : "javascript",
      "name" : {
        "en" : "Dead case in switch"
      },
      "description" : {
        "en" : "Switch never goes directly to this case"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches this switch statement, the value cannot be equal to the given case. The code at the case is not dead, because it can be reached by falling through from a previous case."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_case_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_case_in_switch",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Dead case in when"
      },
      "description" : {
        "en" : "When never goes directly to this case"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches this when statement, the value cannot be equal to the given case."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_case_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_case_in_switch",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Dead case in switch"
      },
      "description" : {
        "en" : "Switch never goes directly to this case"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches this switch statement, the value cannot be equal to the given case. The code at the case is not dead, because it can be reached by falling through from a previous case."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_case_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_case_in_switch",
      "code-language" : "php",
      "name" : {
        "en" : "Dead case in switch"
      },
      "description" : {
        "en" : "Switch never goes directly to this case"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches this switch statement, the value cannot be equal to the given case. The code at the case is not dead, because it can be reached by falling through from a previous case."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_case_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_case_in_switch",
      "code-language" : "python",
      "name" : {
        "en" : "Dead case in switch"
      },
      "description" : {
        "en" : "Switch never goes directly to this case"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches this switch statement, the value cannot be equal to the given case. The code at the case is not dead, because it can be reached by falling through from a previous case."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_case_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_case_in_switch",
      "code-language" : "ruby",
      "name" : {
        "en" : "Dead case in switch"
      },
      "description" : {
        "en" : "Switch never goes directly to this case"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches this switch statement, the value cannot be equal to the given case. The code at the case is not dead, because it can be reached by falling through from a previous case."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_case_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_case_in_switch",
      "code-language" : "scala",
      "name" : {
        "en" : "Dead case in switch"
      },
      "description" : {
        "en" : "Switch never goes directly to this case"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches this switch statement, the value cannot be equal to the given case. The code at the case is not dead, because it can be reached by falling through from a previous case."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_case_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_case_in_switch",
      "code-language" : "typescript",
      "name" : {
        "en" : "Dead case in switch"
      },
      "description" : {
        "en" : "Switch never goes directly to this case"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches this switch statement, the value cannot be equal to the given case. The code at the case is not dead, because it can be reached by falling through from a previous case."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_case_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_case_in_switch",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Dead case in switch"
      },
      "description" : {
        "en" : "Select never goes directly to this Case"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches this Select statement, the value cannot be equal to the given Case. The code at the Case is not dead, because it can be reached by falling through from a previous Case."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_case_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_default_in_switch",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Dead default in switch"
      },
      "description" : {
        "en" : "Default in switch statement is dead code"
      },
      "local_effect" : {
        "en" : "The statements in the default case are never executed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_default_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_default_in_switch",
      "code-language" : "c#",
      "name" : {
        "en" : "Dead default in switch"
      },
      "description" : {
        "en" : "Default in switch statement is dead code"
      },
      "local_effect" : {
        "en" : "The statements in the default case are never executed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_default_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_default_in_switch",
      "code-language" : "cuda",
      "name" : {
        "en" : "Dead default in switch"
      },
      "description" : {
        "en" : "Default in switch statement is dead code"
      },
      "local_effect" : {
        "en" : "The statements in the default case are never executed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_default_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_default_in_switch",
      "code-language" : "go",
      "name" : {
        "en" : "Dead default in switch"
      },
      "description" : {
        "en" : "Default in switch statement is dead code"
      },
      "local_effect" : {
        "en" : "The statements in the default case are never executed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_default_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_default_in_switch",
      "code-language" : "java",
      "name" : {
        "en" : "Dead default in switch"
      },
      "description" : {
        "en" : "Default in switch statement is dead code"
      },
      "local_effect" : {
        "en" : "The statements in the default case are never executed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_default_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_default_in_switch",
      "code-language" : "javascript",
      "name" : {
        "en" : "Dead default in switch"
      },
      "description" : {
        "en" : "Default in switch statement is dead code"
      },
      "local_effect" : {
        "en" : "The statements in the default case are never executed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_default_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_default_in_switch",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Dead default in when"
      },
      "description" : {
        "en" : "Default in when statement is dead code"
      },
      "local_effect" : {
        "en" : "The statements in the default case are never executed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_default_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_default_in_switch",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Dead default in switch"
      },
      "description" : {
        "en" : "Default in switch statement is dead code"
      },
      "local_effect" : {
        "en" : "The statements in the default case are never executed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_default_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_default_in_switch",
      "code-language" : "php",
      "name" : {
        "en" : "Dead default in switch"
      },
      "description" : {
        "en" : "Default in switch statement is dead code"
      },
      "local_effect" : {
        "en" : "The statements in the default case are never executed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_default_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_default_in_switch",
      "code-language" : "python",
      "name" : {
        "en" : "Dead default in switch"
      },
      "description" : {
        "en" : "Default in switch statement is dead code"
      },
      "local_effect" : {
        "en" : "The statements in the default case are never executed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_default_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_default_in_switch",
      "code-language" : "ruby",
      "name" : {
        "en" : "Dead default in switch"
      },
      "description" : {
        "en" : "Default in switch statement is dead code"
      },
      "local_effect" : {
        "en" : "The statements in the default case are never executed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_default_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_default_in_switch",
      "code-language" : "scala",
      "name" : {
        "en" : "Dead default in switch"
      },
      "description" : {
        "en" : "Default in switch statement is dead code"
      },
      "local_effect" : {
        "en" : "The statements in the default case are never executed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_default_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_default_in_switch",
      "code-language" : "typescript",
      "name" : {
        "en" : "Dead default in switch"
      },
      "description" : {
        "en" : "Default in switch statement is dead code"
      },
      "local_effect" : {
        "en" : "The statements in the default case are never executed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_default_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "dead_default_in_switch",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Dead default in switch"
      },
      "description" : {
        "en" : "Case Else in Select statement is dead code"
      },
      "local_effect" : {
        "en" : "The statements in the Case Else are never executed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "dead_default_in_switch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "effectively_constant",
      "code-language" : "c/c++",
      "name" : {
        "en" : "'Constant' variable guards dead code"
      },
      "description" : {
        "en" : "Variable assigned once to a constant guards dead code."
      },
      "local_effect" : {
        "en" : "A variable being assigned only once may be intentionally guarding disabled code, or it may represent incomplete logic where a missing assignment would make the variable not be constant."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "effectively_constant",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "effectively_constant",
      "code-language" : "c#",
      "name" : {
        "en" : "'Constant' variable guards dead code"
      },
      "description" : {
        "en" : "Variable assigned once to a constant guards dead code."
      },
      "local_effect" : {
        "en" : "A variable being assigned only once may be intentionally guarding disabled code, or it may represent incomplete logic where a missing assignment would make the variable not be constant."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "effectively_constant",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "effectively_constant",
      "code-language" : "cuda",
      "name" : {
        "en" : "'Constant' variable guards dead code"
      },
      "description" : {
        "en" : "Variable assigned once to a constant guards dead code."
      },
      "local_effect" : {
        "en" : "A variable being assigned only once may be intentionally guarding disabled code, or it may represent incomplete logic where a missing assignment would make the variable not be constant."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "effectively_constant",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "effectively_constant",
      "code-language" : "go",
      "name" : {
        "en" : "'Constant' variable guards dead code"
      },
      "description" : {
        "en" : "Variable assigned once to a constant guards dead code."
      },
      "local_effect" : {
        "en" : "A variable being assigned only once may be intentionally guarding disabled code, or it may represent incomplete logic where a missing assignment would make the variable not be constant."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "effectively_constant",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "effectively_constant",
      "code-language" : "java",
      "name" : {
        "en" : "'Constant' variable guards dead code"
      },
      "description" : {
        "en" : "Variable assigned once to a constant guards dead code."
      },
      "local_effect" : {
        "en" : "A variable being assigned only once may be intentionally guarding disabled code, or it may represent incomplete logic where a missing assignment would make the variable not be constant."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "effectively_constant",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "effectively_constant",
      "code-language" : "javascript",
      "name" : {
        "en" : "'Constant' variable guards dead code"
      },
      "description" : {
        "en" : "Variable assigned once to a constant guards dead code."
      },
      "local_effect" : {
        "en" : "A variable being assigned only once may be intentionally guarding disabled code, or it may represent incomplete logic where a missing assignment would make the variable not be constant."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "effectively_constant",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "effectively_constant",
      "code-language" : "kotlin",
      "name" : {
        "en" : "'Constant' variable guards dead code"
      },
      "description" : {
        "en" : "Variable assigned once to a constant guards dead code."
      },
      "local_effect" : {
        "en" : "A variable being assigned only once may be intentionally guarding disabled code, or it may represent incomplete logic where a missing assignment would make the variable not be constant."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "effectively_constant",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "effectively_constant",
      "code-language" : "objective-c",
      "name" : {
        "en" : "'Constant' variable guards dead code"
      },
      "description" : {
        "en" : "Variable assigned once to a constant guards dead code."
      },
      "local_effect" : {
        "en" : "A variable being assigned only once may be intentionally guarding disabled code, or it may represent incomplete logic where a missing assignment would make the variable not be constant."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "effectively_constant",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "effectively_constant",
      "code-language" : "php",
      "name" : {
        "en" : "'Constant' variable guards dead code"
      },
      "description" : {
        "en" : "Variable assigned once to a constant guards dead code."
      },
      "local_effect" : {
        "en" : "A variable being assigned only once may be intentionally guarding disabled code, or it may represent incomplete logic where a missing assignment would make the variable not be constant."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "effectively_constant",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "effectively_constant",
      "code-language" : "python",
      "name" : {
        "en" : "'Constant' variable guards dead code"
      },
      "description" : {
        "en" : "Variable assigned once to a constant guards dead code."
      },
      "local_effect" : {
        "en" : "A variable being assigned only once may be intentionally guarding disabled code, or it may represent incomplete logic where a missing assignment would make the variable not be constant."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "effectively_constant",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "effectively_constant",
      "code-language" : "ruby",
      "name" : {
        "en" : "'Constant' variable guards dead code"
      },
      "description" : {
        "en" : "Variable assigned once to a constant guards dead code."
      },
      "local_effect" : {
        "en" : "A variable being assigned only once may be intentionally guarding disabled code, or it may represent incomplete logic where a missing assignment would make the variable not be constant."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "effectively_constant",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "effectively_constant",
      "code-language" : "scala",
      "name" : {
        "en" : "'Constant' variable guards dead code"
      },
      "description" : {
        "en" : "Variable assigned once to a constant guards dead code."
      },
      "local_effect" : {
        "en" : "A variable being assigned only once may be intentionally guarding disabled code, or it may represent incomplete logic where a missing assignment would make the variable not be constant."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "effectively_constant",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "effectively_constant",
      "code-language" : "typescript",
      "name" : {
        "en" : "'Constant' variable guards dead code"
      },
      "description" : {
        "en" : "Variable assigned once to a constant guards dead code."
      },
      "local_effect" : {
        "en" : "A variable being assigned only once may be intentionally guarding disabled code, or it may represent incomplete logic where a missing assignment would make the variable not be constant."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "effectively_constant",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "effectively_constant",
      "code-language" : "vb.net",
      "name" : {
        "en" : "'Constant' variable guards dead code"
      },
      "description" : {
        "en" : "Variable assigned once to a constant guards dead code."
      },
      "local_effect" : {
        "en" : "A variable being assigned only once may be intentionally guarding disabled code, or it may represent incomplete logic where a missing assignment would make the variable not be constant."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "effectively_constant",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "logical_contradiction",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Logically dead code"
      },
      "description" : {
        "en" : "Code can never be reached because of a logical contradiction"
      },
      "local_effect" : {
        "en" : "The indicated dead code may have performed some action; that action will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "logical_contradiction",
      "code-language" : "c#",
      "name" : {
        "en" : "Logically dead code"
      },
      "description" : {
        "en" : "Code can never be reached because of a logical contradiction"
      },
      "local_effect" : {
        "en" : "The indicated dead code may have performed some action; that action will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "logical_contradiction",
      "code-language" : "cuda",
      "name" : {
        "en" : "Logically dead code"
      },
      "description" : {
        "en" : "Code can never be reached because of a logical contradiction"
      },
      "local_effect" : {
        "en" : "The indicated dead code may have performed some action; that action will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "logical_contradiction",
      "code-language" : "go",
      "name" : {
        "en" : "Logically dead code"
      },
      "description" : {
        "en" : "Code can never be reached because of a logical contradiction"
      },
      "local_effect" : {
        "en" : "The indicated dead code may have performed some action; that action will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "logical_contradiction",
      "code-language" : "java",
      "name" : {
        "en" : "Logically dead code"
      },
      "description" : {
        "en" : "Code can never be reached because of a logical contradiction"
      },
      "local_effect" : {
        "en" : "The indicated dead code may have performed some action; that action will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "logical_contradiction",
      "code-language" : "javascript",
      "name" : {
        "en" : "Logically dead code"
      },
      "description" : {
        "en" : "Code can never be reached because of a logical contradiction"
      },
      "local_effect" : {
        "en" : "The indicated dead code may have performed some action; that action will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "logical_contradiction",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Logically dead code"
      },
      "description" : {
        "en" : "Code can never be reached because of a logical contradiction"
      },
      "local_effect" : {
        "en" : "The indicated dead code may have performed some action; that action will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "logical_contradiction",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Logically dead code"
      },
      "description" : {
        "en" : "Code can never be reached because of a logical contradiction"
      },
      "local_effect" : {
        "en" : "The indicated dead code may have performed some action; that action will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "logical_contradiction",
      "code-language" : "php",
      "name" : {
        "en" : "Logically dead code"
      },
      "description" : {
        "en" : "Code can never be reached because of a logical contradiction"
      },
      "local_effect" : {
        "en" : "The indicated dead code may have performed some action; that action will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "logical_contradiction",
      "code-language" : "python",
      "name" : {
        "en" : "Logically dead code"
      },
      "description" : {
        "en" : "Code can never be reached because of a logical contradiction"
      },
      "local_effect" : {
        "en" : "The indicated dead code may have performed some action; that action will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "logical_contradiction",
      "code-language" : "ruby",
      "name" : {
        "en" : "Logically dead code"
      },
      "description" : {
        "en" : "Code can never be reached because of a logical contradiction"
      },
      "local_effect" : {
        "en" : "The indicated dead code may have performed some action; that action will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "logical_contradiction",
      "code-language" : "scala",
      "name" : {
        "en" : "Logically dead code"
      },
      "description" : {
        "en" : "Code can never be reached because of a logical contradiction"
      },
      "local_effect" : {
        "en" : "The indicated dead code may have performed some action; that action will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "logical_contradiction",
      "code-language" : "typescript",
      "name" : {
        "en" : "Logically dead code"
      },
      "description" : {
        "en" : "Code can never be reached because of a logical contradiction"
      },
      "local_effect" : {
        "en" : "The indicated dead code may have performed some action; that action will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "logical_contradiction",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Logically dead code"
      },
      "description" : {
        "en" : "Code can never be reached because of a logical contradiction"
      },
      "local_effect" : {
        "en" : "The indicated dead code may have performed some action; that action will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "redundant_test",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Redundant test"
      },
      "description" : {
        "en" : "Test always evaluates the same"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches the test of this condition there is only one possible outcome for the test.  The code at the destination of this branch is not dead, either because this condition is always true or because there is at least one other branch that reaches it."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "redundant_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "redundant_test",
      "code-language" : "c#",
      "name" : {
        "en" : "Redundant test"
      },
      "description" : {
        "en" : "Test always evaluates the same"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches the test of this condition there is only one possible outcome for the test.  The code at the destination of this branch is not dead, either because this condition is always true or because there is at least one other branch that reaches it."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "redundant_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "redundant_test",
      "code-language" : "cuda",
      "name" : {
        "en" : "Redundant test"
      },
      "description" : {
        "en" : "Test always evaluates the same"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches the test of this condition there is only one possible outcome for the test.  The code at the destination of this branch is not dead, either because this condition is always true or because there is at least one other branch that reaches it."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "redundant_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "redundant_test",
      "code-language" : "go",
      "name" : {
        "en" : "Redundant test"
      },
      "description" : {
        "en" : "Test always evaluates the same"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches the test of this condition there is only one possible outcome for the test.  The code at the destination of this branch is not dead, either because this condition is always true or because there is at least one other branch that reaches it."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "redundant_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "redundant_test",
      "code-language" : "java",
      "name" : {
        "en" : "Redundant test"
      },
      "description" : {
        "en" : "Test always evaluates the same"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches the test of this condition there is only one possible outcome for the test.  The code at the destination of this branch is not dead, either because this condition is always true or because there is at least one other branch that reaches it."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "redundant_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "redundant_test",
      "code-language" : "javascript",
      "name" : {
        "en" : "Redundant test"
      },
      "description" : {
        "en" : "Test always evaluates the same"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches the test of this condition there is only one possible outcome for the test.  The code at the destination of this branch is not dead, either because this condition is always true or because there is at least one other branch that reaches it."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "redundant_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "redundant_test",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Redundant test"
      },
      "description" : {
        "en" : "Test always evaluates the same"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches the test of this condition there is only one possible outcome for the test.  The code at the destination of this branch is not dead, either because this condition is always true or because there is at least one other branch that reaches it."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "redundant_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "redundant_test",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Redundant test"
      },
      "description" : {
        "en" : "Test always evaluates the same"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches the test of this condition there is only one possible outcome for the test.  The code at the destination of this branch is not dead, either because this condition is always true or because there is at least one other branch that reaches it."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "redundant_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "redundant_test",
      "code-language" : "php",
      "name" : {
        "en" : "Redundant test"
      },
      "description" : {
        "en" : "Test always evaluates the same"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches the test of this condition there is only one possible outcome for the test.  The code at the destination of this branch is not dead, either because this condition is always true or because there is at least one other branch that reaches it."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "redundant_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "redundant_test",
      "code-language" : "python",
      "name" : {
        "en" : "Redundant test"
      },
      "description" : {
        "en" : "Test always evaluates the same"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches the test of this condition there is only one possible outcome for the test.  The code at the destination of this branch is not dead, either because this condition is always true or because there is at least one other branch that reaches it."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "redundant_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "redundant_test",
      "code-language" : "ruby",
      "name" : {
        "en" : "Redundant test"
      },
      "description" : {
        "en" : "Test always evaluates the same"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches the test of this condition there is only one possible outcome for the test.  The code at the destination of this branch is not dead, either because this condition is always true or because there is at least one other branch that reaches it."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "redundant_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "redundant_test",
      "code-language" : "scala",
      "name" : {
        "en" : "Redundant test"
      },
      "description" : {
        "en" : "Test always evaluates the same"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches the test of this condition there is only one possible outcome for the test.  The code at the destination of this branch is not dead, either because this condition is always true or because there is at least one other branch that reaches it."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "redundant_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "redundant_test",
      "code-language" : "typescript",
      "name" : {
        "en" : "Redundant test"
      },
      "description" : {
        "en" : "Test always evaluates the same"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches the test of this condition there is only one possible outcome for the test.  The code at the destination of this branch is not dead, either because this condition is always true or because there is at least one other branch that reaches it."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "redundant_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadcode",
      "subtype" : "redundant_test",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Redundant test"
      },
      "description" : {
        "en" : "Test always evaluates the same"
      },
      "local_effect" : {
        "en" : "By the time the program execution reaches the test of this condition there is only one possible outcome for the test.  The code at the destination of this branch is not dead, either because this condition is always true or because there is at least one other branch that reaches it."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 561,
        "impact" : "Low",
        "subcategory" : "redundant_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "deadlock",
      "subtype" : "bad_api",
      "code-language" : "java",
      "name" : {
        "en" : "Call to a deadlock-prone function"
      },
      "description" : {
        "en" : "Using a deprecated API that can easily lead to a deadlock despite the existence of better alternatives."
      },
      "local_effect" : {
        "en" : "Program may deadlock: two or more threads will be waiting on each other indefinitely and unable to progress."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 833,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1225
      }
    },
    {
      "type" : "deadlock",
      "subtype" : "lock_inversion",
      "code-language" : "c#",
      "name" : {
        "en" : "Thread deadlock"
      },
      "description" : {
        "en" : "Threads may try to acquire two locks in different orders, potentially causing deadlock"
      },
      "local_effect" : {
        "en" : "Two threads will be stuck waiting forever if each holds a lock the other needs to acquire."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 833,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1225
      }
    },
    {
      "type" : "deadlock",
      "subtype" : "lock_inversion",
      "code-language" : "go",
      "name" : {
        "en" : "Thread deadlock"
      },
      "description" : {
        "en" : "Threads may try to acquire two locks in different orders, potentially causing deadlock"
      },
      "local_effect" : {
        "en" : "Two threads will be stuck waiting forever if each holds a lock the other needs to acquire."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 833,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1225
      }
    },
    {
      "type" : "deadlock",
      "subtype" : "lock_inversion",
      "code-language" : "java",
      "name" : {
        "en" : "Thread deadlock"
      },
      "description" : {
        "en" : "Threads may try to acquire two locks in different orders, potentially causing deadlock"
      },
      "local_effect" : {
        "en" : "Two threads will be stuck waiting forever if each holds a lock the other needs to acquire."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 833,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1225
      }
    },
    {
      "type" : "deadlock",
      "subtype" : "lock_inversion",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Thread deadlock"
      },
      "description" : {
        "en" : "Threads may try to acquire two locks in different orders, potentially causing deadlock"
      },
      "local_effect" : {
        "en" : "Two threads will be stuck waiting forever if each holds a lock the other needs to acquire."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 833,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1225
      }
    },
    {
      "type" : "debug_mode",
      "subtype" : "asp.net",
      "code-language" : "c#",
      "name" : {
        "en" : "Debug mode enabled"
      },
      "description" : {
        "en" : "ASP.NET debug mode is enabled."
      },
      "local_effect" : {
        "en" : "Debug binaries will give detailed debugging messages which may expose sensitive server variables or configuration."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 11,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 80
      }
    },
    {
      "type" : "debug_mode",
      "subtype" : "debug_mode_enabled_django",
      "code-language" : "python",
      "name" : {
        "en" : "Debug mode enabled"
      },
      "description" : {
        "en" : "The debug mode is enabled."
      },
      "local_effect" : {
        "en" : "Audit the debug mode configuration. When enabled in the production code it leads to security risks because error handlers will display verbose error messages that may contain sensitive information."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 489,
        "impact" : "Audit",
        "subcategory" : "debug_mode_enabled_django",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1318
      }
    },
    {
      "type" : "delete_array",
      "subtype" : "array_delete_on_non_array",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Array delete misuse"
      },
      "description" : {
        "en" : "Using array delete on a non-array"
      },
      "local_effect" : {
        "en" : "Undefined behavior might result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 459,
        "impact" : "High",
        "subcategory" : "non_array_delete",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1170
      }
    },
    {
      "type" : "delete_array",
      "subtype" : "array_delete_on_non_array",
      "code-language" : "cuda",
      "name" : {
        "en" : "Array delete misuse"
      },
      "description" : {
        "en" : "Using array delete on a non-array"
      },
      "local_effect" : {
        "en" : "Undefined behavior might result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 459,
        "impact" : "High",
        "subcategory" : "non_array_delete",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1170
      }
    },
    {
      "type" : "delete_array",
      "subtype" : "array_delete_on_non_array",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Array delete misuse"
      },
      "description" : {
        "en" : "Using array delete on a non-array"
      },
      "local_effect" : {
        "en" : "Undefined behavior might result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 459,
        "impact" : "High",
        "subcategory" : "non_array_delete",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1170
      }
    },
    {
      "type" : "delete_array",
      "subtype" : "non_array_delete_on_array",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Incorrect delete operator"
      },
      "description" : {
        "en" : "Using non-array delete on an array of objects, scalars, or pointers allocated with new[]"
      },
      "local_effect" : {
        "en" : "Undefined behavior might result and destructors may not be called on objects in the array."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 459,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1170
      }
    },
    {
      "type" : "delete_array",
      "subtype" : "non_array_delete_on_array",
      "code-language" : "cuda",
      "name" : {
        "en" : "Incorrect delete operator"
      },
      "description" : {
        "en" : "Using non-array delete on an array of objects, scalars, or pointers allocated with new[]"
      },
      "local_effect" : {
        "en" : "Undefined behavior might result and destructors may not be called on objects in the array."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 459,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1170
      }
    },
    {
      "type" : "delete_array",
      "subtype" : "non_array_delete_on_array",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Incorrect delete operator"
      },
      "description" : {
        "en" : "Using non-array delete on an array of objects, scalars, or pointers allocated with new[]"
      },
      "local_effect" : {
        "en" : "Undefined behavior might result and destructors may not be called on objects in the array."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 459,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1170
      }
    },
    {
      "type" : "delete_array",
      "subtype" : "object",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Non-array delete for objects"
      },
      "description" : {
        "en" : "Using non-array delete on an array of objects; should be using delete[]"
      },
      "local_effect" : {
        "en" : "Destructors will not be called on the objects in the array, this may lead to resource leaks and unexpected behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 459,
        "impact" : "High",
        "subcategory" : "object",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1170
      }
    },
    {
      "type" : "delete_array",
      "subtype" : "object",
      "code-language" : "cuda",
      "name" : {
        "en" : "Non-array delete for objects"
      },
      "description" : {
        "en" : "Using non-array delete on an array of objects; should be using delete[]"
      },
      "local_effect" : {
        "en" : "Destructors will not be called on the objects in the array, this may lead to resource leaks and unexpected behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 459,
        "impact" : "High",
        "subcategory" : "object",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1170
      }
    },
    {
      "type" : "delete_array",
      "subtype" : "object",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Non-array delete for objects"
      },
      "description" : {
        "en" : "Using non-array delete on an array of objects; should be using delete[]"
      },
      "local_effect" : {
        "en" : "Destructors will not be called on the objects in the array, this may lead to resource leaks and unexpected behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 459,
        "impact" : "High",
        "subcategory" : "object",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1170
      }
    },
    {
      "type" : "delete_array",
      "subtype" : "scalar",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Non-array delete for scalars"
      },
      "description" : {
        "en" : "Using non-array delete on an array of scalars or pointers allocated with new[]"
      },
      "local_effect" : {
        "en" : "Undefined behavior might result; however most implementations will work."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Compiler dependency",
        "cweCategory" : 459,
        "impact" : "Low",
        "subcategory" : "scalar",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1170
      }
    },
    {
      "type" : "delete_array",
      "subtype" : "scalar",
      "code-language" : "cuda",
      "name" : {
        "en" : "Non-array delete for scalars"
      },
      "description" : {
        "en" : "Using non-array delete on an array of scalars or pointers allocated with new[]"
      },
      "local_effect" : {
        "en" : "Undefined behavior might result; however most implementations will work."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Compiler dependency",
        "cweCategory" : 459,
        "impact" : "Low",
        "subcategory" : "scalar",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1170
      }
    },
    {
      "type" : "delete_array",
      "subtype" : "scalar",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Non-array delete for scalars"
      },
      "description" : {
        "en" : "Using non-array delete on an array of scalars or pointers allocated with new[]"
      },
      "local_effect" : {
        "en" : "Undefined behavior might result; however most implementations will work."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Compiler dependency",
        "cweCategory" : 459,
        "impact" : "Low",
        "subcategory" : "scalar",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1170
      }
    },
    {
      "type" : "delete_void",
      "subtype" : "void_pointer",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Deleting void pointer"
      },
      "description" : {
        "en" : "Deleting a void pointer (void*)"
      },
      "local_effect" : {
        "en" : "Undefined behavior might result; in practice, the memory is typically freed, but the destructor is not run."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 758,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1166
      }
    },
    {
      "type" : "delete_void",
      "subtype" : "void_pointer",
      "code-language" : "cuda",
      "name" : {
        "en" : "Deleting void pointer"
      },
      "description" : {
        "en" : "Deleting a void pointer (void*)"
      },
      "local_effect" : {
        "en" : "Undefined behavior might result; in practice, the memory is typically freed, but the destructor is not run."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 758,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1166
      }
    },
    {
      "type" : "delete_void",
      "subtype" : "void_pointer",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Deleting void pointer"
      },
      "description" : {
        "en" : "Deleting a void pointer (void*)"
      },
      "local_effect" : {
        "en" : "Undefined behavior might result; in practice, the memory is typically freed, but the destructor is not run."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 758,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1166
      }
    },
    {
      "type" : "deny_list_for_authn",
      "subtype" : "auth_deny_list_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Authentication"
      },
      "description" : {
        "en" : "This controller appears to be using a filter to require authentication for certain actions. The actions are specified using a deny-list, which means any new actions will be unprotected by default. It is recommended to use an allow-list instead, so new actions will be protected by default. To allow-list actions, use the :only option instead of :except with a list of actions that should not be authenticated."
      },
      "local_effect" : {
        "en" : "Missing or insufficient authorization may permit unintended users to perform actions or access sensitive data for which they do not have permission."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 184,
        "impact" : "Medium",
        "subcategory" : "auth_deny_list_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 707
      }
    },
    {
      "type" : "deny_list_for_authn",
      "subtype" : "csrf_deny_list_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "This controller is skipping the verify_authenticity_token filter for all actions except those explicitly listed. The verify_authenticity_token filter is used to prevent cross-site request forgery. Actions not in the list might be vulnerable to cross site request forgery.  Instead, it is recommended to list the actions for which the filter should be skipped, which will protect new actions by default instead of leaving them vulnerable. To do so, use the :only option instead of :except."
      },
      "local_effect" : {
        "en" : "Controller actions might be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 184,
        "impact" : "Medium",
        "subcategory" : "csrf_deny_list_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 707
      }
    },
    {
      "type" : "disallowed_null_value",
      "subtype" : "non_null_annotation",
      "code-language" : "java",
      "name" : {
        "en" : "Non-null annotation violation"
      },
      "description" : {
        "en" : "Null value is used where annotated as non-null"
      },
      "local_effect" : {
        "en" : "Null value is disallowed. Other code may dereference it without a null-check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "non_null_annotation",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1319
      }
    },
    {
      "type" : "disallowed_null_value",
      "subtype" : "non_null_annotation",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Non-null annotation violation"
      },
      "description" : {
        "en" : "Null value is used where annotated as non-null"
      },
      "local_effect" : {
        "en" : "Null value is disallowed. Other code may dereference it without a null-check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "non_null_annotation",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1319
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "divide_by_zero_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Divide by zero"
      },
      "description" : {
        "en" : "Dividing by zero in Ruby might raise an error if the numerator is an integer."
      },
      "local_effect" : {
        "en" : "Potential division by zero."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 369,
        "impact" : "Low",
        "subcategory" : "divide_by_zero_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "divide_by_zero_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Divide by zero"
      },
      "description" : {
        "en" : "Dividing by zero in Ruby might raise an error if the numerator is an integer."
      },
      "local_effect" : {
        "en" : "Potential division by zero."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "divide_by_zero_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "exception",
      "code-language" : "c#",
      "name" : {
        "en" : "Division or modulo by zero"
      },
      "description" : {
        "en" : "Division or modulo by zero results in an exception."
      },
      "local_effect" : {
        "en" : "The program will raise an exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "exception",
      "code-language" : "java",
      "name" : {
        "en" : "Division or modulo by zero"
      },
      "description" : {
        "en" : "Division or modulo by zero results in an exception."
      },
      "local_effect" : {
        "en" : "The program will raise an exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "exception",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Division or modulo by zero"
      },
      "description" : {
        "en" : "Division or modulo by zero results in an exception."
      },
      "local_effect" : {
        "en" : "The program will raise an exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "exception",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Division or modulo by zero"
      },
      "description" : {
        "en" : "Division or modulo by zero results in an exception."
      },
      "local_effect" : {
        "en" : "The program will raise an exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "float_divisor_crash_or_incorrect",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Division or modulo by float zero"
      },
      "description" : {
        "en" : "An expression which may be zero is used as a divisor in floating-point arithmetic."
      },
      "local_effect" : {
        "en" : "This could cause an immediate crash or incorrect computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "float_divisor",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "float_divisor_crash_or_incorrect",
      "code-language" : "cuda",
      "name" : {
        "en" : "Division or modulo by float zero"
      },
      "description" : {
        "en" : "An expression which may be zero is used as a divisor in floating-point arithmetic."
      },
      "local_effect" : {
        "en" : "This could cause an immediate crash or incorrect computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "float_divisor",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "float_divisor_crash_or_incorrect",
      "code-language" : "go",
      "name" : {
        "en" : "Division or modulo by float zero"
      },
      "description" : {
        "en" : "An expression which may be zero is used as a divisor in floating-point arithmetic."
      },
      "local_effect" : {
        "en" : "This could cause an immediate crash or incorrect computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "float_divisor",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "float_divisor_crash_or_incorrect",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Division or modulo by float zero"
      },
      "description" : {
        "en" : "An expression which may be zero is used as a divisor in floating-point arithmetic."
      },
      "local_effect" : {
        "en" : "This could cause an immediate crash or incorrect computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "float_divisor",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "float_divisor_nan_or_inf",
      "code-language" : "c#",
      "name" : {
        "en" : "Division or modulo by float zero"
      },
      "description" : {
        "en" : "An expression which may be zero is used as a divisor in floating-point arithmetic."
      },
      "local_effect" : {
        "en" : "The expression will return either +infinity, -infinity, or NaN value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "float_divisor",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "float_divisor_nan_or_inf",
      "code-language" : "java",
      "name" : {
        "en" : "Division or modulo by float zero"
      },
      "description" : {
        "en" : "An expression which may be zero is used as a divisor in floating-point arithmetic."
      },
      "local_effect" : {
        "en" : "The expression will return either +infinity, -infinity, or NaN value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "float_divisor",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "float_divisor_nan_or_inf",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Division or modulo by float zero"
      },
      "description" : {
        "en" : "An expression which may be zero is used as a divisor in floating-point arithmetic."
      },
      "local_effect" : {
        "en" : "The expression will return either +infinity, -infinity, or NaN value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "float_divisor",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "float_divisor_nan_or_inf",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Division or modulo by float zero"
      },
      "description" : {
        "en" : "An expression which may be zero is used as a divisor in floating-point arithmetic."
      },
      "local_effect" : {
        "en" : "The expression will return either +infinity, -infinity, or NaN value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "float_divisor",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "undefined_or_crash",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Division or modulo by zero"
      },
      "description" : {
        "en" : "Division or modulo by zero results in undefined behavior."
      },
      "local_effect" : {
        "en" : "The program will have undefined behavior, likely a crash."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "undefined_or_crash",
      "code-language" : "cuda",
      "name" : {
        "en" : "Division or modulo by zero"
      },
      "description" : {
        "en" : "Division or modulo by zero results in undefined behavior."
      },
      "local_effect" : {
        "en" : "The program will have undefined behavior, likely a crash."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "undefined_or_crash",
      "code-language" : "go",
      "name" : {
        "en" : "Division or modulo by zero"
      },
      "description" : {
        "en" : "Division or modulo by zero results in undefined behavior."
      },
      "local_effect" : {
        "en" : "The program will have undefined behavior, likely a crash."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "divide_by_zero",
      "subtype" : "undefined_or_crash",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Division or modulo by zero"
      },
      "description" : {
        "en" : "Division or modulo by zero results in undefined behavior."
      },
      "local_effect" : {
        "en" : "The program will have undefined behavior, likely a crash."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "duplicate_attribute",
      "subtype" : "jsp_tag",
      "code-language" : "java",
      "name" : {
        "en" : "Duplicate JSP tag attribute"
      },
      "description" : {
        "en" : "Duplicated attributes are prohibited in JSP tags."
      },
      "local_effect" : {
        "en" : "This may lead to undefined behavior.  Tomcat 7 or later will fail when there are duplicate attributes in JSP tags."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Rule violations",
        "cweCategory" : 573,
        "impact" : "Low",
        "subcategory" : "jsp_tag",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1043
      }
    },
    {
      "type" : "dynamic_data_html_comment",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Dynamic data in HTML comment"
      },
      "description" : {
        "en" : "Dynamic data is output in HTML comments."
      },
      "local_effect" : {
        "en" : "A user can obtain potentially sensitive information leaked through HTML comments."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 615,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 118
      }
    },
    {
      "type" : "dynamic_data_html_comment",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Dynamic data in HTML comment"
      },
      "description" : {
        "en" : "Dynamic data is output in HTML comments."
      },
      "local_effect" : {
        "en" : "A user can obtain potentially sensitive information leaked through HTML comments."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 615,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 118
      }
    },
    {
      "type" : "dynamic_data_html_comment",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Dynamic data in HTML comment"
      },
      "description" : {
        "en" : "Dynamic data is output in HTML comments."
      },
      "local_effect" : {
        "en" : "A user can obtain potentially sensitive information leaked through HTML comments."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 615,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 118
      }
    },
    {
      "type" : "dynamic_object_attributes",
      "subtype" : "attr_protected_used_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Attribute restriction"
      },
      "description" : {
        "en" : "This model is using attr_protected to skip columns from mass assignment. It is recommended you disable mass assignment globally and then use attr_accessible to allow-list columns available for mass assignment."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 915,
        "impact" : "Medium",
        "subcategory" : "attr_protected_used_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 362
      }
    },
    {
      "type" : "dynamic_object_attributes",
      "subtype" : "cve_2013_0276_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Attribute restriction"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a vulnerability in the attr_protected method in ActiveRecord. The attr_protected method allows developers to specify a deny-list of model attributes which users should not be allowed to assign to. By using a specially crafted request, attackers could circumvent this protection and alter values that were meant to be protected. All users running an affected release should either upgrade or use one of the work arounds immediately. Users should also consider switching from attr_protected to the allow-list method attr_accessible which is not vulnerable to this attack."
      },
      "local_effect" : {
        "en" : "A user can change the intent of SQL queries, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "cve_2013_0276_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "dynamic_object_attributes",
      "subtype" : "dangerous_attr_accessible_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mass assignment"
      },
      "description" : {
        "en" : "Although this class is using attr_accessible to limit mass assignment, a potentially dangerous attribute is allow-listed for mass assignment."
      },
      "local_effect" : {
        "en" : "Potentially dangerous model attribute could be manipulated."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 183,
        "impact" : "High",
        "subcategory" : "dangerous_attr_accessible_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 706
      }
    },
    {
      "type" : "dynamic_object_attributes",
      "subtype" : "dangerous_attr_accessible_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mass assignment"
      },
      "description" : {
        "en" : "Although this class is using attr_accessible to limit mass assignment, a potentially dangerous attribute is allow-listed for mass assignment."
      },
      "local_effect" : {
        "en" : "Potentially dangerous model attribute could be manipulated."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 183,
        "impact" : "Low",
        "subcategory" : "dangerous_attr_accessible_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 706
      }
    },
    {
      "type" : "dynamic_object_attributes",
      "subtype" : "dangerous_attr_accessible_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mass assignment"
      },
      "description" : {
        "en" : "Although this class is using attr_accessible to limit mass assignment, a potentially dangerous attribute is allow-listed for mass assignment."
      },
      "local_effect" : {
        "en" : "Potentially dangerous model attribute could be manipulated."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 183,
        "impact" : "Medium",
        "subcategory" : "dangerous_attr_accessible_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 706
      }
    },
    {
      "type" : "dynamic_object_attributes",
      "subtype" : "dangerous_permit_key_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mass assignment"
      },
      "description" : {
        "en" : "When allow-listing query parameter keys with permit, care should be taken to avoid including sensitive keys. Dangerous keys should either not be allowed or require additional authorization checks."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 183,
        "impact" : "High",
        "subcategory" : "dangerous_permit_key_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 706
      }
    },
    {
      "type" : "dynamic_object_attributes",
      "subtype" : "dangerous_permit_key_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mass assignment"
      },
      "description" : {
        "en" : "When allow-listing query parameter keys with permit, care should be taken to avoid including sensitive keys. Dangerous keys should either not be allowed or require additional authorization checks."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 183,
        "impact" : "Medium",
        "subcategory" : "dangerous_permit_key_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 706
      }
    },
    {
      "type" : "dynamic_object_attributes",
      "subtype" : "mass_assign_call_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mass assignment"
      },
      "description" : {
        "en" : "The method used to initialize the database entry allows assignment to arbitrary columns. Column names and values are determined by the keys and values in the hash table argument."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 915,
        "impact" : "High",
        "subcategory" : "mass_assign_call_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 362
      }
    },
    {
      "type" : "dynamic_object_attributes",
      "subtype" : "mass_assign_call_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mass assignment"
      },
      "description" : {
        "en" : "The method used to initialize the database entry allows assignment to arbitrary columns. Column names and values are determined by the keys and values in the hash table argument."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 915,
        "impact" : "Low",
        "subcategory" : "mass_assign_call_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 362
      }
    },
    {
      "type" : "dynamic_object_attributes",
      "subtype" : "mass_assign_call_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mass assignment"
      },
      "description" : {
        "en" : "The method used to initialize the database entry allows assignment to arbitrary columns. Column names and values are determined by the keys and values in the hash table argument."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 915,
        "impact" : "Medium",
        "subcategory" : "mass_assign_call_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 362
      }
    },
    {
      "type" : "dynamic_object_attributes",
      "subtype" : "mass_assign_permit_all_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mass assignment"
      },
      "description" : {
        "en" : "Calling permit! on query parameters bypasses all mass assignment protections and should be avoided in favor of allow-listing expected values."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 915,
        "impact" : "High",
        "subcategory" : "mass_assign_permit_all_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 362
      }
    },
    {
      "type" : "dynamic_object_attributes",
      "subtype" : "mass_assign_permit_all_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mass assignment"
      },
      "description" : {
        "en" : "Calling permit! on query parameters bypasses all mass assignment protections and should be avoided in favor of allow-listing expected values."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 915,
        "impact" : "Medium",
        "subcategory" : "mass_assign_permit_all_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 362
      }
    },
    {
      "type" : "dynamic_object_attributes",
      "subtype" : "mass_assign_without_protection_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mass assignment"
      },
      "description" : {
        "en" : "The use of the without_protection option bypasses mass assignment protection entirely. If a query parameter is used to directly initialize or update the table, an attacker can assign values to arbitrary columns."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 915,
        "impact" : "High",
        "subcategory" : "mass_assign_without_protection_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 362
      }
    },
    {
      "type" : "dynamic_object_attributes",
      "subtype" : "mass_assign_without_protection_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mass assignment"
      },
      "description" : {
        "en" : "The use of the without_protection option bypasses mass assignment protection entirely. If a query parameter is used to directly initialize or update the table, an attacker can assign values to arbitrary columns."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 915,
        "impact" : "Medium",
        "subcategory" : "mass_assign_without_protection_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 362
      }
    },
    {
      "type" : "dynamic_object_attributes",
      "subtype" : "no_attr_accessible_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Attribute restriction"
      },
      "description" : {
        "en" : "This model might be vulnerable to mass assignment during creation or updates since mass assignment is not restricted using attr_accessible. Mass assignment allows setting column values in bulk, often via query parameters. It is recommended you disable mass assignment globally and then use attr_accessible to allow-list columns available for mass assignment."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 915,
        "impact" : "High",
        "subcategory" : "no_attr_accessible_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 362
      }
    },
    {
      "type" : "el_injection",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Expression language injection"
      },
      "description" : {
        "en" : "A user-controllable string is evaluated by an expression language resolver."
      },
      "local_effect" : {
        "en" : "An attacker can force the evaluation of EL statements to execute arbitrary code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 917,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 269
      }
    },
    {
      "type" : "enabled_trace_mode",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Trace mode enabled"
      },
      "description" : {
        "en" : "ASP.NET trace mode is enabled."
      },
      "local_effect" : {
        "en" : "Trace information will be displayed whenever the page is rendered which may expose sensitive server variables or configuration."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 489,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 81
      }
    },
    {
      "type" : "evaluation_order",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Evaluation order violation"
      },
      "description" : {
        "en" : "Statement contains multiple side-effects on the same value with an undefined evaluation order"
      },
      "local_effect" : {
        "en" : "With different compiler flags or different compilers or platforms, this code may behave differently."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 758,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1166
      }
    },
    {
      "type" : "evaluation_order",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Evaluation order violation"
      },
      "description" : {
        "en" : "Statement contains multiple side-effects on the same value with an undefined evaluation order"
      },
      "local_effect" : {
        "en" : "With different compiler flags or different compilers or platforms, this code may behave differently."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 758,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1166
      }
    },
    {
      "type" : "evaluation_order",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Evaluation order violation"
      },
      "description" : {
        "en" : "Statement contains multiple side-effects on the same value with an undefined evaluation order"
      },
      "local_effect" : {
        "en" : "With different compiler flags or different compilers or platforms, this code may behave differently."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 758,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1166
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "apex",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "ruby",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "scala",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "swift",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "text",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "exception_created_but_not_thrown",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Exception not thrown"
      },
      "description" : {
        "en" : "An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception."
      },
      "local_effect" : {
        "en" : "The code after the exception creation will execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 390,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 885
      }
    },
    {
      "type" : "format_string_injection",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Format string vulnerability"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source used to construct a format string"
      },
      "local_effect" : {
        "en" : "An attacker could craft a format string containing unexpected formatting directives and force a buffer overflow, which may be used to take control of the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 134,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 659
      }
    },
    {
      "type" : "format_string_injection",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Format string vulnerability"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source used to construct a format string"
      },
      "local_effect" : {
        "en" : "An attacker could craft a format string containing unexpected formatting directives and force a buffer overflow, which may be used to take control of the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 134,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 659
      }
    },
    {
      "type" : "format_string_injection",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Format string vulnerability"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source used to construct a format string"
      },
      "local_effect" : {
        "en" : "An attacker could craft a format string containing unexpected formatting directives and force a buffer overflow, which may be used to take control of the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 134,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 659
      }
    },
    {
      "type" : "format_string_injection",
      "subtype" : "paranoid",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Format string warning"
      },
      "description" : {
        "en" : "A non-constant string used to construct a format string"
      },
      "local_effect" : {
        "en" : "A non-constant format string can potentially be exploited by a user to take control of the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 134,
        "impact" : "Low",
        "subcategory" : "paranoid",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 659
      }
    },
    {
      "type" : "format_string_injection",
      "subtype" : "paranoid",
      "code-language" : "cuda",
      "name" : {
        "en" : "Format string warning"
      },
      "description" : {
        "en" : "A non-constant string used to construct a format string"
      },
      "local_effect" : {
        "en" : "A non-constant format string can potentially be exploited by a user to take control of the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 134,
        "impact" : "Low",
        "subcategory" : "paranoid",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 659
      }
    },
    {
      "type" : "format_string_injection",
      "subtype" : "paranoid",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Format string warning"
      },
      "description" : {
        "en" : "A non-constant string used to construct a format string"
      },
      "local_effect" : {
        "en" : "A non-constant format string can potentially be exploited by a user to take control of the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 134,
        "impact" : "Low",
        "subcategory" : "paranoid",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 659
      }
    },
    {
      "type" : "global_init_order",
      "subtype" : "ctor_dtor_global_ordering",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Initialization or destruction ordering is unspecified"
      },
      "description" : {
        "en" : "A global resource might be used before it has been initialized, or after it has been destroyed."
      },
      "local_effect" : {
        "en" : "Uninitialized or inconsistent data might be used."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact quality",
        "cweCategory" : 908,
        "impact" : "High",
        "subcategory" : "ctor_dtor_global_ordering",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1241
      }
    },
    {
      "type" : "global_init_order",
      "subtype" : "ctor_dtor_global_ordering",
      "code-language" : "cuda",
      "name" : {
        "en" : "Initialization or destruction ordering is unspecified"
      },
      "description" : {
        "en" : "A global resource might be used before it has been initialized, or after it has been destroyed."
      },
      "local_effect" : {
        "en" : "Uninitialized or inconsistent data might be used."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact quality",
        "cweCategory" : 908,
        "impact" : "High",
        "subcategory" : "ctor_dtor_global_ordering",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1241
      }
    },
    {
      "type" : "global_init_order",
      "subtype" : "ctor_dtor_global_ordering",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Initialization or destruction ordering is unspecified"
      },
      "description" : {
        "en" : "A global resource might be used before it has been initialized, or after it has been destroyed."
      },
      "local_effect" : {
        "en" : "Uninitialized or inconsistent data might be used."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact quality",
        "cweCategory" : 908,
        "impact" : "High",
        "subcategory" : "ctor_dtor_global_ordering",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1241
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Use of hard-coded credentials"
      },
      "description" : {
        "en" : "Credentials are stored directly in the source code"
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use these credentials to access production services or data.  Changing these credentials requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Use of hard-coded credentials"
      },
      "description" : {
        "en" : "Credentials are stored directly in the source code"
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use these credentials to access production services or data.  Changing these credentials requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Use of hard-coded credentials"
      },
      "description" : {
        "en" : "Credentials are stored directly in the source code"
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use these credentials to access production services or data.  Changing these credentials requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "Use of hard-coded credentials"
      },
      "description" : {
        "en" : "Credentials are stored directly in the source code"
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use these credentials to access production services or data.  Changing these credentials requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Use of hard-coded credentials"
      },
      "description" : {
        "en" : "Credentials are stored directly in the source code"
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use these credentials to access production services or data.  Changing these credentials requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Use of hard-coded credentials"
      },
      "description" : {
        "en" : "Credentials are stored directly in the source code"
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use these credentials to access production services or data.  Changing these credentials requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Use of hard-coded credentials"
      },
      "description" : {
        "en" : "Credentials are stored directly in the source code"
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use these credentials to access production services or data.  Changing these credentials requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Use of hard-coded credentials"
      },
      "description" : {
        "en" : "Credentials are stored directly in the source code"
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use these credentials to access production services or data.  Changing these credentials requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Use of hard-coded credentials"
      },
      "description" : {
        "en" : "Credentials are stored directly in the source code"
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use these credentials to access production services or data.  Changing these credentials requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Use of hard-coded credentials"
      },
      "description" : {
        "en" : "Credentials are stored directly in the source code"
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use these credentials to access production services or data.  Changing these credentials requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Use of hard-coded credentials"
      },
      "description" : {
        "en" : "Credentials are stored directly in the source code"
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use these credentials to access production services or data.  Changing these credentials requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Use of hard-coded credentials"
      },
      "description" : {
        "en" : "Credentials are stored directly in the source code"
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use these credentials to access production services or data.  Changing these credentials requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "config_connection_str_passwd",
      "code-language" : "c#",
      "name" : {
        "en" : "Unencrypted connection string password"
      },
      "description" : {
        "en" : "A configuration file connection string includes a plaintext password."
      },
      "local_effect" : {
        "en" : "Unencrypted passwords in configuration files leak credentials to anyone with access to the file. These are often targeted by attackers."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 13,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 622
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "cryptographic_key",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Use of hard-coded cryptographic key"
      },
      "description" : {
        "en" : "A cryptographic key is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this key to access encrypted production data.  Changing this key requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 321,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_crypto",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 829
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "cryptographic_key",
      "code-language" : "c#",
      "name" : {
        "en" : "Use of hard-coded cryptographic key"
      },
      "description" : {
        "en" : "A cryptographic key is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this key to access encrypted production data.  Changing this key requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 321,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_crypto",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 829
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "cryptographic_key",
      "code-language" : "cuda",
      "name" : {
        "en" : "Use of hard-coded cryptographic key"
      },
      "description" : {
        "en" : "A cryptographic key is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this key to access encrypted production data.  Changing this key requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 321,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_crypto",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 829
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "cryptographic_key",
      "code-language" : "go",
      "name" : {
        "en" : "Use of hard-coded cryptographic key"
      },
      "description" : {
        "en" : "A cryptographic key is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this key to access encrypted production data.  Changing this key requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 321,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_crypto",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 829
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "cryptographic_key",
      "code-language" : "java",
      "name" : {
        "en" : "Use of hard-coded cryptographic key"
      },
      "description" : {
        "en" : "A cryptographic key is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this key to access encrypted production data.  Changing this key requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 321,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_crypto",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 829
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "cryptographic_key",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Use of hard-coded cryptographic key"
      },
      "description" : {
        "en" : "A cryptographic key is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this key to access encrypted production data.  Changing this key requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 321,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_crypto",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 829
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "cryptographic_key",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Use of hard-coded cryptographic key"
      },
      "description" : {
        "en" : "A cryptographic key is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this key to access encrypted production data.  Changing this key requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 321,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_crypto",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 829
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "cryptographic_key",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Use of hard-coded cryptographic key"
      },
      "description" : {
        "en" : "A cryptographic key is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this key to access encrypted production data.  Changing this key requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 321,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_crypto",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 829
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "password",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Use of hard-coded password"
      },
      "description" : {
        "en" : "A password is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this password to access production services or data.  Changing this password requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 259,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_passwd",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 773
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "password",
      "code-language" : "c#",
      "name" : {
        "en" : "Use of hard-coded password"
      },
      "description" : {
        "en" : "A password is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this password to access production services or data.  Changing this password requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 259,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_passwd",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 773
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "password",
      "code-language" : "cuda",
      "name" : {
        "en" : "Use of hard-coded password"
      },
      "description" : {
        "en" : "A password is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this password to access production services or data.  Changing this password requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 259,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_passwd",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 773
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "password",
      "code-language" : "go",
      "name" : {
        "en" : "Use of hard-coded password"
      },
      "description" : {
        "en" : "A password is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this password to access production services or data.  Changing this password requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 259,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_passwd",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 773
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "password",
      "code-language" : "java",
      "name" : {
        "en" : "Use of hard-coded password"
      },
      "description" : {
        "en" : "A password is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this password to access production services or data.  Changing this password requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 259,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_passwd",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 773
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "password",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Use of hard-coded password"
      },
      "description" : {
        "en" : "A password is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this password to access production services or data.  Changing this password requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 259,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_passwd",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 773
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "password",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Use of hard-coded password"
      },
      "description" : {
        "en" : "A password is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this password to access production services or data.  Changing this password requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 259,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_passwd",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 773
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "password",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Use of hard-coded password"
      },
      "description" : {
        "en" : "A password is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this password to access production services or data.  Changing this password requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 259,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_passwd",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 773
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "password_in_connection_string",
      "code-language" : "c#",
      "name" : {
        "en" : "Use of hard-coded connection string password"
      },
      "description" : {
        "en" : "A connection string password is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this password to access production services or data.  Changing this password requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 259,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_connection_string",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 773
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "password_in_connection_string",
      "code-language" : "go",
      "name" : {
        "en" : "Use of hard-coded connection string password"
      },
      "description" : {
        "en" : "A connection string password is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this password to access production services or data.  Changing this password requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 259,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_connection_string",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 773
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "password_in_connection_string",
      "code-language" : "java",
      "name" : {
        "en" : "Use of hard-coded connection string password"
      },
      "description" : {
        "en" : "A connection string password is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this password to access production services or data.  Changing this password requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 259,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_connection_string",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 773
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "password_in_connection_string",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Use of hard-coded connection string password"
      },
      "description" : {
        "en" : "A connection string password is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this password to access production services or data.  Changing this password requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 259,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_connection_string",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 773
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "password_in_connection_string",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Use of hard-coded connection string password"
      },
      "description" : {
        "en" : "A connection string password is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this password to access production services or data.  Changing this password requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 259,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_connection_string",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 773
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "secret_in_source_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Authentication"
      },
      "description" : {
        "en" : "A potential hardcoded secret has been detected in the source code."
      },
      "local_effect" : {
        "en" : "Hardcoded credentials may be accessible to unauthorized users and difficult to quickly change."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 259,
        "impact" : "Medium",
        "subcategory" : "secret_in_source_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 773
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "security_token",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Use of hard-coded security token"
      },
      "description" : {
        "en" : "A security token is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this security token to access production services or data.  Changing this token requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_token",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "security_token",
      "code-language" : "c#",
      "name" : {
        "en" : "Use of hard-coded security token"
      },
      "description" : {
        "en" : "A security token is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this security token to access production services or data.  Changing this token requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_token",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "security_token",
      "code-language" : "cuda",
      "name" : {
        "en" : "Use of hard-coded security token"
      },
      "description" : {
        "en" : "A security token is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this security token to access production services or data.  Changing this token requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_token",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "security_token",
      "code-language" : "go",
      "name" : {
        "en" : "Use of hard-coded security token"
      },
      "description" : {
        "en" : "A security token is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this security token to access production services or data.  Changing this token requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_token",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "security_token",
      "code-language" : "java",
      "name" : {
        "en" : "Use of hard-coded security token"
      },
      "description" : {
        "en" : "A security token is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this security token to access production services or data.  Changing this token requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_token",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "security_token",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Use of hard-coded security token"
      },
      "description" : {
        "en" : "A security token is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this security token to access production services or data.  Changing this token requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_token",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "security_token",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Use of hard-coded security token"
      },
      "description" : {
        "en" : "A security token is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this security token to access production services or data.  Changing this token requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_token",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hardcoded_credentials",
      "subtype" : "security_token",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Use of hard-coded security token"
      },
      "description" : {
        "en" : "A security token is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this security token to access production services or data.  Changing this token requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 798,
        "impact" : "Medium",
        "subcategory" : "hardcoded_credential_token",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "hibernate_bad_hashcode",
      "subtype" : "none_subcategory",
      "code-language" : "java",
      "name" : {
        "en" : "Unsafe dependence on database key"
      },
      "description" : {
        "en" : "The result of hashCode() depends on an entity's primary database key"
      },
      "local_effect" : {
        "en" : "Collections and other objects which depend on hashCode() may not behave as expected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1320
      }
    },
    {
      "type" : "hibernate_bad_hashcode",
      "subtype" : "none_subcategory",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unsafe dependence on database key"
      },
      "description" : {
        "en" : "The result of hashCode() depends on an entity's primary database key"
      },
      "local_effect" : {
        "en" : "Collections and other objects which depend on hashCode() may not behave as expected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1320
      }
    },
    {
      "type" : "hibernate_equals_depends_on_primary_key",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Unsafe dependence on database key"
      },
      "description" : {
        "en" : "The result of equals() depends on an entity's primary database key"
      },
      "local_effect" : {
        "en" : "Collections and other objects which depend on equals() may not behave as expected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 1023,
        "impact" : "Medium",
        "subcategory" : "bad_equals",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 422
      }
    },
    {
      "type" : "hibernate_equals_depends_on_primary_key",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unsafe dependence on database key"
      },
      "description" : {
        "en" : "The result of equals() depends on an entity's primary database key"
      },
      "local_effect" : {
        "en" : "Collections and other objects which depend on equals() may not behave as expected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 1023,
        "impact" : "Medium",
        "subcategory" : "bad_equals",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 422
      }
    },
    {
      "type" : "hibernate_equals_depends_on_primary_key",
      "subtype" : "used",
      "code-language" : "java",
      "name" : {
        "en" : "Unsafe dependence on database key"
      },
      "description" : {
        "en" : "The result of equals() depends on an entity's primary database key"
      },
      "local_effect" : {
        "en" : "Collections and other objects which depend on equals() may not behave as expected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 1023,
        "impact" : "Medium",
        "subcategory" : "bad_equals_used",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "hibernate_equals_depends_on_primary_key",
      "subtype" : "used",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unsafe dependence on database key"
      },
      "description" : {
        "en" : "The result of equals() depends on an entity's primary database key"
      },
      "local_effect" : {
        "en" : "Collections and other objects which depend on equals() may not behave as expected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 1023,
        "impact" : "Medium",
        "subcategory" : "bad_equals_used",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 422
      }
    },
    {
      "type" : "hibernate_hashcode_depends_on_primary_key",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Unsafe dependence on database key"
      },
      "description" : {
        "en" : "The result of hashCode() depends on an entity's primary database key"
      },
      "local_effect" : {
        "en" : "Collections and other objects which depend on hashCode() may not behave as expected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "bad_hashcode",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1320
      }
    },
    {
      "type" : "hibernate_hashcode_depends_on_primary_key",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unsafe dependence on database key"
      },
      "description" : {
        "en" : "The result of hashCode() depends on an entity's primary database key"
      },
      "local_effect" : {
        "en" : "Collections and other objects which depend on hashCode() may not behave as expected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "bad_hashcode",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1320
      }
    },
    {
      "type" : "hibernate_hashcode_depends_on_primary_key",
      "subtype" : "used",
      "code-language" : "java",
      "name" : {
        "en" : "Unsafe dependence on database key"
      },
      "description" : {
        "en" : "The result of hashCode() depends on an entity's primary database key"
      },
      "local_effect" : {
        "en" : "Collections and other objects which depend on hashCode() may not behave as expected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "bad_hashcode_used",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "hibernate_hashcode_depends_on_primary_key",
      "subtype" : "used",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unsafe dependence on database key"
      },
      "description" : {
        "en" : "The result of hashCode() depends on an entity's primary database key"
      },
      "local_effect" : {
        "en" : "Collections and other objects which depend on hashCode() may not behave as expected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "bad_hashcode_used",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "http_header_injection",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "HTTP header injection"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct an HTTP header name."
      },
      "local_effect" : {
        "en" : "An attacker may be able to set important HTTP headers and disable security protections or fix the session ID. The severity of the defect depends on which headers can be manipulated and if the attacker is able to directly or indirectly control the header value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 644,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1101
      }
    },
    {
      "type" : "http_header_injection",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "HTTP header injection"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct an HTTP header name."
      },
      "local_effect" : {
        "en" : "An attacker may be able to set important HTTP headers and disable security protections or fix the session ID. The severity of the defect depends on which headers can be manipulated and if the attacker is able to directly or indirectly control the header value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 644,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1101
      }
    },
    {
      "type" : "http_header_injection",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "HTTP header injection"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct an HTTP header name."
      },
      "local_effect" : {
        "en" : "An attacker may be able to set important HTTP headers and disable security protections or fix the session ID. The severity of the defect depends on which headers can be manipulated and if the attacker is able to directly or indirectly control the header value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 644,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1101
      }
    },
    {
      "type" : "http_header_injection",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "HTTP header injection"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct an HTTP header name."
      },
      "local_effect" : {
        "en" : "An attacker may be able to set important HTTP headers and disable security protections or fix the session ID. The severity of the defect depends on which headers can be manipulated and if the attacker is able to directly or indirectly control the header value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 644,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1101
      }
    },
    {
      "type" : "http_header_injection",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "HTTP header injection"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct an HTTP header name."
      },
      "local_effect" : {
        "en" : "An attacker may be able to set important HTTP headers and disable security protections or fix the session ID. The severity of the defect depends on which headers can be manipulated and if the attacker is able to directly or indirectly control the header value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 644,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1101
      }
    },
    {
      "type" : "http_header_injection",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "HTTP header injection"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct an HTTP header name."
      },
      "local_effect" : {
        "en" : "An attacker may be able to set important HTTP headers and disable security protections or fix the session ID. The severity of the defect depends on which headers can be manipulated and if the attacker is able to directly or indirectly control the header value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 644,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1101
      }
    },
    {
      "type" : "http_response_header_injection",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "HTTP header injection"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct an HTTP header name."
      },
      "local_effect" : {
        "en" : "An attacker may be able to set important HTTP headers and disable security protections or fix the session ID. The severity of the defect depends on which headers can be manipulated and if the attacker is able to directly or indirectly control the header value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 610,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1078
      }
    },
    {
      "type" : "http_response_header_injection",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "HTTP header injection"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct an HTTP header name."
      },
      "local_effect" : {
        "en" : "An attacker may be able to set important HTTP headers and disable security protections or fix the session ID. The severity of the defect depends on which headers can be manipulated and if the attacker is able to directly or indirectly control the header value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 610,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1078
      }
    },
    {
      "type" : "http_response_header_injection",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "HTTP header injection"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct an HTTP header name."
      },
      "local_effect" : {
        "en" : "An attacker may be able to set important HTTP headers and disable security protections or fix the session ID. The severity of the defect depends on which headers can be manipulated and if the attacker is able to directly or indirectly control the header value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 610,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1078
      }
    },
    {
      "type" : "http_response_header_injection",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "HTTP header injection"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct an HTTP header name."
      },
      "local_effect" : {
        "en" : "An attacker may be able to set important HTTP headers and disable security protections or fix the session ID. The severity of the defect depends on which headers can be manipulated and if the attacker is able to directly or indirectly control the header value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 644,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1078
      }
    },
    {
      "type" : "http_response_header_injection",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "HTTP header injection"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct an HTTP header name."
      },
      "local_effect" : {
        "en" : "An attacker may be able to set important HTTP headers and disable security protections or fix the session ID. The severity of the defect depends on which headers can be manipulated and if the attacker is able to directly or indirectly control the header value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 644,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1078
      }
    },
    {
      "type" : "http_response_header_injection",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "HTTP header injection"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct an HTTP header name."
      },
      "local_effect" : {
        "en" : "An attacker may be able to set important HTTP headers and disable security protections or fix the session ID. The severity of the defect depends on which headers can be manipulated and if the attacker is able to directly or indirectly control the header value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 610,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1078
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "case",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Identical code for different cases"
      },
      "description" : {
        "en" : "The same code is executed for two cases in the same switch statement"
      },
      "local_effect" : {
        "en" : "The case is redundant or can be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "case",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "case",
      "code-language" : "c#",
      "name" : {
        "en" : "Identical code for different cases"
      },
      "description" : {
        "en" : "The same code is executed for two cases in the same switch statement"
      },
      "local_effect" : {
        "en" : "The case is redundant or can be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "case",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "case",
      "code-language" : "cuda",
      "name" : {
        "en" : "Identical code for different cases"
      },
      "description" : {
        "en" : "The same code is executed for two cases in the same switch statement"
      },
      "local_effect" : {
        "en" : "The case is redundant or can be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "case",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "case",
      "code-language" : "go",
      "name" : {
        "en" : "Identical code for different cases"
      },
      "description" : {
        "en" : "The same code is executed for two cases in the same switch statement"
      },
      "local_effect" : {
        "en" : "The case is redundant or can be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "case",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "case",
      "code-language" : "java",
      "name" : {
        "en" : "Identical code for different cases"
      },
      "description" : {
        "en" : "The same code is executed for two cases in the same switch statement"
      },
      "local_effect" : {
        "en" : "The case is redundant or can be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "case",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "case",
      "code-language" : "javascript",
      "name" : {
        "en" : "Identical code for different cases"
      },
      "description" : {
        "en" : "The same code is executed for two cases in the same switch statement"
      },
      "local_effect" : {
        "en" : "The case is redundant or can be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "case",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "case",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Identical code for different cases"
      },
      "description" : {
        "en" : "The same code is executed for two cases in the same switch statement"
      },
      "local_effect" : {
        "en" : "The case is redundant or can be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "case",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "case",
      "code-language" : "php",
      "name" : {
        "en" : "Identical code for different cases"
      },
      "description" : {
        "en" : "The same code is executed for two cases in the same switch statement"
      },
      "local_effect" : {
        "en" : "The case is redundant or can be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "case",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "case",
      "code-language" : "scala",
      "name" : {
        "en" : "Identical code for different cases"
      },
      "description" : {
        "en" : "The same code is executed for two cases in the same match expression"
      },
      "local_effect" : {
        "en" : "The case is redundant or can be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "case",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "case",
      "code-language" : "typescript",
      "name" : {
        "en" : "Identical code for different cases"
      },
      "description" : {
        "en" : "The same code is executed for two cases in the same switch statement"
      },
      "local_effect" : {
        "en" : "The case is redundant or can be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "case",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "case",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Identical code for different cases"
      },
      "description" : {
        "en" : "The same code is executed for two cases in the same switch statement"
      },
      "local_effect" : {
        "en" : "The case is redundant or can be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "case",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "else_if_chain",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Identical code for different branches of an else-if chain"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The conditions could be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "chain",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "else_if_chain",
      "code-language" : "c#",
      "name" : {
        "en" : "Identical code for different branches of an else-if chain"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The conditions could be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "chain",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "else_if_chain",
      "code-language" : "cuda",
      "name" : {
        "en" : "Identical code for different branches of an else-if chain"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The conditions could be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "chain",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "else_if_chain",
      "code-language" : "go",
      "name" : {
        "en" : "Identical code for different branches of an else-if chain"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The conditions could be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "chain",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "else_if_chain",
      "code-language" : "java",
      "name" : {
        "en" : "Identical code for different branches of an else-if chain"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The conditions could be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "chain",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "else_if_chain",
      "code-language" : "javascript",
      "name" : {
        "en" : "Identical code for different branches of an else-if chain"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The conditions could be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "chain",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "else_if_chain",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Identical code for different branches of an else-if chain"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The conditions could be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "chain",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "else_if_chain",
      "code-language" : "php",
      "name" : {
        "en" : "Identical code for different branches of an else-if chain"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The conditions could be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "chain",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "else_if_chain",
      "code-language" : "python",
      "name" : {
        "en" : "Identical code for different branches of an else-if chain"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The conditions could be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "chain",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "else_if_chain",
      "code-language" : "ruby",
      "name" : {
        "en" : "Identical code for different branches of an else-if chain"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The conditions could be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "chain",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "else_if_chain",
      "code-language" : "scala",
      "name" : {
        "en" : "Identical code for different branches of an else-if chain"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The conditions could be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "chain",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "else_if_chain",
      "code-language" : "typescript",
      "name" : {
        "en" : "Identical code for different branches of an else-if chain"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The conditions could be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "chain",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "else_if_chain",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Identical code for different branches of an else-if chain"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The conditions could be combined"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "chain",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "if",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "if",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "if",
      "code-language" : "c#",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "if",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "if",
      "code-language" : "cuda",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "if",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "if",
      "code-language" : "go",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "if",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "if",
      "code-language" : "java",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "if",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "if",
      "code-language" : "javascript",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "if",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "if",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "if",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "if",
      "code-language" : "php",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "if",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "if",
      "code-language" : "python",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "if",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "if",
      "code-language" : "ruby",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "if",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "if",
      "code-language" : "scala",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "if",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "if",
      "code-language" : "typescript",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "if",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "if",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "if",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "ternary",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "ternary",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "ternary",
      "code-language" : "c#",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "ternary",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "ternary",
      "code-language" : "cuda",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "ternary",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "ternary",
      "code-language" : "go",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "ternary",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "ternary",
      "code-language" : "java",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "ternary",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "ternary",
      "code-language" : "javascript",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "ternary",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "ternary",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "ternary",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "ternary",
      "code-language" : "php",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "ternary",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "ternary",
      "code-language" : "python",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "ternary",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "ternary",
      "code-language" : "ruby",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "ternary",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "ternary",
      "code-language" : "scala",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "ternary",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "ternary",
      "code-language" : "typescript",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "ternary",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identical_branches",
      "subtype" : "ternary",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Identical code for different branches"
      },
      "description" : {
        "en" : "The same code is executed regardless of the condition"
      },
      "local_effect" : {
        "en" : "The condition is redundant"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "ternary",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1321
      }
    },
    {
      "type" : "identifier_typo",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Typo in identifier"
      },
      "description" : {
        "en" : "This code uniquely references a named entity that is suspiciously close in spelling to another, more commonly referenced entity."
      },
      "local_effect" : {
        "en" : "The wrong entity will be referenced, usually resulting in a useless write or a read of an unset value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 688,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1295
      }
    },
    {
      "type" : "identifier_typo",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Typo in identifier"
      },
      "description" : {
        "en" : "This code uniquely references a named entity that is suspiciously close in spelling to another, more commonly referenced entity."
      },
      "local_effect" : {
        "en" : "The wrong entity will be referenced, usually resulting in a useless write or a read of an unset value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 688,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1295
      }
    },
    {
      "type" : "identifier_typo",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Typo in identifier"
      },
      "description" : {
        "en" : "This code uniquely references a named entity that is suspiciously close in spelling to another, more commonly referenced entity."
      },
      "local_effect" : {
        "en" : "The wrong entity will be referenced, usually resulting in a useless write or a read of an unset value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 688,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1295
      }
    },
    {
      "type" : "identifier_typo",
      "subtype" : null,
      "code-language" : "ruby",
      "name" : {
        "en" : "Typo in identifier"
      },
      "description" : {
        "en" : "This code uniquely references a named entity that is suspiciously close in spelling to another, more commonly referenced entity."
      },
      "local_effect" : {
        "en" : "The wrong entity will be referenced, usually resulting in a useless write or a read of an unset value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 688,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1295
      }
    },
    {
      "type" : "identifier_typo",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Typo in identifier"
      },
      "description" : {
        "en" : "This code uniquely references a named entity that is suspiciously close in spelling to another, more commonly referenced entity."
      },
      "local_effect" : {
        "en" : "The wrong entity will be referenced, usually resulting in a useless write or a read of an unset value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 688,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1295
      }
    },
    {
      "type" : "improper_null_termination",
      "subtype" : "buffer_size",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Buffer not null terminated"
      },
      "description" : {
        "en" : "The string buffer may not have a null terminator if the source string's length is equal to the buffer size"
      },
      "local_effect" : {
        "en" : "If the buffer is treated as a null terminated string in later operations, a buffer overflow or over-read may occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 170,
        "impact" : "High",
        "subcategory" : "no_null_terminator",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 694
      }
    },
    {
      "type" : "improper_null_termination",
      "subtype" : "buffer_size",
      "code-language" : "cuda",
      "name" : {
        "en" : "Buffer not null terminated"
      },
      "description" : {
        "en" : "The string buffer may not have a null terminator if the source string's length is equal to the buffer size"
      },
      "local_effect" : {
        "en" : "If the buffer is treated as a null terminated string in later operations, a buffer overflow or over-read may occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 170,
        "impact" : "High",
        "subcategory" : "no_null_terminator",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 694
      }
    },
    {
      "type" : "improper_null_termination",
      "subtype" : "buffer_size",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Buffer not null terminated"
      },
      "description" : {
        "en" : "The string buffer may not have a null terminator if the source string's length is equal to the buffer size"
      },
      "local_effect" : {
        "en" : "If the buffer is treated as a null terminated string in later operations, a buffer overflow or over-read may occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 170,
        "impact" : "High",
        "subcategory" : "no_null_terminator",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 694
      }
    },
    {
      "type" : "improper_null_termination",
      "subtype" : "buffer_size_warning",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Buffer not null terminated"
      },
      "description" : {
        "en" : "The string buffer may not have a null terminator if the source string's length is equal to the buffer size"
      },
      "local_effect" : {
        "en" : "If the buffer is treated as a null terminated string in later operations, a buffer overflow or over-read may occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 170,
        "impact" : "High",
        "subcategory" : "no_null_terminator_warn",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 694
      }
    },
    {
      "type" : "improper_null_termination",
      "subtype" : "buffer_size_warning",
      "code-language" : "cuda",
      "name" : {
        "en" : "Buffer not null terminated"
      },
      "description" : {
        "en" : "The string buffer may not have a null terminator if the source string's length is equal to the buffer size"
      },
      "local_effect" : {
        "en" : "If the buffer is treated as a null terminated string in later operations, a buffer overflow or over-read may occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 170,
        "impact" : "High",
        "subcategory" : "no_null_terminator_warn",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 694
      }
    },
    {
      "type" : "improper_null_termination",
      "subtype" : "buffer_size_warning",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Buffer not null terminated"
      },
      "description" : {
        "en" : "The string buffer may not have a null terminator if the source string's length is equal to the buffer size"
      },
      "local_effect" : {
        "en" : "If the buffer is treated as a null terminated string in later operations, a buffer overflow or over-read may occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 170,
        "impact" : "High",
        "subcategory" : "no_null_terminator_warn",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 694
      }
    },
    {
      "type" : "improper_null_termination",
      "subtype" : "readlink",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Readlink used insecurely"
      },
      "description" : {
        "en" : "The readlink system call may return a value equal to the buffer size, which causes an access one past the end"
      },
      "local_effect" : {
        "en" : "The buffer will be written past the end looking for a null terminator, causing a buffer overrun."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 170,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 694
      }
    },
    {
      "type" : "improper_null_termination",
      "subtype" : "readlink",
      "code-language" : "cuda",
      "name" : {
        "en" : "Readlink used insecurely"
      },
      "description" : {
        "en" : "The readlink system call may return a value equal to the buffer size, which causes an access one past the end"
      },
      "local_effect" : {
        "en" : "The buffer will be written past the end looking for a null terminator, causing a buffer overrun."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 170,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 694
      }
    },
    {
      "type" : "improper_null_termination",
      "subtype" : "readlink",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Readlink used insecurely"
      },
      "description" : {
        "en" : "The readlink system call may return a value equal to the buffer size, which causes an access one past the end"
      },
      "local_effect" : {
        "en" : "The buffer will be written past the end looking for a null terminator, causing a buffer overrun."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 170,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 694
      }
    },
    {
      "type" : "improper_null_termination",
      "subtype" : "string_copy_output_null",
      "code-language" : "c/c++",
      "name" : {
        "en" : "String not null terminated"
      },
      "description" : {
        "en" : "The string copy operation does not not null terminate the output buffer, which may be expected to be a null terminated string."
      },
      "local_effect" : {
        "en" : "A later use of the buffer may iterate past the end looking for a null terminator."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 170,
        "impact" : "High",
        "subcategory" : "string_copy_output_null",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 694
      }
    },
    {
      "type" : "improper_null_termination",
      "subtype" : "string_copy_output_null",
      "code-language" : "cuda",
      "name" : {
        "en" : "String not null terminated"
      },
      "description" : {
        "en" : "The string copy operation does not not null terminate the output buffer, which may be expected to be a null terminated string."
      },
      "local_effect" : {
        "en" : "A later use of the buffer may iterate past the end looking for a null terminator."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 170,
        "impact" : "High",
        "subcategory" : "string_copy_output_null",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 694
      }
    },
    {
      "type" : "improper_null_termination",
      "subtype" : "string_copy_output_null",
      "code-language" : "objective-c",
      "name" : {
        "en" : "String not null terminated"
      },
      "description" : {
        "en" : "The string copy operation does not not null terminate the output buffer, which may be expected to be a null terminated string."
      },
      "local_effect" : {
        "en" : "A later use of the buffer may iterate past the end looking for a null terminator."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 170,
        "impact" : "High",
        "subcategory" : "string_copy_output_null",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 694
      }
    },
    {
      "type" : "improper_null_termination",
      "subtype" : "string_null",
      "code-language" : "c/c++",
      "name" : {
        "en" : "String not null terminated"
      },
      "description" : {
        "en" : "A character buffer that has not been null terminated is passed to a function expecting a null terminated string"
      },
      "local_effect" : {
        "en" : "The function may iterate past the end of the buffer looking for a null terminator."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 170,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 694
      }
    },
    {
      "type" : "improper_null_termination",
      "subtype" : "string_null",
      "code-language" : "cuda",
      "name" : {
        "en" : "String not null terminated"
      },
      "description" : {
        "en" : "A character buffer that has not been null terminated is passed to a function expecting a null terminated string"
      },
      "local_effect" : {
        "en" : "The function may iterate past the end of the buffer looking for a null terminator."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 170,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 694
      }
    },
    {
      "type" : "improper_null_termination",
      "subtype" : "string_null",
      "code-language" : "objective-c",
      "name" : {
        "en" : "String not null terminated"
      },
      "description" : {
        "en" : "A character buffer that has not been null terminated is passed to a function expecting a null terminated string"
      },
      "local_effect" : {
        "en" : "The function may iterate past the end of the buffer looking for a null terminator."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 170,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 694
      }
    },
    {
      "type" : "incompatible_pointer_cast",
      "subtype" : "endianness",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Reliance on integer endianness"
      },
      "description" : {
        "en" : "Reliance on integer endianness"
      },
      "local_effect" : {
        "en" : "The pointed-to memory is accessed with a smaller type, causing a subsequent read to yield an unexpected result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 188,
        "impact" : "Medium",
        "subcategory" : "endianness",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 711
      }
    },
    {
      "type" : "incompatible_pointer_cast",
      "subtype" : "endianness",
      "code-language" : "cuda",
      "name" : {
        "en" : "Reliance on integer endianness"
      },
      "description" : {
        "en" : "Reliance on integer endianness"
      },
      "local_effect" : {
        "en" : "The pointed-to memory is accessed with a smaller type, causing a subsequent read to yield an unexpected result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 188,
        "impact" : "Medium",
        "subcategory" : "endianness",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 711
      }
    },
    {
      "type" : "incompatible_pointer_cast",
      "subtype" : "endianness",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Reliance on integer endianness"
      },
      "description" : {
        "en" : "Reliance on integer endianness"
      },
      "local_effect" : {
        "en" : "The pointed-to memory is accessed with a smaller type, causing a subsequent read to yield an unexpected result."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 188,
        "impact" : "Medium",
        "subcategory" : "endianness",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 711
      }
    },
    {
      "type" : "incompatible_pointer_cast",
      "subtype" : "float_vs_integral",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Incompatible cast"
      },
      "description" : {
        "en" : "Cast between floating-point and integral pointers"
      },
      "local_effect" : {
        "en" : "A pointer is cast between floating-point and integral types; this only makes sense when performing bitwise operations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 704,
        "impact" : "Medium",
        "subcategory" : "float_vs_integral",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1151
      }
    },
    {
      "type" : "incompatible_pointer_cast",
      "subtype" : "float_vs_integral",
      "code-language" : "cuda",
      "name" : {
        "en" : "Incompatible cast"
      },
      "description" : {
        "en" : "Cast between floating-point and integral pointers"
      },
      "local_effect" : {
        "en" : "A pointer is cast between floating-point and integral types; this only makes sense when performing bitwise operations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 704,
        "impact" : "Medium",
        "subcategory" : "float_vs_integral",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1151
      }
    },
    {
      "type" : "incompatible_pointer_cast",
      "subtype" : "float_vs_integral",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Incompatible cast"
      },
      "description" : {
        "en" : "Cast between floating-point and integral pointers"
      },
      "local_effect" : {
        "en" : "A pointer is cast between floating-point and integral types; this only makes sense when performing bitwise operations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 704,
        "impact" : "Medium",
        "subcategory" : "float_vs_integral",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1151
      }
    },
    {
      "type" : "incompatible_pointer_cast",
      "subtype" : "incompatible_types",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Incompatible pointer cast"
      },
      "description" : {
        "en" : "Cast between incompatible pointer types"
      },
      "local_effect" : {
        "en" : "A pointer is cast to a different type, but the underlying object is not cast."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 704,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1151
      }
    },
    {
      "type" : "incompatible_pointer_cast",
      "subtype" : "incompatible_types",
      "code-language" : "cuda",
      "name" : {
        "en" : "Incompatible pointer cast"
      },
      "description" : {
        "en" : "Cast between incompatible pointer types"
      },
      "local_effect" : {
        "en" : "A pointer is cast to a different type, but the underlying object is not cast."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 704,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1151
      }
    },
    {
      "type" : "incompatible_pointer_cast",
      "subtype" : "incompatible_types",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Incompatible pointer cast"
      },
      "description" : {
        "en" : "Cast between incompatible pointer types"
      },
      "local_effect" : {
        "en" : "A pointer is cast to a different type, but the underlying object is not cast."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 704,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1151
      }
    },
    {
      "type" : "incompatible_pointer_cast",
      "subtype" : "overrun",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Out-of-bounds access"
      },
      "description" : {
        "en" : "Out-of-bounds access to a scalar"
      },
      "local_effect" : {
        "en" : "The pointed-to memory is accessed with a larger type, causing a crash or incorrect computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "overrun",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "incompatible_pointer_cast",
      "subtype" : "overrun",
      "code-language" : "cuda",
      "name" : {
        "en" : "Out-of-bounds access"
      },
      "description" : {
        "en" : "Out-of-bounds access to a scalar"
      },
      "local_effect" : {
        "en" : "The pointed-to memory is accessed with a larger type, causing a crash or incorrect computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "overrun",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "incompatible_pointer_cast",
      "subtype" : "overrun",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Out-of-bounds access"
      },
      "description" : {
        "en" : "Out-of-bounds access to a scalar"
      },
      "local_effect" : {
        "en" : "The pointed-to memory is accessed with a larger type, causing a crash or incorrect computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "overrun",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "incorrect_buffer_size",
      "subtype" : "strlen_off_by_one",
      "code-language" : "c/c++",
      "name" : {
        "en" : "String length miscalculation"
      },
      "description" : {
        "en" : "String length miscalculation"
      },
      "local_effect" : {
        "en" : "The string length computed may be one less than intended (or zero for the empty string).  A common mistake."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 131,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 629
      }
    },
    {
      "type" : "incorrect_buffer_size",
      "subtype" : "strlen_off_by_one",
      "code-language" : "cuda",
      "name" : {
        "en" : "String length miscalculation"
      },
      "description" : {
        "en" : "String length miscalculation"
      },
      "local_effect" : {
        "en" : "The string length computed may be one less than intended (or zero for the empty string).  A common mistake."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 131,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 629
      }
    },
    {
      "type" : "incorrect_buffer_size",
      "subtype" : "strlen_off_by_one",
      "code-language" : "objective-c",
      "name" : {
        "en" : "String length miscalculation"
      },
      "description" : {
        "en" : "String length miscalculation"
      },
      "local_effect" : {
        "en" : "The string length computed may be one less than intended (or zero for the empty string).  A common mistake."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 131,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 629
      }
    },
    {
      "type" : "infinite_loop",
      "subtype" : "no_escape",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Infinite loop with no exit"
      },
      "description" : {
        "en" : "Infinite loop with no exit condition"
      },
      "local_effect" : {
        "en" : "The loop will execute forever, or until system resources are exhausted or the system is otherwise stopped."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 835,
        "impact" : "Medium",
        "subcategory" : "no_escape",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1227
      }
    },
    {
      "type" : "infinite_loop",
      "subtype" : "no_escape",
      "code-language" : "c#",
      "name" : {
        "en" : "Infinite loop"
      },
      "description" : {
        "en" : "Infinite loop with no exit condition"
      },
      "local_effect" : {
        "en" : "The loop will execute forever, or until system resources are exhausted or the system is otherwise stopped."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 835,
        "impact" : "Medium",
        "subcategory" : "no_escape",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1227
      }
    },
    {
      "type" : "infinite_loop",
      "subtype" : "no_escape",
      "code-language" : "cuda",
      "name" : {
        "en" : "Infinite loop with no exit"
      },
      "description" : {
        "en" : "Infinite loop with no exit condition"
      },
      "local_effect" : {
        "en" : "The loop will execute forever, or until system resources are exhausted or the system is otherwise stopped."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 835,
        "impact" : "Medium",
        "subcategory" : "no_escape",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1227
      }
    },
    {
      "type" : "infinite_loop",
      "subtype" : "no_escape",
      "code-language" : "go",
      "name" : {
        "en" : "Infinite loop with no exit"
      },
      "description" : {
        "en" : "Infinite loop with no exit condition"
      },
      "local_effect" : {
        "en" : "The loop will execute forever, or until system resources are exhausted or the system is otherwise stopped."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 835,
        "impact" : "Medium",
        "subcategory" : "no_escape",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1227
      }
    },
    {
      "type" : "infinite_loop",
      "subtype" : "no_escape",
      "code-language" : "java",
      "name" : {
        "en" : "Infinite loop"
      },
      "description" : {
        "en" : "Infinite loop with no exit condition"
      },
      "local_effect" : {
        "en" : "The loop will execute forever, or until system resources are exhausted or the system is otherwise stopped."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 835,
        "impact" : "Medium",
        "subcategory" : "no_escape",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1227
      }
    },
    {
      "type" : "infinite_loop",
      "subtype" : "no_escape",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Infinite loop with no exit"
      },
      "description" : {
        "en" : "Infinite loop with no exit condition"
      },
      "local_effect" : {
        "en" : "The loop will execute forever, or until system resources are exhausted or the system is otherwise stopped."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 835,
        "impact" : "Medium",
        "subcategory" : "no_escape",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1227
      }
    },
    {
      "type" : "infinite_loop",
      "subtype" : "no_escape",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Infinite loop"
      },
      "description" : {
        "en" : "Infinite loop with no exit condition"
      },
      "local_effect" : {
        "en" : "The loop will execute forever, or until system resources are exhausted or the system is otherwise stopped."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 835,
        "impact" : "Medium",
        "subcategory" : "no_escape",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1227
      }
    },
    {
      "type" : "infinite_loop",
      "subtype" : "unsatisfiable_exit_condition",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Infinite loop"
      },
      "description" : {
        "en" : "Infinite loop with unsatisfiable exit condition"
      },
      "local_effect" : {
        "en" : "The loop does not have a normal termination condition, so will continue until an abnormal condition arises."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 835,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1227
      }
    },
    {
      "type" : "infinite_loop",
      "subtype" : "unsatisfiable_exit_condition",
      "code-language" : "c#",
      "name" : {
        "en" : "Infinite loop"
      },
      "description" : {
        "en" : "Infinite loop with unsatisfiable exit condition"
      },
      "local_effect" : {
        "en" : "The loop does not have a normal termination condition, so will continue until an abnormal condition arises."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 835,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1227
      }
    },
    {
      "type" : "infinite_loop",
      "subtype" : "unsatisfiable_exit_condition",
      "code-language" : "cuda",
      "name" : {
        "en" : "Infinite loop"
      },
      "description" : {
        "en" : "Infinite loop with unsatisfiable exit condition"
      },
      "local_effect" : {
        "en" : "The loop does not have a normal termination condition, so will continue until an abnormal condition arises."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 835,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1227
      }
    },
    {
      "type" : "infinite_loop",
      "subtype" : "unsatisfiable_exit_condition",
      "code-language" : "go",
      "name" : {
        "en" : "Infinite loop"
      },
      "description" : {
        "en" : "Infinite loop with unsatisfiable exit condition"
      },
      "local_effect" : {
        "en" : "The loop does not have a normal termination condition, so will continue until an abnormal condition arises."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 835,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1227
      }
    },
    {
      "type" : "infinite_loop",
      "subtype" : "unsatisfiable_exit_condition",
      "code-language" : "java",
      "name" : {
        "en" : "Infinite loop"
      },
      "description" : {
        "en" : "Infinite loop with unsatisfiable exit condition"
      },
      "local_effect" : {
        "en" : "The loop does not have a normal termination condition, so will continue until an abnormal condition arises."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 835,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1227
      }
    },
    {
      "type" : "infinite_loop",
      "subtype" : "unsatisfiable_exit_condition",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Infinite loop"
      },
      "description" : {
        "en" : "Infinite loop with unsatisfiable exit condition"
      },
      "local_effect" : {
        "en" : "The loop does not have a normal termination condition, so will continue until an abnormal condition arises."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 835,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1227
      }
    },
    {
      "type" : "infinite_loop",
      "subtype" : "unsatisfiable_exit_condition",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Infinite loop"
      },
      "description" : {
        "en" : "Infinite loop with unsatisfiable exit condition"
      },
      "local_effect" : {
        "en" : "The loop does not have a normal termination condition, so will continue until an abnormal condition arises."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 835,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1227
      }
    },
    {
      "type" : "information_exposure",
      "subtype" : "aspnet_mvc_version_header",
      "code-language" : "c#",
      "name" : {
        "en" : "ASP.NET MVC version header included"
      },
      "description" : {
        "en" : "MvcHandler.DisableMvcResponseHeader is not set to true in function Application_Start or its callees."
      },
      "local_effect" : {
        "en" : "Not setting MvcHandler.DisableMvcResponseHeader to true in function Application_Start or its callees reveals information about the specific version of ASP.NET MVC on the target system."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 201,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 41
      }
    },
    {
      "type" : "information_exposure",
      "subtype" : "aspnet_mvc_version_header",
      "code-language" : "vb.net",
      "name" : {
        "en" : "ASP.NET MVC version header included"
      },
      "description" : {
        "en" : "MvcHandler.DisableMvcResponseHeader is not set to true in function Application_Start or its callees."
      },
      "local_effect" : {
        "en" : "Not setting MvcHandler.DisableMvcResponseHeader to true in function Application_Start or its callees reveals information about the specific version of ASP.NET MVC on the target system."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 201,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 41
      }
    },
    {
      "type" : "information_leak",
      "subtype" : "aspnet_version_header",
      "code-language" : "c#",
      "name" : {
        "en" : "ASP.NET version disclosure"
      },
      "description" : {
        "en" : "The enableVersionHeader flag is set to true in the httpRuntime element."
      },
      "local_effect" : {
        "en" : "Setting enableVersionHeader to true reveals information about the specific version of ASP.NET running on the system. This can be used to target security vulnerabilities in the specific version."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 200,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 41
      }
    },
    {
      "type" : "insecure_chroot",
      "subtype" : "missing_chdir",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Insecure chroot"
      },
      "description" : {
        "en" : "A call to chroot followed by an operation that may escape from the chroot jail"
      },
      "local_effect" : {
        "en" : "If a call to chroot is not followed by a call to chdir(\"/\") the chroot jail confinement can be violated."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 243,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 762
      }
    },
    {
      "type" : "insecure_chroot",
      "subtype" : "missing_chdir",
      "code-language" : "cuda",
      "name" : {
        "en" : "Insecure chroot"
      },
      "description" : {
        "en" : "A call to chroot followed by an operation that may escape from the chroot jail"
      },
      "local_effect" : {
        "en" : "If a call to chroot is not followed by a call to chdir(\"/\") the chroot jail confinement can be violated."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 243,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 762
      }
    },
    {
      "type" : "insecure_chroot",
      "subtype" : "missing_chdir",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Insecure chroot"
      },
      "description" : {
        "en" : "A call to chroot followed by an operation that may escape from the chroot jail"
      },
      "local_effect" : {
        "en" : "If a call to chroot is not followed by a call to chdir(\"/\") the chroot jail confinement can be violated."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 243,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 762
      }
    },
    {
      "type" : "insecure_communication",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Plaintext communication"
      },
      "description" : {
        "en" : "The application is connecting to end points over a plaintext connection."
      },
      "local_effect" : {
        "en" : "Sensitive data sent to or received from the application may be read or manipulated by unintended actors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 319,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "insecure_communication",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Plaintext communication"
      },
      "description" : {
        "en" : "The application is connecting to end points over a plaintext connection."
      },
      "local_effect" : {
        "en" : "Sensitive data sent to or received from the application may be read or manipulated by unintended actors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 319,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "insecure_communication",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Plaintext communication"
      },
      "description" : {
        "en" : "The application is connecting to end points over a plaintext connection."
      },
      "local_effect" : {
        "en" : "Sensitive data sent to or received from the application may be read or manipulated by unintended actors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 319,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "insecure_communication",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Plaintext communication"
      },
      "description" : {
        "en" : "The application is connecting to end points over a plaintext connection."
      },
      "local_effect" : {
        "en" : "Sensitive data sent to or received from the application may be read or manipulated by unintended actors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 319,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "insecure_cookie",
      "subtype" : "cookie_missing_secure_flag_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Information disclosure"
      },
      "description" : {
        "en" : "The 'Secure' attribute is not set for the cookie."
      },
      "local_effect" : {
        "en" : "While web browsers send cookies with the 'Secure' attribute only over HTTPS, they do send cookies without it over HTTP.  If an attacker can fool the victim's browser into sending an HTTP request to the vulnerable site (for example, with JavaScript code on a malicious page or with a phishing link), the victim's browser will send the vulnerable cookie in the clear.  If the attacker can also intercept this network traffic, then they can steal the victim's session cookie and impersonate the victim."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 614,
        "impact" : "Low",
        "subcategory" : "cookie_missing_secure_flag_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 2
      }
    },
    {
      "type" : "insecure_cookie",
      "subtype" : "missing_httponly_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Cookie data is vulnerable to cross-site scripting attacks, and sensitive information, such as session identifiers, could be leaked to a third party."
      },
      "local_effect" : {
        "en" : "By enabling the HttpOnly attribute in the response header, modern browsers will disallow script access to cookie data. The cookie is still sent when the user visits a valid address, but any malicious code will be unable to transmit the cookie data back to the attacker's computer or web site."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 1004,
        "impact" : "Low",
        "subcategory" : "missing_httponly_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1
      }
    },
    {
      "type" : "insecure_random",
      "subtype" : "insecure_random_used",
      "code-language" : "c#",
      "name" : {
        "en" : "Insecure random value used in security context"
      },
      "description" : {
        "en" : "Random value generated using a cryptographically insecure pseudo-random number generator, and used in a security-sensitive context"
      },
      "local_effect" : {
        "en" : "An attacker may be able to predict the values generated by a cryptographically weak PRNG and gain access to sensitive information."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure random category",
        "cweCategory" : 330,
        "impact" : "Medium",
        "subcategory" : "insecure_random_used",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 240
      }
    },
    {
      "type" : "insecure_random",
      "subtype" : "insecure_random_used",
      "code-language" : "java",
      "name" : {
        "en" : "Insecure random value used in security context"
      },
      "description" : {
        "en" : "Random value generated using a cryptographically insecure pseudo-random number generator, and used in a security-sensitive context"
      },
      "local_effect" : {
        "en" : "An attacker may be able to predict the values generated by a cryptographically weak PRNG and gain access to sensitive information."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure random category",
        "cweCategory" : 330,
        "impact" : "Medium",
        "subcategory" : "insecure_random_used",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 240
      }
    },
    {
      "type" : "insecure_random",
      "subtype" : "insecure_random_used",
      "code-language" : "javascript",
      "name" : {
        "en" : "Insecure random value used in security context"
      },
      "description" : {
        "en" : "Random value generated using a cryptographically insecure pseudo-random number generator, and used in a security-sensitive context"
      },
      "local_effect" : {
        "en" : "An attacker may be able to predict the values generated by a cryptographically weak PRNG and gain access to sensitive information."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure random category",
        "cweCategory" : 330,
        "impact" : "Medium",
        "subcategory" : "insecure_random_used",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 240
      }
    },
    {
      "type" : "insecure_random",
      "subtype" : "insecure_random_used",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Insecure random value used in security context"
      },
      "description" : {
        "en" : "Random value generated using a cryptographically insecure pseudo-random number generator, and used in a security-sensitive context"
      },
      "local_effect" : {
        "en" : "An attacker may be able to predict the values generated by a cryptographically weak PRNG and gain access to sensitive information."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure random category",
        "cweCategory" : 330,
        "impact" : "Medium",
        "subcategory" : "insecure_random_used",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 240
      }
    },
    {
      "type" : "insecure_random",
      "subtype" : "insecure_random_used",
      "code-language" : "python",
      "name" : {
        "en" : "Insecure random value used in security context"
      },
      "description" : {
        "en" : "Random value generated using a cryptographically insecure pseudo-random number generator, and used in a security-sensitive context"
      },
      "local_effect" : {
        "en" : "An attacker may be able to predict the values generated by a cryptographically weak PRNG and gain access to sensitive information."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure random category",
        "cweCategory" : 330,
        "impact" : "Medium",
        "subcategory" : "insecure_random_used",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 240
      }
    },
    {
      "type" : "insecure_random",
      "subtype" : "insecure_random_used",
      "code-language" : "typescript",
      "name" : {
        "en" : "Insecure random value used in security context"
      },
      "description" : {
        "en" : "Random value generated using a cryptographically insecure pseudo-random number generator, and used in a security-sensitive context"
      },
      "local_effect" : {
        "en" : "An attacker may be able to predict the values generated by a cryptographically weak PRNG and gain access to sensitive information."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure random category",
        "cweCategory" : 330,
        "impact" : "Medium",
        "subcategory" : "insecure_random_used",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 240
      }
    },
    {
      "type" : "insecure_random",
      "subtype" : "insecure_random_used",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Insecure random value used in security context"
      },
      "description" : {
        "en" : "Random value generated using a cryptographically insecure pseudo-random number generator, and used in a security-sensitive context"
      },
      "local_effect" : {
        "en" : "An attacker may be able to predict the values generated by a cryptographically weak PRNG and gain access to sensitive information."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure random category",
        "cweCategory" : 330,
        "impact" : "Medium",
        "subcategory" : "insecure_random_used",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 240
      }
    },
    {
      "type" : "insecure_random",
      "subtype" : "insecure_random_value",
      "code-language" : "c#",
      "name" : {
        "en" : "Cryptographically weak PRNG"
      },
      "description" : {
        "en" : "Random value generated using a cryptographically insecure pseudo-random number generator"
      },
      "local_effect" : {
        "en" : "An attacker may be able to predict the values generated by a cryptographically weak PRNG."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure random category",
        "cweCategory" : 330,
        "impact" : "Low",
        "subcategory" : "insecure_random_value",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 240
      }
    },
    {
      "type" : "insecure_random",
      "subtype" : "insecure_random_value",
      "code-language" : "java",
      "name" : {
        "en" : "Cryptographically weak PRNG"
      },
      "description" : {
        "en" : "Random value generated using a cryptographically insecure pseudo-random number generator"
      },
      "local_effect" : {
        "en" : "An attacker may be able to predict the values generated by a cryptographically weak PRNG."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure random category",
        "cweCategory" : 330,
        "impact" : "Low",
        "subcategory" : "insecure_random_value",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 240
      }
    },
    {
      "type" : "insecure_random",
      "subtype" : "insecure_random_value",
      "code-language" : "javascript",
      "name" : {
        "en" : "Cryptographically weak PRNG"
      },
      "description" : {
        "en" : "Random value generated using a cryptographically insecure pseudo-random number generator"
      },
      "local_effect" : {
        "en" : "An attacker may be able to predict the values generated by a cryptographically weak PRNG."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure random category",
        "cweCategory" : 330,
        "impact" : "Low",
        "subcategory" : "insecure_random_value",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 240
      }
    },
    {
      "type" : "insecure_random",
      "subtype" : "insecure_random_value",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Cryptographically weak PRNG"
      },
      "description" : {
        "en" : "Random value generated using a cryptographically insecure pseudo-random number generator"
      },
      "local_effect" : {
        "en" : "An attacker may be able to predict the values generated by a cryptographically weak PRNG."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure random category",
        "cweCategory" : 330,
        "impact" : "Low",
        "subcategory" : "insecure_random_value",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 240
      }
    },
    {
      "type" : "insecure_random",
      "subtype" : "insecure_random_value",
      "code-language" : "python",
      "name" : {
        "en" : "Cryptographically weak PRNG"
      },
      "description" : {
        "en" : "Random value generated using a cryptographically insecure pseudo-random number generator"
      },
      "local_effect" : {
        "en" : "An attacker may be able to predict the values generated by a cryptographically weak PRNG."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure random category",
        "cweCategory" : 330,
        "impact" : "Low",
        "subcategory" : "insecure_random_value",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 240
      }
    },
    {
      "type" : "insecure_random",
      "subtype" : "insecure_random_value",
      "code-language" : "typescript",
      "name" : {
        "en" : "Cryptographically weak PRNG"
      },
      "description" : {
        "en" : "Random value generated using a cryptographically insecure pseudo-random number generator"
      },
      "local_effect" : {
        "en" : "An attacker may be able to predict the values generated by a cryptographically weak PRNG."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure random category",
        "cweCategory" : 330,
        "impact" : "Low",
        "subcategory" : "insecure_random_value",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 240
      }
    },
    {
      "type" : "insecure_random",
      "subtype" : "insecure_random_value",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Cryptographically weak PRNG"
      },
      "description" : {
        "en" : "Random value generated using a cryptographically insecure pseudo-random number generator"
      },
      "local_effect" : {
        "en" : "An attacker may be able to predict the values generated by a cryptographically weak PRNG."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure random category",
        "cweCategory" : 330,
        "impact" : "Low",
        "subcategory" : "insecure_random_value",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 240
      }
    },
    {
      "type" : "insecure_salt",
      "subtype" : "hardcoded",
      "code-language" : "javascript",
      "name" : {
        "en" : "Predictable salt used with cryptographic hash function"
      },
      "description" : {
        "en" : "Using a cryptographic hash function with an insecure salt."
      },
      "local_effect" : {
        "en" : "Given the salt and the output of a hash function, an attacker with enough resources can feasibly compute the input that yields that output.  Re-using the same salt for many uses of the hash function reduces the cost for the attacker to reverse a large number of hashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 760,
        "impact" : "Medium",
        "subcategory" : "hardcoded",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "insecure_salt",
      "subtype" : "hardcoded",
      "code-language" : "python",
      "name" : {
        "en" : "Predictable salt used with cryptographic hash function"
      },
      "description" : {
        "en" : "Using a cryptographic hash function with an insecure salt."
      },
      "local_effect" : {
        "en" : "Given the salt and the output of a hash function, an attacker with enough resources can feasibly compute the input that yields that output.  Re-using the same salt for many uses of the hash function reduces the cost for the attacker to reverse a large number of hashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 760,
        "impact" : "Medium",
        "subcategory" : "hardcoded",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "insecure_salt",
      "subtype" : "hardcoded",
      "code-language" : "typescript",
      "name" : {
        "en" : "Predictable salt used with cryptographic hash function"
      },
      "description" : {
        "en" : "Using a cryptographic hash function with an insecure salt."
      },
      "local_effect" : {
        "en" : "Given the salt and the output of a hash function, an attacker with enough resources can feasibly compute the input that yields that output.  Re-using the same salt for many uses of the hash function reduces the cost for the attacker to reverse a large number of hashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 760,
        "impact" : "Medium",
        "subcategory" : "hardcoded",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "insecure_temporary_file",
      "subtype" : "secure_temp",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Insecure temporary file"
      },
      "description" : {
        "en" : "Using an insecure temporary file creation function"
      },
      "local_effect" : {
        "en" : "An attacker may be able to guess the name of the temporary file, or the permissions may be too loose."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 377,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 877
      }
    },
    {
      "type" : "insecure_temporary_file",
      "subtype" : "secure_temp",
      "code-language" : "cuda",
      "name" : {
        "en" : "Insecure temporary file"
      },
      "description" : {
        "en" : "Using an insecure temporary file creation function"
      },
      "local_effect" : {
        "en" : "An attacker may be able to guess the name of the temporary file, or the permissions may be too loose."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 377,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 877
      }
    },
    {
      "type" : "insecure_use_of_default_file_permissions_in_call_to_open",
      "subtype" : "open_args",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Insecure file permissions"
      },
      "description" : {
        "en" : "The open system call may create a file, but no permissions are specified"
      },
      "local_effect" : {
        "en" : "The permissions on the file created will be arbitrary and possibly insecure."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 732,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 236
      }
    },
    {
      "type" : "insecure_use_of_default_file_permissions_in_call_to_open",
      "subtype" : "open_args",
      "code-language" : "cuda",
      "name" : {
        "en" : "Insecure file permissions"
      },
      "description" : {
        "en" : "The open system call may create a file, but no permissions are specified"
      },
      "local_effect" : {
        "en" : "The permissions on the file created will be arbitrary and possibly insecure."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 732,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 236
      }
    },
    {
      "type" : "insecure_use_of_default_file_permissions_in_call_to_open",
      "subtype" : "open_args",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Insecure file permissions"
      },
      "description" : {
        "en" : "The open system call may create a file, but no permissions are specified"
      },
      "local_effect" : {
        "en" : "The permissions on the file created will be arbitrary and possibly insecure."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 732,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 236
      }
    },
    {
      "type" : "insufficient_logging",
      "subtype" : "logging_obligation",
      "code-language" : "go",
      "name" : {
        "en" : "Insufficient logging"
      },
      "description" : {
        "en" : "The code handles a security error. The event should be logged but is not."
      },
      "local_effect" : {
        "en" : "Detecting a security incident may take longer without sufficient logging. Delaying detection increases potential damage and mitigation effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 778,
        "impact" : "Low",
        "subcategory" : "logging_obligation",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 295
      }
    },
    {
      "type" : "insufficient_logging",
      "subtype" : "logging_obligation",
      "code-language" : "javascript",
      "name" : {
        "en" : "Insufficient logging"
      },
      "description" : {
        "en" : "The code handles a security error. The event should be logged but is not."
      },
      "local_effect" : {
        "en" : "Detecting a security incident may take longer without sufficient logging. Delaying detection increases potential damage and mitigation effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 778,
        "impact" : "Low",
        "subcategory" : "logging_obligation",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 295
      }
    },
    {
      "type" : "insufficient_logging",
      "subtype" : "logging_obligation",
      "code-language" : "python",
      "name" : {
        "en" : "Insufficient logging"
      },
      "description" : {
        "en" : "The code handles a security error. The event should be logged but is not."
      },
      "local_effect" : {
        "en" : "Detecting a security incident may take longer without sufficient logging. Delaying detection increases potential damage and mitigation effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 778,
        "impact" : "Low",
        "subcategory" : "logging_obligation",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 295
      }
    },
    {
      "type" : "insufficient_logging",
      "subtype" : "logging_obligation",
      "code-language" : "typescript",
      "name" : {
        "en" : "Insufficient logging"
      },
      "description" : {
        "en" : "The code handles a security error. The event should be logged but is not."
      },
      "local_effect" : {
        "en" : "Detecting a security incident may take longer without sufficient logging. Delaying detection increases potential damage and mitigation effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 778,
        "impact" : "Low",
        "subcategory" : "logging_obligation",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 295
      }
    },
    {
      "type" : "invalidate_iterator",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Using invalid iterator"
      },
      "description" : {
        "en" : "An invalid or past-the-end iterator is being used"
      },
      "local_effect" : {
        "en" : "Undefined behavior may result; the program may crash or subtly misbehave."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 119,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "invalidate_iterator",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Using invalid iterator"
      },
      "description" : {
        "en" : "An invalid or past-the-end iterator is being used"
      },
      "local_effect" : {
        "en" : "Undefined behavior may result; the program may crash or subtly misbehave."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 119,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "invalidate_iterator",
      "subtype" : "map_put",
      "code-language" : "java",
      "name" : {
        "en" : "Using invalid iterator"
      },
      "description" : {
        "en" : "A map was modified with Map.put while it was being iterated on"
      },
      "local_effect" : {
        "en" : "A map was modified with Map.put while it was being iterated on. If the key was not in the map, this will usually generate an error (ConcurrentModificationException). The most common case is iterating on the keySet(), and updating the value at the current key. In this case, the map's key set is not changed, so this doesn't generate an error. Doing things this way is inefficient however, as this requires doing a map lookup that can be avoided. Instead, iterate on the entrySet and use Map.Entry.setValue."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 573,
        "impact" : "Low",
        "subcategory" : "map_put",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1389
      }
    },
    {
      "type" : "invalidate_iterator",
      "subtype" : "map_put",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Using invalid iterator"
      },
      "description" : {
        "en" : "A map was modified with Map.put while it was being iterated on"
      },
      "local_effect" : {
        "en" : "A map was modified with Map.put while it was being iterated on. If the key was not in the map, this will usually generate an error (ConcurrentModificationException). The most common case is iterating on the keySet(), and updating the value at the current key. In this case, the map's key set is not changed, so this doesn't generate an error. Doing things this way is inefficient however, as this requires doing a map lookup that can be avoided. Instead, iterate on the entrySet and use Map.Entry.setValue."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 573,
        "impact" : "Low",
        "subcategory" : "map_put",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1389
      }
    },
    {
      "type" : "java_code_injection",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Dynamic Java Bytecode injection"
      },
      "description" : {
        "en" : "A user-controllable string is evaluated by an API that produces dynamic Java bytecode."
      },
      "local_effect" : {
        "en" : "An attacker can inject new Java bytecode that executes arbitrary code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 94,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 291
      }
    },
    {
      "type" : "jcr_injection",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Content Repository for Java injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into a Content Repository for Java query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the JCR query, which may inappropriately disclose repository data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 94,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1331
      }
    },
    {
      "type" : "jsp_dynamic_include",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "JSP dynamic include"
      },
      "description" : {
        "en" : "A JSP include path is partially or entirely user-controllable."
      },
      "local_effect" : {
        "en" : "An attacker can manipulate the internal server path of the JSP to bypass authorization, access sensitive data, or execute untrusted code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 22,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 399
      }
    },
    {
      "type" : "ldap_injection",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "LDAP injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into an LDAP query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the LDAP query, which may bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 90,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 76
      }
    },
    {
      "type" : "ldap_injection",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "LDAP injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into an LDAP query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the LDAP query, which may bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 90,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 76
      }
    },
    {
      "type" : "ldap_injection",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "LDAP injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into an LDAP query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the LDAP query, which may bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 90,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 76
      }
    },
    {
      "type" : "ldap_injection",
      "subtype" : "non_constant",
      "code-language" : "c#",
      "name" : {
        "en" : "Non-constant LDAP"
      },
      "description" : {
        "en" : "An LDAP query is constructed from a non-constant string."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the LDAP query, which may bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 90,
        "impact" : "Audit",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 76
      }
    },
    {
      "type" : "ldap_injection",
      "subtype" : "non_constant",
      "code-language" : "java",
      "name" : {
        "en" : "Non-constant LDAP"
      },
      "description" : {
        "en" : "An LDAP query is constructed from a non-constant string."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the LDAP query, which may bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 90,
        "impact" : "Audit",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 76
      }
    },
    {
      "type" : "ldap_injection",
      "subtype" : "non_constant",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Non-constant LDAP"
      },
      "description" : {
        "en" : "An LDAP query is constructed from a non-constant string."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the LDAP query, which may bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 90,
        "impact" : "Audit",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 76
      }
    },
    {
      "type" : "localstorage_manipulation",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "localStorage manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct a key in localStorage."
      },
      "local_effect" : {
        "en" : "An attacker may be able to affect the behavior of the application by overwriting sensitive keys in localStorage."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 99,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1333
      }
    },
    {
      "type" : "localstorage_manipulation",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "localStorage manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct a key in localStorage."
      },
      "local_effect" : {
        "en" : "An attacker may be able to affect the behavior of the application by overwriting sensitive keys in localStorage."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 99,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1333
      }
    },
    {
      "type" : "lock_evasion",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Check of thread-shared field evades lock acquisition"
      },
      "description" : {
        "en" : "Checking the value of a thread-shared field outside of a locked region to determine if a locked operation involving that thread shared field has completed."
      },
      "local_effect" : {
        "en" : "The data guarded by this critical section may be read while in an inconsistent state or modified by multiple racing threads."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Data race undermines locking",
        "cweCategory" : 543,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1017
      }
    },
    {
      "type" : "lock_evasion",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Check of thread-shared field evades lock acquisition"
      },
      "description" : {
        "en" : "Checking the value of a thread-shared field outside of a locked region to determine if a locked operation involving that thread shared field has completed."
      },
      "local_effect" : {
        "en" : "The data guarded by this critical section may be read while in an inconsistent state or modified by multiple racing threads."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Data race undermines locking",
        "cweCategory" : 543,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1017
      }
    },
    {
      "type" : "lock_evasion",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Check of thread-shared field evades lock acquisition"
      },
      "description" : {
        "en" : "Checking the value of a thread-shared field outside of a locked region to determine if a locked operation involving that thread shared field has completed."
      },
      "local_effect" : {
        "en" : "The data guarded by this critical section may be read while in an inconsistent state or modified by multiple racing threads."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Data race undermines locking",
        "cweCategory" : 543,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1017
      }
    },
    {
      "type" : "lock_evasion",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Check of thread-shared field evades lock acquisition"
      },
      "description" : {
        "en" : "Checking the value of a thread-shared field outside of a locked region to determine if a locked operation involving that thread shared field has completed."
      },
      "local_effect" : {
        "en" : "The data guarded by this critical section may be read while in an inconsistent state or modified by multiple racing threads."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Data race undermines locking",
        "cweCategory" : 543,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1017
      }
    },
    {
      "type" : "log_injection",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Log injection"
      },
      "description" : {
        "en" : "User-controllable data is stored in logs."
      },
      "local_effect" : {
        "en" : "An attacker may be able to forge log messages to confuse automated log parsing tools or humans trying to diagnose an attack or other problem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 117,
        "impact" : "Audit",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 10
      }
    },
    {
      "type" : "log_injection",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Log injection"
      },
      "description" : {
        "en" : "User-controllable data is stored in logs."
      },
      "local_effect" : {
        "en" : "An attacker may be able to forge log messages to confuse automated log parsing tools or humans trying to diagnose an attack or other problem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 117,
        "impact" : "Audit",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 10
      }
    },
    {
      "type" : "log_injection",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Log injection"
      },
      "description" : {
        "en" : "User-controllable data is stored in logs."
      },
      "local_effect" : {
        "en" : "An attacker may be able to forge log messages to confuse automated log parsing tools or humans trying to diagnose an attack or other problem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 117,
        "impact" : "Audit",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 10
      }
    },
    {
      "type" : "memory_leak",
      "subtype" : "ctor_dtor_leak",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Resource leak in object"
      },
      "description" : {
        "en" : "Constructor allocates memory but destructor does not free it"
      },
      "local_effect" : {
        "en" : "The memory will not be reclaimed by the destructor, and it cannot be reused until the process terminates."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 401,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 895
      }
    },
    {
      "type" : "memory_leak",
      "subtype" : "ctor_dtor_leak",
      "code-language" : "cuda",
      "name" : {
        "en" : "Resource leak in object"
      },
      "description" : {
        "en" : "Constructor allocates memory but destructor does not free it"
      },
      "local_effect" : {
        "en" : "The memory will not be reclaimed by the destructor, and it cannot be reused until the process terminates."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 401,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 895
      }
    },
    {
      "type" : "memory_leak",
      "subtype" : "ctor_dtor_leak",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Resource leak in object"
      },
      "description" : {
        "en" : "Constructor allocates memory but destructor does not free it"
      },
      "local_effect" : {
        "en" : "The memory will not be reclaimed by the destructor, and it cannot be reused until the process terminates."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 401,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 895
      }
    },
    {
      "type" : "memset_bad_fill_value",
      "subtype" : "no_effect",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Memset fill value of '0'"
      },
      "description" : {
        "en" : "A memset fill value of ASCII character '0' is likely intended to be 0"
      },
      "local_effect" : {
        "en" : "The buffer will be filled with ASCII character '0' instead of actual zero bytes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 665,
        "impact" : "High",
        "subcategory" : "bad_memset_fill_value",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "memset_bad_fill_value",
      "subtype" : "no_effect",
      "code-language" : "cuda",
      "name" : {
        "en" : "Memset fill value of '0'"
      },
      "description" : {
        "en" : "A memset fill value of ASCII character '0' is likely intended to be 0"
      },
      "local_effect" : {
        "en" : "The buffer will be filled with ASCII character '0' instead of actual zero bytes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 665,
        "impact" : "High",
        "subcategory" : "bad_memset_fill_value",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "memset_bad_fill_value",
      "subtype" : "no_effect",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Memset fill value of '0'"
      },
      "description" : {
        "en" : "A memset fill value of ASCII character '0' is likely intended to be 0"
      },
      "local_effect" : {
        "en" : "The buffer will be filled with ASCII character '0' instead of actual zero bytes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 665,
        "impact" : "High",
        "subcategory" : "bad_memset_fill_value",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "memset_fill_value_truncated",
      "subtype" : "no_effect",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Memset fill truncated"
      },
      "description" : {
        "en" : "The memset fill value must be between -1 and 255, other values will be truncated"
      },
      "local_effect" : {
        "en" : "The buffer will not be filled with the apparent fill byte pattern, instead it will be filled with the truncated value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 197,
        "impact" : "High",
        "subcategory" : "bad_memset_truncated_fill",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "memset_fill_value_truncated",
      "subtype" : "no_effect",
      "code-language" : "cuda",
      "name" : {
        "en" : "Memset fill truncated"
      },
      "description" : {
        "en" : "The memset fill value must be between -1 and 255, other values will be truncated"
      },
      "local_effect" : {
        "en" : "The buffer will not be filled with the apparent fill byte pattern, instead it will be filled with the truncated value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 197,
        "impact" : "High",
        "subcategory" : "bad_memset_truncated_fill",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "memset_fill_value_truncated",
      "subtype" : "no_effect",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Memset fill truncated"
      },
      "description" : {
        "en" : "The memset fill value must be between -1 and 255, other values will be truncated"
      },
      "local_effect" : {
        "en" : "The buffer will not be filled with the apparent fill byte pattern, instead it will be filled with the truncated value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 197,
        "impact" : "High",
        "subcategory" : "bad_memset_truncated_fill",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "mismatched_iterator",
      "subtype" : "mismatched_comparison",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Invalid iterator comparison"
      },
      "description" : {
        "en" : "Iterators that point to different containers are compared"
      },
      "local_effect" : {
        "en" : "Iterators between different containers will always be different and should not be compared; this likely indicates a logical bug."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "mismatched_comparison",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1416
      }
    },
    {
      "type" : "mismatched_iterator",
      "subtype" : "mismatched_comparison",
      "code-language" : "cuda",
      "name" : {
        "en" : "Invalid iterator comparison"
      },
      "description" : {
        "en" : "Iterators that point to different containers are compared"
      },
      "local_effect" : {
        "en" : "Iterators between different containers will always be different and should not be compared; this likely indicates a logical bug."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "mismatched_comparison",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1416
      }
    },
    {
      "type" : "mismatched_iterator",
      "subtype" : "mismatched_comparison",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Invalid iterator comparison"
      },
      "description" : {
        "en" : "Iterators that point to different containers are compared"
      },
      "local_effect" : {
        "en" : "Iterators between different containers will always be different and should not be compared; this likely indicates a logical bug."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "mismatched_comparison",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1416
      }
    },
    {
      "type" : "mismatched_iterator",
      "subtype" : "splice_iterator_mismatch",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Splice iterator mismatch"
      },
      "description" : {
        "en" : "Using iterator from the wrong container as argument to the splice method"
      },
      "local_effect" : {
        "en" : "Undefined behavior may result; the program may crash or subtly misbehave."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "splice_iterator_mismatch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "mismatched_iterator",
      "subtype" : "splice_iterator_mismatch",
      "code-language" : "cuda",
      "name" : {
        "en" : "Splice iterator mismatch"
      },
      "description" : {
        "en" : "Using iterator from the wrong container as argument to the splice method"
      },
      "local_effect" : {
        "en" : "Undefined behavior may result; the program may crash or subtly misbehave."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "splice_iterator_mismatch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "mismatched_iterator",
      "subtype" : "splice_iterator_mismatch",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Splice iterator mismatch"
      },
      "description" : {
        "en" : "Using iterator from the wrong container as argument to the splice method"
      },
      "local_effect" : {
        "en" : "Undefined behavior may result; the program may crash or subtly misbehave."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "splice_iterator_mismatch",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "mismatched_iterator",
      "subtype" : "wrong_container",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Iterator container mismatch"
      },
      "description" : {
        "en" : "Using iterator from one container in operations on another container"
      },
      "local_effect" : {
        "en" : "Undefined behavior may result; the program may crash or subtly misbehave."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "mismatched_iterator",
      "subtype" : "wrong_container",
      "code-language" : "cuda",
      "name" : {
        "en" : "Iterator container mismatch"
      },
      "description" : {
        "en" : "Using iterator from one container in operations on another container"
      },
      "local_effect" : {
        "en" : "Undefined behavior may result; the program may crash or subtly misbehave."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "mismatched_iterator",
      "subtype" : "wrong_container",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Iterator container mismatch"
      },
      "description" : {
        "en" : "Using iterator from one container in operations on another container"
      },
      "local_effect" : {
        "en" : "Undefined behavior may result; the program may crash or subtly misbehave."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "missing_authz",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Missing authorization check"
      },
      "description" : {
        "en" : "Calling a method that performs a sensitive action without first checking authorization, as is done elsewhere."
      },
      "local_effect" : {
        "en" : "Missing or insufficient authorization may permit unintended users to perform actions or access sensitive data for which they do not have permission."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 285,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 228
      }
    },
    {
      "type" : "missing_authz",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Missing authorization check"
      },
      "description" : {
        "en" : "Calling a method that performs a sensitive action without first checking authorization, as is done elsewhere."
      },
      "local_effect" : {
        "en" : "Missing or insufficient authorization may permit unintended users to perform actions or access sensitive data for which they do not have permission."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 285,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 228
      }
    },
    {
      "type" : "missing_authz",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Missing authorization check"
      },
      "description" : {
        "en" : "Calling a method that performs a sensitive action without first checking authorization, as is done elsewhere."
      },
      "local_effect" : {
        "en" : "Missing or insufficient authorization may permit unintended users to perform actions or access sensitive data for which they do not have permission."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 285,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 228
      }
    },
    {
      "type" : "missing_authz",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Missing authorization check"
      },
      "description" : {
        "en" : "Calling a method that performs a sensitive action without first checking authorization, as is done elsewhere."
      },
      "local_effect" : {
        "en" : "Missing or insufficient authorization may permit unintended users to perform actions or access sensitive data for which they do not have permission."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 285,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 228
      }
    },
    {
      "type" : "missing_authz",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Missing authorization check"
      },
      "description" : {
        "en" : "Calling a method that performs a sensitive action without first checking authorization, as is done elsewhere."
      },
      "local_effect" : {
        "en" : "Missing or insufficient authorization may permit unintended users to perform actions or access sensitive data for which they do not have permission."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 285,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 228
      }
    },
    {
      "type" : "missing_authz",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Missing authorization check"
      },
      "description" : {
        "en" : "Calling a method that performs a sensitive action without first checking authorization, as is done elsewhere."
      },
      "local_effect" : {
        "en" : "Missing or insufficient authorization may permit unintended users to perform actions or access sensitive data for which they do not have permission."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 285,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 228
      }
    },
    {
      "type" : "missing_authz",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Missing authorization check"
      },
      "description" : {
        "en" : "Calling a method that performs a sensitive action without first checking authorization, as is done elsewhere."
      },
      "local_effect" : {
        "en" : "Missing or insufficient authorization may permit unintended users to perform actions or access sensitive data for which they do not have permission."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 285,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 228
      }
    },
    {
      "type" : "missing_authz",
      "subtype" : "test",
      "code-language" : "c#",
      "name" : {
        "en" : "Test"
      },
      "description" : {
        "en" : "Test"
      },
      "local_effect" : {
        "en" : "Test"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "test",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 228
      }
    },
    {
      "type" : "missing_authz",
      "subtype" : "test",
      "code-language" : "java",
      "name" : {
        "en" : "Test"
      },
      "description" : {
        "en" : "Test"
      },
      "local_effect" : {
        "en" : "Test"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "test",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 228
      }
    },
    {
      "type" : "missing_authz",
      "subtype" : "test",
      "code-language" : "javascript",
      "name" : {
        "en" : "Test"
      },
      "description" : {
        "en" : "Test"
      },
      "local_effect" : {
        "en" : "Test"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "test",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 228
      }
    },
    {
      "type" : "missing_authz",
      "subtype" : "test",
      "code-language" : "php",
      "name" : {
        "en" : "Test"
      },
      "description" : {
        "en" : "Test"
      },
      "local_effect" : {
        "en" : "Test"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "test",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 228
      }
    },
    {
      "type" : "missing_authz",
      "subtype" : "test",
      "code-language" : "python",
      "name" : {
        "en" : "Test"
      },
      "description" : {
        "en" : "Test"
      },
      "local_effect" : {
        "en" : "Test"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "test",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 228
      }
    },
    {
      "type" : "missing_authz",
      "subtype" : "test",
      "code-language" : "typescript",
      "name" : {
        "en" : "Test"
      },
      "description" : {
        "en" : "Test"
      },
      "local_effect" : {
        "en" : "Test"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "test",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 228
      }
    },
    {
      "type" : "missing_authz",
      "subtype" : "test",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Test"
      },
      "description" : {
        "en" : "Test"
      },
      "local_effect" : {
        "en" : "Test"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "test",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 228
      }
    },
    {
      "type" : "missing_break",
      "subtype" : "logic_error",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Missing break in switch"
      },
      "description" : {
        "en" : "Missing break statement between cases in switch statement"
      },
      "local_effect" : {
        "en" : "Execution falls through to the next case statement or default; this might indicate a common typo."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 484,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 969
      }
    },
    {
      "type" : "missing_break",
      "subtype" : "logic_error",
      "code-language" : "cuda",
      "name" : {
        "en" : "Missing break in switch"
      },
      "description" : {
        "en" : "Missing break statement between cases in switch statement"
      },
      "local_effect" : {
        "en" : "Execution falls through to the next case statement or default; this might indicate a common typo."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 484,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 969
      }
    },
    {
      "type" : "missing_break",
      "subtype" : "logic_error",
      "code-language" : "java",
      "name" : {
        "en" : "Missing break in switch"
      },
      "description" : {
        "en" : "Missing break statement between cases in switch statement"
      },
      "local_effect" : {
        "en" : "Execution falls through to the next case statement or default; this might indicate a common typo."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 484,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 969
      }
    },
    {
      "type" : "missing_break",
      "subtype" : "logic_error",
      "code-language" : "javascript",
      "name" : {
        "en" : "Missing break in switch"
      },
      "description" : {
        "en" : "Missing break statement between cases in switch statement"
      },
      "local_effect" : {
        "en" : "Execution falls through to the next case statement or default; this might indicate a common typo."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 484,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 969
      }
    },
    {
      "type" : "missing_break",
      "subtype" : "logic_error",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Missing break in switch"
      },
      "description" : {
        "en" : "Missing break statement between cases in switch statement"
      },
      "local_effect" : {
        "en" : "Execution falls through to the next case statement or default; this might indicate a common typo."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 484,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 969
      }
    },
    {
      "type" : "missing_break",
      "subtype" : "logic_error",
      "code-language" : "php",
      "name" : {
        "en" : "Missing break in switch"
      },
      "description" : {
        "en" : "Missing break statement between cases in switch statement"
      },
      "local_effect" : {
        "en" : "Execution falls through to the next case statement or default; this might indicate a common typo."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 484,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 969
      }
    },
    {
      "type" : "missing_break",
      "subtype" : "logic_error",
      "code-language" : "typescript",
      "name" : {
        "en" : "Missing break in switch"
      },
      "description" : {
        "en" : "Missing break statement between cases in switch statement"
      },
      "local_effect" : {
        "en" : "Execution falls through to the next case statement or default; this might indicate a common typo."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 484,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 969
      }
    },
    {
      "type" : "missing_comma",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Missing comma in a string array initialization"
      },
      "description" : {
        "en" : "A comma is suspiciously missing between lines in a string array initialization."
      },
      "local_effect" : {
        "en" : "An unexpected concatenated string or overrun."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1287
      }
    },
    {
      "type" : "missing_comma",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Missing comma in a string array initialization"
      },
      "description" : {
        "en" : "A comma is suspiciously missing between lines in a string array initialization."
      },
      "local_effect" : {
        "en" : "An unexpected concatenated string or overrun."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1287
      }
    },
    {
      "type" : "missing_comma",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Missing comma in a string array initialization"
      },
      "description" : {
        "en" : "A comma is suspiciously missing between lines in a string array initialization."
      },
      "local_effect" : {
        "en" : "An unexpected concatenated string or overrun."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1287
      }
    },
    {
      "type" : "missing_custom_error_page",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Missing custom error page"
      },
      "description" : {
        "en" : "When a custom error page is not provided, ASP.NET displays detailed information about errors."
      },
      "local_effect" : {
        "en" : "The default error page leaks sensitive information to potential attackers, including server details, exception messages, a stack trace, and source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 12,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 539
      }
    },
    {
      "type" : "missing_custom_error_page",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Missing custom error page"
      },
      "description" : {
        "en" : "When a custom error page is not provided, ASP.NET displays detailed information about errors."
      },
      "local_effect" : {
        "en" : "The default error page leaks sensitive information to potential attackers, including server details, exception messages, a stack trace, and source code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 12,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 539
      }
    },
    {
      "type" : "missing_http_only_for_cookie",
      "subtype" : "asp.net",
      "code-language" : "c#",
      "name" : {
        "en" : "Missing HttpOnly in cookies"
      },
      "description" : {
        "en" : "Cookie data is vulnerable to cross-site scripting attacks, and sensitive information, such as session identifiers, could be leaked to a third party."
      },
      "local_effect" : {
        "en" : "By enabling the HttpOnly attribute in the response header, modern browsers will disallow script access to cookie data. The cookie is still sent when the user visits a valid address, but any malicious code will be unable to transmit the cookie data back to the attacker's computer or web site."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 1004,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1
      }
    },
    {
      "type" : "missing_iframe_sandbox",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Missing iframe sandbox for remote site"
      },
      "description" : {
        "en" : "A remote website is loaded in an iframe without any sandbox."
      },
      "local_effect" : {
        "en" : "An attacker may break out of the iframe and mount a Clickjacking or Phishing attack."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 1021,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 52
      }
    },
    {
      "type" : "missing_iframe_sandbox",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Missing iframe sandbox for remote site"
      },
      "description" : {
        "en" : "A remote website is loaded in an iframe without any sandbox."
      },
      "local_effect" : {
        "en" : "An attacker may break out of the iframe and mount a Clickjacking or Phishing attack."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 1021,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 52
      }
    },
    {
      "type" : "missing_move_assignment",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Missing move assignment operator"
      },
      "description" : {
        "en" : "Class lacks a user-written move assignment operator"
      },
      "local_effect" : {
        "en" : "This class does not have a user-written move assignment operator and its copy assignment operator is found to be applied to rvalue(s), which can be moved to possibly enhance program performance had the move assignment operator been in place."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact quality",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1282
      }
    },
    {
      "type" : "missing_move_assignment",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Missing move assignment operator"
      },
      "description" : {
        "en" : "Class lacks a user-written move assignment operator"
      },
      "local_effect" : {
        "en" : "This class does not have a user-written move assignment operator and its copy assignment operator is found to be applied to rvalue(s), which can be moved to possibly enhance program performance had the move assignment operator been in place."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact quality",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1282
      }
    },
    {
      "type" : "missing_move_assignment",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Missing move assignment operator"
      },
      "description" : {
        "en" : "Class lacks a user-written move assignment operator"
      },
      "local_effect" : {
        "en" : "This class does not have a user-written move assignment operator and its copy assignment operator is found to be applied to rvalue(s), which can be moved to possibly enhance program performance had the move assignment operator been in place."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact quality",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1282
      }
    },
    {
      "type" : "missing_restore",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "missing_restore",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "missing_restore",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "missing_restore",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "missing_restore",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "missing_restore",
      "subtype" : "likely",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "likely",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "missing_restore",
      "subtype" : "likely",
      "code-language" : "c#",
      "name" : {
        "en" : "Failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "likely",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "missing_restore",
      "subtype" : "likely",
      "code-language" : "cuda",
      "name" : {
        "en" : "Failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "likely",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "missing_restore",
      "subtype" : "likely",
      "code-language" : "java",
      "name" : {
        "en" : "Failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "likely",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "missing_restore",
      "subtype" : "likely",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "likely",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "missing_restore",
      "subtype" : "possible",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Possible failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then possibly intending to restore it to its original state but not doing so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then possibly intending to restore it to the expected value but not doing so along a path.  Such code is only incorrect if the intent really was to restore along all paths."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 573,
        "impact" : "Low",
        "subcategory" : "possible",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "missing_restore",
      "subtype" : "possible",
      "code-language" : "c#",
      "name" : {
        "en" : "Possible failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then possibly intending to restore it to its original state but not doing so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then possibly intending to restore it to the expected value but not doing so along a path.  Such code is only incorrect if the intent really was to restore along all paths."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 573,
        "impact" : "Low",
        "subcategory" : "possible",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "missing_restore",
      "subtype" : "possible",
      "code-language" : "cuda",
      "name" : {
        "en" : "Possible failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then possibly intending to restore it to its original state but not doing so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then possibly intending to restore it to the expected value but not doing so along a path.  Such code is only incorrect if the intent really was to restore along all paths."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 573,
        "impact" : "Low",
        "subcategory" : "possible",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "missing_restore",
      "subtype" : "possible",
      "code-language" : "java",
      "name" : {
        "en" : "Possible failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then possibly intending to restore it to its original state but not doing so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then possibly intending to restore it to the expected value but not doing so along a path.  Such code is only incorrect if the intent really was to restore along all paths."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 573,
        "impact" : "Low",
        "subcategory" : "possible",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "missing_restore",
      "subtype" : "possible",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Possible failure to restore non-local value"
      },
      "description" : {
        "en" : "Handles classes of flow where a function is either saving some external value, modifying the external value, and then possibly intending to restore it to its original state but not doing so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then possibly intending to restore it to the expected value but not doing so along a path.  Such code is only incorrect if the intent really was to restore along all paths."
      },
      "local_effect" : {
        "en" : "Failing to restore original value of some external value could compromise integrity of a subsystem."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Possible Control flow issues",
        "cweCategory" : 573,
        "impact" : "Low",
        "subcategory" : "possible",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1390
      }
    },
    {
      "type" : "missing_return_statement",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Missing return statement"
      },
      "description" : {
        "en" : "Function that returns non-void is missing a return value"
      },
      "local_effect" : {
        "en" : "The return value will be taken from whatever happens to be on the stack, likely causing incorrect computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Uninitialized variables",
        "cweCategory" : 710,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "missing_return_statement",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Missing return statement"
      },
      "description" : {
        "en" : "Function that returns non-void is missing a return value"
      },
      "local_effect" : {
        "en" : "The return value will be taken from whatever happens to be on the stack, likely causing incorrect computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Uninitialized variables",
        "cweCategory" : 710,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "missing_return_statement",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Missing return statement"
      },
      "description" : {
        "en" : "Function that returns non-void is missing a return value"
      },
      "local_effect" : {
        "en" : "The return value will be taken from whatever happens to be on the stack, likely causing incorrect computation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Uninitialized variables",
        "cweCategory" : 710,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "mobile_id_misuse",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Misuse of a mobile device identifier"
      },
      "description" : {
        "en" : "A mobile device identifier is used in an authentication scheme."
      },
      "local_effect" : {
        "en" : "An attacker may predict the mobile device identifier, authenticate, and gain access to data and services."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 330,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1371
      }
    },
    {
      "type" : "mobile_id_misuse",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Misuse of a mobile device identifier"
      },
      "description" : {
        "en" : "A mobile device identifier is used in an authentication scheme."
      },
      "local_effect" : {
        "en" : "An attacker may predict the mobile device identifier, authenticate, and gain access to data and services."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 330,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1371
      }
    },
    {
      "type" : "multiple_init_smart_ptrs",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Different smart pointers managing same raw pointer"
      },
      "description" : {
        "en" : "Same raw pointer is used to initialize or reset two or more different smart pointers."
      },
      "local_effect" : {
        "en" : "This may cause a crash, as different smart pointers may try to delete the raw pointer twice."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 1341,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 660
      }
    },
    {
      "type" : "multiple_init_smart_ptrs",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Different smart pointers managing same raw pointer"
      },
      "description" : {
        "en" : "Same raw pointer is used to initialize or reset two or more different smart pointers."
      },
      "local_effect" : {
        "en" : "This may cause a crash, as different smart pointers may try to delete the raw pointer twice."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 1341,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 660
      }
    },
    {
      "type" : "multiple_init_smart_ptrs",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Different smart pointers managing same raw pointer"
      },
      "description" : {
        "en" : "Same raw pointer is used to initialize or reset two or more different smart pointers."
      },
      "local_effect" : {
        "en" : "This may cause a crash, as different smart pointers may try to delete the raw pointer twice."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 1341,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 660
      }
    },
    {
      "type" : "multiple_return_statements",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Multiple return statements"
      },
      "description" : {
        "en" : "Multiple return statements violates local coding standard"
      },
      "local_effect" : {
        "en" : "More than one function return site may make the function harder to maintain."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 710,
        "impact" : "Low",
        "subcategory" : "multiple_returns",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "multiple_return_statements",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Multiple return statements"
      },
      "description" : {
        "en" : "Multiple return statements violates local coding standard"
      },
      "local_effect" : {
        "en" : "More than one function return site may make the function harder to maintain."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 710,
        "impact" : "Low",
        "subcategory" : "multiple_returns",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "multiple_return_statements",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Multiple return statements"
      },
      "description" : {
        "en" : "Multiple return statements violates local coding standard"
      },
      "local_effect" : {
        "en" : "More than one function return site may make the function harder to maintain."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 710,
        "impact" : "Low",
        "subcategory" : "multiple_returns",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "negative_returns",
      "subtype" : "array_index_read",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Negative array index read"
      },
      "description" : {
        "en" : "Negative value used to index an array in a read operation"
      },
      "local_effect" : {
        "en" : "A memory location at a negative offset from the beginning of the array will be read, resulting in incorrect values."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 129,
        "impact" : "High",
        "subcategory" : "array_index_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 568
      }
    },
    {
      "type" : "negative_returns",
      "subtype" : "array_index_read",
      "code-language" : "cuda",
      "name" : {
        "en" : "Negative array index read"
      },
      "description" : {
        "en" : "Negative value used to index an array in a read operation"
      },
      "local_effect" : {
        "en" : "A memory location at a negative offset from the beginning of the array will be read, resulting in incorrect values."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 129,
        "impact" : "High",
        "subcategory" : "array_index_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 568
      }
    },
    {
      "type" : "negative_returns",
      "subtype" : "array_index_read",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Negative array index read"
      },
      "description" : {
        "en" : "Negative value used to index an array in a read operation"
      },
      "local_effect" : {
        "en" : "A memory location at a negative offset from the beginning of the array will be read, resulting in incorrect values."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 129,
        "impact" : "High",
        "subcategory" : "array_index_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 568
      }
    },
    {
      "type" : "negative_returns",
      "subtype" : "array_index_write",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Negative array index write"
      },
      "description" : {
        "en" : "Negative value used to index an array in a write operation"
      },
      "local_effect" : {
        "en" : "A memory location at a negative offset from the beginning of the array will be written, likely causing a crash later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 129,
        "impact" : "High",
        "subcategory" : "array_index_write",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "negative_returns",
      "subtype" : "array_index_write",
      "code-language" : "cuda",
      "name" : {
        "en" : "Negative array index write"
      },
      "description" : {
        "en" : "Negative value used to index an array in a write operation"
      },
      "local_effect" : {
        "en" : "A memory location at a negative offset from the beginning of the array will be written, likely causing a crash later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 129,
        "impact" : "High",
        "subcategory" : "array_index_write",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "negative_returns",
      "subtype" : "array_index_write",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Negative array index write"
      },
      "description" : {
        "en" : "Negative value used to index an array in a write operation"
      },
      "local_effect" : {
        "en" : "A memory location at a negative offset from the beginning of the array will be written, likely causing a crash later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 129,
        "impact" : "High",
        "subcategory" : "array_index_write",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "negative_returns",
      "subtype" : "critical_argument",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Argument cannot be negative"
      },
      "description" : {
        "en" : "Negative value used as argument to a function expecting a positive value (for example, size of buffer or allocation)"
      },
      "local_effect" : {
        "en" : "The negative argument will be interpreted as a very large unsigned value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 687,
        "impact" : "Medium",
        "subcategory" : "critical_argument",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1137
      }
    },
    {
      "type" : "negative_returns",
      "subtype" : "critical_argument",
      "code-language" : "cuda",
      "name" : {
        "en" : "Argument cannot be negative"
      },
      "description" : {
        "en" : "Negative value used as argument to a function expecting a positive value (for example, size of buffer or allocation)"
      },
      "local_effect" : {
        "en" : "The negative argument will be interpreted as a very large unsigned value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 687,
        "impact" : "Medium",
        "subcategory" : "critical_argument",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1137
      }
    },
    {
      "type" : "negative_returns",
      "subtype" : "critical_argument",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Argument cannot be negative"
      },
      "description" : {
        "en" : "Negative value used as argument to a function expecting a positive value (for example, size of buffer or allocation)"
      },
      "local_effect" : {
        "en" : "The negative argument will be interpreted as a very large unsigned value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 687,
        "impact" : "Medium",
        "subcategory" : "critical_argument",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1137
      }
    },
    {
      "type" : "negative_returns",
      "subtype" : "loop_bound",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Negative loop bound"
      },
      "description" : {
        "en" : "Negative value used as a loop upper bound"
      },
      "local_effect" : {
        "en" : "Loop may run for a long time or not at all."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 606,
        "impact" : "Medium",
        "subcategory" : "loop_bound",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1073
      }
    },
    {
      "type" : "negative_returns",
      "subtype" : "loop_bound",
      "code-language" : "cuda",
      "name" : {
        "en" : "Negative loop bound"
      },
      "description" : {
        "en" : "Negative value used as a loop upper bound"
      },
      "local_effect" : {
        "en" : "Loop may run for a long time or not at all."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 606,
        "impact" : "Medium",
        "subcategory" : "loop_bound",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1073
      }
    },
    {
      "type" : "negative_returns",
      "subtype" : "loop_bound",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Negative loop bound"
      },
      "description" : {
        "en" : "Negative value used as a loop upper bound"
      },
      "local_effect" : {
        "en" : "Loop may run for a long time or not at all."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Program hangs",
        "cweCategory" : 606,
        "impact" : "Medium",
        "subcategory" : "loop_bound",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1073
      }
    },
    {
      "type" : "negative_returns",
      "subtype" : "sensitive",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Improper use of negative value"
      },
      "description" : {
        "en" : "Negative value can be returned from function is not being checked before being used improperly"
      },
      "local_effect" : {
        "en" : "The negative value may be unexpected by later operations, causing incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 394,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 889
      }
    },
    {
      "type" : "negative_returns",
      "subtype" : "sensitive",
      "code-language" : "cuda",
      "name" : {
        "en" : "Improper use of negative value"
      },
      "description" : {
        "en" : "Negative value can be returned from function is not being checked before being used improperly"
      },
      "local_effect" : {
        "en" : "The negative value may be unexpected by later operations, causing incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 394,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 889
      }
    },
    {
      "type" : "negative_returns",
      "subtype" : "sensitive",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Improper use of negative value"
      },
      "description" : {
        "en" : "Negative value can be returned from function is not being checked before being used improperly"
      },
      "local_effect" : {
        "en" : "The negative value may be unexpected by later operations, causing incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 394,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 889
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "bad_indentation",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Indentation does not match nesting level"
      },
      "description" : {
        "en" : "The indentation of this code does not reflect its syntactic nesting level."
      },
      "local_effect" : {
        "en" : "Readers of this code might be misled as to its structure."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 483,
        "impact" : "Low",
        "subcategory" : "bad_indentation",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "bad_indentation",
      "code-language" : "c#",
      "name" : {
        "en" : "Indentation does not match nesting level"
      },
      "description" : {
        "en" : "The indentation of this code does not reflect its syntactic nesting level."
      },
      "local_effect" : {
        "en" : "Readers of this code might be misled as to its structure."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "bad_indentation",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "bad_indentation",
      "code-language" : "cuda",
      "name" : {
        "en" : "Indentation does not match nesting level"
      },
      "description" : {
        "en" : "The indentation of this code does not reflect its syntactic nesting level."
      },
      "local_effect" : {
        "en" : "Readers of this code might be misled as to its structure."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 483,
        "impact" : "Low",
        "subcategory" : "bad_indentation",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "bad_indentation",
      "code-language" : "java",
      "name" : {
        "en" : "Indentation does not match nesting level"
      },
      "description" : {
        "en" : "The indentation of this code does not reflect its syntactic nesting level."
      },
      "local_effect" : {
        "en" : "Readers of this code might be misled as to its structure."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 483,
        "impact" : "Low",
        "subcategory" : "bad_indentation",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "bad_indentation",
      "code-language" : "javascript",
      "name" : {
        "en" : "Indentation does not match nesting level"
      },
      "description" : {
        "en" : "The indentation of this code does not reflect its syntactic nesting level."
      },
      "local_effect" : {
        "en" : "Readers of this code might be misled as to its structure."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 483,
        "impact" : "Low",
        "subcategory" : "bad_indentation",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "bad_indentation",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Indentation does not match nesting level"
      },
      "description" : {
        "en" : "The indentation of this code does not reflect its syntactic nesting level."
      },
      "local_effect" : {
        "en" : "Readers of this code might be misled as to its structure."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 483,
        "impact" : "Low",
        "subcategory" : "bad_indentation",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "bad_indentation",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Indentation does not match nesting level"
      },
      "description" : {
        "en" : "The indentation of this code does not reflect its syntactic nesting level."
      },
      "local_effect" : {
        "en" : "Readers of this code might be misled as to its structure."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 483,
        "impact" : "Low",
        "subcategory" : "bad_indentation",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "bad_indentation",
      "code-language" : "php",
      "name" : {
        "en" : "Indentation does not match nesting level"
      },
      "description" : {
        "en" : "The indentation of this code does not reflect its syntactic nesting level."
      },
      "local_effect" : {
        "en" : "Readers of this code might be misled as to its structure."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 483,
        "impact" : "Low",
        "subcategory" : "bad_indentation",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "bad_indentation",
      "code-language" : "scala",
      "name" : {
        "en" : "Indentation does not match nesting level"
      },
      "description" : {
        "en" : "The indentation of this code does not reflect its syntactic nesting level."
      },
      "local_effect" : {
        "en" : "Readers of this code might be misled as to its structure."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 483,
        "impact" : "Low",
        "subcategory" : "bad_indentation",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "bad_indentation",
      "code-language" : "typescript",
      "name" : {
        "en" : "Indentation does not match nesting level"
      },
      "description" : {
        "en" : "The indentation of this code does not reflect its syntactic nesting level."
      },
      "local_effect" : {
        "en" : "Readers of this code might be misled as to its structure."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 483,
        "impact" : "Low",
        "subcategory" : "bad_indentation",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "logic_error",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Nesting level does not match indentation"
      },
      "description" : {
        "en" : "The indentation of this code suggests it is nested when it is not."
      },
      "local_effect" : {
        "en" : "Code that is meant to be executed conditionally may be executed unconditionally"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 483,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "logic_error",
      "code-language" : "c#",
      "name" : {
        "en" : "Nesting level does not match indentation"
      },
      "description" : {
        "en" : "The indentation of this code suggests it is nested when it is not."
      },
      "local_effect" : {
        "en" : "Code that is meant to be executed conditionally may be executed unconditionally."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "logic_error",
      "code-language" : "cuda",
      "name" : {
        "en" : "Nesting level does not match indentation"
      },
      "description" : {
        "en" : "The indentation of this code suggests it is nested when it is not."
      },
      "local_effect" : {
        "en" : "Code that is meant to be executed conditionally may be executed unconditionally"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 483,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "logic_error",
      "code-language" : "java",
      "name" : {
        "en" : "Nesting level does not match indentation"
      },
      "description" : {
        "en" : "The indentation of this code suggests it is nested when it is not."
      },
      "local_effect" : {
        "en" : "Code that is meant to be executed conditionally may be executed unconditionally."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 483,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "logic_error",
      "code-language" : "javascript",
      "name" : {
        "en" : "Nesting level does not match indentation"
      },
      "description" : {
        "en" : "The indentation of this code suggests it is nested when it is not."
      },
      "local_effect" : {
        "en" : "Code that is meant to be executed conditionally may be executed unconditionally."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 483,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "logic_error",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Nesting level does not match indentation"
      },
      "description" : {
        "en" : "The indentation of this code suggests it is nested when it is not."
      },
      "local_effect" : {
        "en" : "Code that is meant to be executed conditionally may be executed unconditionally."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 483,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "logic_error",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Nesting level does not match indentation"
      },
      "description" : {
        "en" : "The indentation of this code suggests it is nested when it is not."
      },
      "local_effect" : {
        "en" : "Code that is meant to be executed conditionally may be executed unconditionally"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 483,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "logic_error",
      "code-language" : "php",
      "name" : {
        "en" : "Nesting level does not match indentation"
      },
      "description" : {
        "en" : "The indentation of this code suggests it is nested when it is not."
      },
      "local_effect" : {
        "en" : "Code that is meant to be executed conditionally may be executed unconditionally."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 483,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "logic_error",
      "code-language" : "scala",
      "name" : {
        "en" : "Nesting level does not match indentation"
      },
      "description" : {
        "en" : "The indentation of this code suggests it is nested when it is not."
      },
      "local_effect" : {
        "en" : "Code that is meant to be executed conditionally may be executed unconditionally."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 483,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "nesting_indent_mismatch",
      "subtype" : "logic_error",
      "code-language" : "typescript",
      "name" : {
        "en" : "Nesting level does not match indentation"
      },
      "description" : {
        "en" : "The indentation of this code suggests it is nested when it is not."
      },
      "local_effect" : {
        "en" : "Code that is meant to be executed conditionally may be executed unconditionally."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 483,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 968
      }
    },
    {
      "type" : "no_effect",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Expression with no effect"
      },
      "description" : {
        "en" : "An expression is useless because it has no side effects and its result is ignored."
      },
      "local_effect" : {
        "en" : "Perhaps the code was intended to affect the behavior of the program, but it does not."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "no_effect",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Expression with no effect"
      },
      "description" : {
        "en" : "An expression is useless because it has no side effects and its result is ignored."
      },
      "local_effect" : {
        "en" : "Perhaps the code was intended to affect the behavior of the program, but it does not."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "no_effect",
      "subtype" : null,
      "code-language" : "ruby",
      "name" : {
        "en" : "Expression with no effect"
      },
      "description" : {
        "en" : "An expression is useless because it has no side effects and its result is ignored."
      },
      "local_effect" : {
        "en" : "Perhaps the code was intended to affect the behavior of the program, but it does not."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "no_effect",
      "subtype" : null,
      "code-language" : "scala",
      "name" : {
        "en" : "Expression with no effect"
      },
      "description" : {
        "en" : "An expression is useless because it has no side effects and its result is ignored."
      },
      "local_effect" : {
        "en" : "Perhaps the code was intended to affect the behavior of the program, but it does not."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "no_effect",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Expression with no effect"
      },
      "description" : {
        "en" : "An expression is useless because it has no side effects and its result is ignored."
      },
      "local_effect" : {
        "en" : "Perhaps the code was intended to affect the behavior of the program, but it does not."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "bad_memset_zero_size",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Memset buffer size of 0"
      },
      "description" : {
        "en" : "A memset buffer size of 0 may indicate confusing the size and fill parameters"
      },
      "local_effect" : {
        "en" : "The buffer will not be modified; no part of the buffer will be cleared or assigned the fill byte value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 456,
        "impact" : "High",
        "subcategory" : "bad_memset_zero_size",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "bad_memset_zero_size",
      "code-language" : "cuda",
      "name" : {
        "en" : "Memset buffer size of 0"
      },
      "description" : {
        "en" : "A memset buffer size of 0 may indicate confusing the size and fill parameters"
      },
      "local_effect" : {
        "en" : "The buffer will not be modified; no part of the buffer will be cleared or assigned the fill byte value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 456,
        "impact" : "High",
        "subcategory" : "bad_memset_zero_size",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "bad_memset_zero_size",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Memset buffer size of 0"
      },
      "description" : {
        "en" : "A memset buffer size of 0 may indicate confusing the size and fill parameters"
      },
      "local_effect" : {
        "en" : "The buffer will not be modified; no part of the buffer will be cleared or assigned the fill byte value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 456,
        "impact" : "High",
        "subcategory" : "bad_memset_zero_size",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "extra_comma",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Misused comma operator"
      },
      "description" : {
        "en" : "Comma operator has a left sub-expression with no side-effects"
      },
      "local_effect" : {
        "en" : "The left hand side of the comma will be evaluated and then the value discarded."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "extra_comma",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "extra_comma",
      "code-language" : "cuda",
      "name" : {
        "en" : "Misused comma operator"
      },
      "description" : {
        "en" : "Comma operator has a left sub-expression with no side-effects"
      },
      "local_effect" : {
        "en" : "The left hand side of the comma will be evaluated and then the value discarded."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "extra_comma",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "extra_comma",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Misused comma operator"
      },
      "description" : {
        "en" : "Comma operator has a left sub-expression with no side-effects"
      },
      "local_effect" : {
        "en" : "The left hand side of the comma will be evaluated and then the value discarded."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 480,
        "impact" : "Medium",
        "subcategory" : "extra_comma",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 965
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "incomplete_delete",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Incomplete delete"
      },
      "description" : {
        "en" : "Delete operator only applies to one argument in a comma expression, may cause memory leak"
      },
      "local_effect" : {
        "en" : "The right hand side of the comma expression will not be deleted, resulting in a memory leak."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 401,
        "impact" : "High",
        "subcategory" : "incomplete_delete",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 895
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "incomplete_delete",
      "code-language" : "cuda",
      "name" : {
        "en" : "Incomplete delete"
      },
      "description" : {
        "en" : "Delete operator only applies to one argument in a comma expression, may cause memory leak"
      },
      "local_effect" : {
        "en" : "The right hand side of the comma expression will not be deleted, resulting in a memory leak."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 401,
        "impact" : "High",
        "subcategory" : "incomplete_delete",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 895
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "incomplete_delete",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Incomplete delete"
      },
      "description" : {
        "en" : "Delete operator only applies to one argument in a comma expression, may cause memory leak"
      },
      "local_effect" : {
        "en" : "The right hand side of the comma expression will not be deleted, resulting in a memory leak."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 401,
        "impact" : "High",
        "subcategory" : "incomplete_delete",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 895
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "no_effect_deref",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Incorrect pointer increment"
      },
      "description" : {
        "en" : "Increment (or decrement) of pointer value, not the value pointed-to"
      },
      "local_effect" : {
        "en" : "The pointer may end up pointing outside the current memory buffer, while the value pointed-to will be unchanged."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 465,
        "impact" : "Medium",
        "subcategory" : "no_effect_deref",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "no_effect_deref",
      "code-language" : "cuda",
      "name" : {
        "en" : "Incorrect pointer increment"
      },
      "description" : {
        "en" : "Increment (or decrement) of pointer value, not the value pointed-to"
      },
      "local_effect" : {
        "en" : "The pointer may end up pointing outside the current memory buffer, while the value pointed-to will be unchanged."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 465,
        "impact" : "Medium",
        "subcategory" : "no_effect_deref",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "no_effect_deref",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Incorrect pointer increment"
      },
      "description" : {
        "en" : "Increment (or decrement) of pointer value, not the value pointed-to"
      },
      "local_effect" : {
        "en" : "The pointer may end up pointing outside the current memory buffer, while the value pointed-to will be unchanged."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 465,
        "impact" : "Medium",
        "subcategory" : "no_effect_deref",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "no_effect_test",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Test should be assignment"
      },
      "description" : {
        "en" : "A test that is an isolated statement with no effect is likely an intended assignment"
      },
      "local_effect" : {
        "en" : "The test will be executed and then discarded; no assignment will be performed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 482,
        "impact" : "Medium",
        "subcategory" : "no_effect_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 967
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "no_effect_test",
      "code-language" : "cuda",
      "name" : {
        "en" : "Test should be assignment"
      },
      "description" : {
        "en" : "A test that is an isolated statement with no effect is likely an intended assignment"
      },
      "local_effect" : {
        "en" : "The test will be executed and then discarded; no assignment will be performed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 482,
        "impact" : "Medium",
        "subcategory" : "no_effect_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 967
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "no_effect_test",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Test should be assignment"
      },
      "description" : {
        "en" : "A test that is an isolated statement with no effect is likely an intended assignment"
      },
      "local_effect" : {
        "en" : "The test will be executed and then discarded; no assignment will be performed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 482,
        "impact" : "Medium",
        "subcategory" : "no_effect_test",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 967
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "self_assign",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Self assignment"
      },
      "description" : {
        "en" : "Assignment of a variable or expression to itself has no effect"
      },
      "local_effect" : {
        "en" : "The variable's value will not change, so the assignment has no effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 665,
        "impact" : "Medium",
        "subcategory" : "self_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "self_assign",
      "code-language" : "cuda",
      "name" : {
        "en" : "Self assignment"
      },
      "description" : {
        "en" : "Assignment of a variable or expression to itself has no effect"
      },
      "local_effect" : {
        "en" : "The variable's value will not change, so the assignment has no effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 665,
        "impact" : "Medium",
        "subcategory" : "self_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "self_assign",
      "code-language" : "javascript",
      "name" : {
        "en" : "Self assignment"
      },
      "description" : {
        "en" : "Assignment of a variable or expression to itself has no effect"
      },
      "local_effect" : {
        "en" : "The variable's value will not change, so the assignment has no effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 665,
        "impact" : "Medium",
        "subcategory" : "self_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "self_assign",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Self assignment"
      },
      "description" : {
        "en" : "Assignment of a variable or expression to itself has no effect"
      },
      "local_effect" : {
        "en" : "The variable's value will not change, so the assignment has no effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 665,
        "impact" : "Medium",
        "subcategory" : "self_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "self_assign",
      "code-language" : "php",
      "name" : {
        "en" : "Self assignment"
      },
      "description" : {
        "en" : "Assignment of a variable or expression to itself has no effect"
      },
      "local_effect" : {
        "en" : "The variable's value will not change, so the assignment has no effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 665,
        "impact" : "Medium",
        "subcategory" : "self_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "self_assign",
      "code-language" : "ruby",
      "name" : {
        "en" : "Self assignment"
      },
      "description" : {
        "en" : "Assignment of a variable or expression to itself has no effect"
      },
      "local_effect" : {
        "en" : "The variable's value will not change, so the assignment has no effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 665,
        "impact" : "Medium",
        "subcategory" : "self_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "self_assign",
      "code-language" : "scala",
      "name" : {
        "en" : "Self assignment"
      },
      "description" : {
        "en" : "Assignment of a variable or expression to itself has no effect"
      },
      "local_effect" : {
        "en" : "The variable's value will not change, so the assignment has no effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 665,
        "impact" : "Medium",
        "subcategory" : "self_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "self_assign",
      "code-language" : "typescript",
      "name" : {
        "en" : "Self assignment"
      },
      "description" : {
        "en" : "Assignment of a variable or expression to itself has no effect"
      },
      "local_effect" : {
        "en" : "The variable's value will not change, so the assignment has no effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 665,
        "impact" : "Medium",
        "subcategory" : "self_assign",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1117
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "static_through_instance",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unnecessary instance object usage"
      },
      "description" : {
        "en" : "A static field or method is accessed using an instance object"
      },
      "local_effect" : {
        "en" : "An instance object is used to access a static field or method, which is unnecessary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "static_through_instance",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1442
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "static_through_instance",
      "code-language" : "cuda",
      "name" : {
        "en" : "Unnecessary instance object usage"
      },
      "description" : {
        "en" : "A static field or method is accessed using an instance object"
      },
      "local_effect" : {
        "en" : "An instance object is used to access a static field or method, which is unnecessary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "static_through_instance",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1442
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "static_through_instance",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Unnecessary instance object usage"
      },
      "description" : {
        "en" : "A static field or method is accessed using an instance object"
      },
      "local_effect" : {
        "en" : "An instance object is used to access a static field or method, which is unnecessary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Miscellaneous",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "static_through_instance",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1442
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "unsigned_compare",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unsigned compared against 0"
      },
      "description" : {
        "en" : "An unsigned value can never be less than 0"
      },
      "local_effect" : {
        "en" : "An unsigned value can never be negative, so this test will always evaluate the same way."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 570,
        "impact" : "Medium",
        "subcategory" : "unsigned_compare",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1040
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "unsigned_compare",
      "code-language" : "cuda",
      "name" : {
        "en" : "Unsigned compared against 0"
      },
      "description" : {
        "en" : "An unsigned value can never be less than 0"
      },
      "local_effect" : {
        "en" : "An unsigned value can never be negative, so this test will always evaluate the same way."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 570,
        "impact" : "Medium",
        "subcategory" : "unsigned_compare",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1040
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "unsigned_compare",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Unsigned compared against 0"
      },
      "description" : {
        "en" : "An unsigned value can never be less than 0"
      },
      "local_effect" : {
        "en" : "An unsigned value can never be negative, so this test will always evaluate the same way."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 570,
        "impact" : "Medium",
        "subcategory" : "unsigned_compare",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1040
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "unsigned_compare_macros",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Macro compares unsigned to 0"
      },
      "description" : {
        "en" : "An unsigned value can never be less than 0"
      },
      "local_effect" : {
        "en" : "An unsigned value can never be negative, so this test will always evaluate the same way."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 570,
        "impact" : "Medium",
        "subcategory" : "unsigned_compare_macros",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1040
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "unsigned_compare_macros",
      "code-language" : "cuda",
      "name" : {
        "en" : "Macro compares unsigned to 0"
      },
      "description" : {
        "en" : "An unsigned value can never be less than 0"
      },
      "local_effect" : {
        "en" : "An unsigned value can never be negative, so this test will always evaluate the same way."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 570,
        "impact" : "Medium",
        "subcategory" : "unsigned_compare_macros",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1040
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "unsigned_compare_macros",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Macro compares unsigned to 0"
      },
      "description" : {
        "en" : "An unsigned value can never be less than 0"
      },
      "local_effect" : {
        "en" : "An unsigned value can never be negative, so this test will always evaluate the same way."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 570,
        "impact" : "Medium",
        "subcategory" : "unsigned_compare_macros",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1040
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "unsigned_enums",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Enum compared against 0"
      },
      "description" : {
        "en" : "An enumeration value is usually not less than 0"
      },
      "local_effect" : {
        "en" : "No enumeration values are negative, so this test will always evaluate the same way."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 570,
        "impact" : "Medium",
        "subcategory" : "unsigned_enums",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1040
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "unsigned_enums",
      "code-language" : "cuda",
      "name" : {
        "en" : "Enum compared against 0"
      },
      "description" : {
        "en" : "An enumeration value is usually not less than 0"
      },
      "local_effect" : {
        "en" : "No enumeration values are negative, so this test will always evaluate the same way."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 570,
        "impact" : "Medium",
        "subcategory" : "unsigned_enums",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1040
      }
    },
    {
      "type" : "no_effect",
      "subtype" : "unsigned_enums",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Enum compared against 0"
      },
      "description" : {
        "en" : "An enumeration value is usually not less than 0"
      },
      "local_effect" : {
        "en" : "No enumeration values are negative, so this test will always evaluate the same way."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 570,
        "impact" : "Medium",
        "subcategory" : "unsigned_enums",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1040
      }
    },
    {
      "type" : "no_recheck_of_wait_condition_on_spurious_wake_up",
      "subtype" : "bad_check_of_wait_condition",
      "code-language" : "java",
      "name" : {
        "en" : "Data race condition"
      },
      "description" : {
        "en" : "A thread does not re-check its wait condition after waking up from a wait."
      },
      "local_effect" : {
        "en" : "This thread does not re-check the wait condition upon wakeup, which may cause it to continue prematurely."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "spurious_wakeup",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1284
      }
    },
    {
      "type" : "nosql_query_injection",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "NoSQL query injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into a NoSQL query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the NoSQL query, which may bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 943,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 329
      }
    },
    {
      "type" : "nosql_query_injection",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "NoSQL query injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into a NoSQL query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the NoSQL query, which may bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 943,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 329
      }
    },
    {
      "type" : "nosql_query_injection",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "NoSQL query injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into a NoSQL query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the NoSQL query, which may bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 943,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 329
      }
    },
    {
      "type" : "nosql_query_injection",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "NoSQL query injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into a NoSQL query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the NoSQL query, which may bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 943,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 329
      }
    },
    {
      "type" : "nosql_query_injection",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "NoSQL query injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into a NoSQL query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the NoSQL query, which may bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 943,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 329
      }
    },
    {
      "type" : "nosql_query_injection",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "NoSQL query injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into a NoSQL query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the NoSQL query, which may bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 943,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 329
      }
    },
    {
      "type" : "nosql_query_injection",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "NoSQL query injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into a NoSQL query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the NoSQL query, which may bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 943,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 329
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "before_null_check",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Dereference before null check"
      },
      "description" : {
        "en" : "All paths that lead to this null pointer comparison already dereference the pointer earlier"
      },
      "local_effect" : {
        "en" : "There may be a null pointer dereference, or else the comparison against null is unnecessary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "before_null_check",
      "code-language" : "cuda",
      "name" : {
        "en" : "Dereference before null check"
      },
      "description" : {
        "en" : "All paths that lead to this null pointer comparison already dereference the pointer earlier"
      },
      "local_effect" : {
        "en" : "There may be a null pointer dereference, or else the comparison against null is unnecessary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "before_null_check",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Dereference before null check"
      },
      "description" : {
        "en" : "All paths that lead to this null pointer comparison already dereference the pointer earlier"
      },
      "local_effect" : {
        "en" : "There may be a null pointer dereference, or else the comparison against null is unnecessary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "check_then_dereference",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Dereference after null check"
      },
      "description" : {
        "en" : "Pointer is checked against null but then dereferenced anyway"
      },
      "local_effect" : {
        "en" : "Either the check against null is unnecessary, or there may be a null pointer dereference."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "check_then_dereference",
      "code-language" : "cuda",
      "name" : {
        "en" : "Dereference after null check"
      },
      "description" : {
        "en" : "Pointer is checked against null but then dereferenced anyway"
      },
      "local_effect" : {
        "en" : "Either the check against null is unnecessary, or there may be a null pointer dereference."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "check_then_dereference",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Dereference after null check"
      },
      "description" : {
        "en" : "Pointer is checked against null but then dereferenced anyway"
      },
      "local_effect" : {
        "en" : "Either the check against null is unnecessary, or there may be a null pointer dereference."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "constant",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null value"
      },
      "local_effect" : {
        "en" : "A null pointer dereference will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "constant",
      "code-language" : "cuda",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null value"
      },
      "local_effect" : {
        "en" : "A null pointer dereference will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "constant",
      "code-language" : "go",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null (nil) value"
      },
      "local_effect" : {
        "en" : "A null pointer exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "constant",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null value"
      },
      "local_effect" : {
        "en" : "A null pointer dereference will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "dynamic_cast",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unchecked dynamic_cast"
      },
      "description" : {
        "en" : "Dynamic_cast may fail and return null if the type cast is incompatible"
      },
      "local_effect" : {
        "en" : "If the dynamic_cast fails, a null pointer dereference will occur; if the dynamic_cast cannot fail, using static_cast instead offers better performance."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "dynamic_cast",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "dynamic_cast",
      "code-language" : "cuda",
      "name" : {
        "en" : "Unchecked dynamic_cast"
      },
      "description" : {
        "en" : "Dynamic_cast may fail and return null if the type cast is incompatible"
      },
      "local_effect" : {
        "en" : "If the dynamic_cast fails, a null pointer dereference will occur; if the dynamic_cast cannot fail, using static_cast instead offers better performance."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "dynamic_cast",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "dynamic_cast",
      "code-language" : "go",
      "name" : {
        "en" : "Unchecked type assertion"
      },
      "description" : {
        "en" : "A failing type assertion can produce a nil value"
      },
      "local_effect" : {
        "en" : "If the type assertion fails, a nil dereference will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "dynamic_cast",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "dynamic_cast",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unchecked dynamic_cast"
      },
      "description" : {
        "en" : "Nullable (safe) cast may return null if the type cast is incompatible"
      },
      "local_effect" : {
        "en" : "If the nullable cast fails, a null pointer dereference will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "dynamic_cast",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "dynamic_cast",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Unchecked dynamic_cast"
      },
      "description" : {
        "en" : "Dynamic_cast may fail and return null if the type cast is incompatible"
      },
      "local_effect" : {
        "en" : "If the dynamic_cast fails, a null pointer dereference will occur; if the dynamic_cast cannot fail, using static_cast instead offers better performance."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "dynamic_cast",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "inferred_null_return_value",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Dereference null return (stat)"
      },
      "description" : {
        "en" : "Return value of function, which is statistically inferred to return null, but with no source code available, is dereferenced"
      },
      "local_effect" : {
        "en" : "If the function can actually return null, then a null pointer dereference would occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "unimpl",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "inferred_null_return_value",
      "code-language" : "cuda",
      "name" : {
        "en" : "Dereference null return (stat)"
      },
      "description" : {
        "en" : "Return value of function, which is statistically inferred to return null, but with no source code available, is dereferenced"
      },
      "local_effect" : {
        "en" : "If the function can actually return null, then a null pointer dereference would occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "unimpl",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "inferred_null_return_value",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Dereference null return (stat)"
      },
      "description" : {
        "en" : "Return value of function, which is statistically inferred to return null, but with no source code available, is dereferenced"
      },
      "local_effect" : {
        "en" : "If the function can actually return null, then a null pointer dereference would occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "unimpl",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "return_value",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Dereference null return value"
      },
      "description" : {
        "en" : "Return value of function which returns null is dereferenced without checking"
      },
      "local_effect" : {
        "en" : "If the function actually returns a null value, a null pointer dereference will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "return_value",
      "code-language" : "cuda",
      "name" : {
        "en" : "Dereference null return value"
      },
      "description" : {
        "en" : "Return value of function which returns null is dereferenced without checking"
      },
      "local_effect" : {
        "en" : "If the function actually returns a null value, a null pointer dereference will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_crash",
      "subtype" : "return_value",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Dereference null return value"
      },
      "description" : {
        "en" : "Return value of function which returns null is dereferenced without checking"
      },
      "local_effect" : {
        "en" : "If the function actually returns a null value, a null pointer dereference will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "before_null_check",
      "code-language" : "c#",
      "name" : {
        "en" : "Dereference before null check"
      },
      "description" : {
        "en" : "All paths that lead to this null pointer comparison already dereference the pointer earlier"
      },
      "local_effect" : {
        "en" : "There may be a null reference exception, or else the comparison against null is unnecessary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "before_null_check",
      "code-language" : "go",
      "name" : {
        "en" : "Dereference before null (nil) check"
      },
      "description" : {
        "en" : "All paths that lead to this null pointer comparison already dereference the pointer earlier"
      },
      "local_effect" : {
        "en" : "There may be a null pointer dereference, or else the comparison against nil is unnecessary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "before_null_check",
      "code-language" : "java",
      "name" : {
        "en" : "Dereference before null check"
      },
      "description" : {
        "en" : "All paths that lead to this null pointer comparison already dereference the pointer earlier"
      },
      "local_effect" : {
        "en" : "There may be a null pointer exception, or else the comparison against null is unnecessary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "before_null_check",
      "code-language" : "javascript",
      "name" : {
        "en" : "Property access or function call before check for null or undefined"
      },
      "description" : {
        "en" : "All paths that lead to this comparison against null or undefined already use the value earlier for accessing a property or as a function call"
      },
      "local_effect" : {
        "en" : "There may be an exception, or else the comparison against null is unnecessary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "before_null_check",
      "code-language" : "python",
      "name" : {
        "en" : "Attribute/item access or function call before check for None or undefined"
      },
      "description" : {
        "en" : "All paths that lead to this comparison against None or undefined already use the value earlier for accessing an attribute/item or as a function call"
      },
      "local_effect" : {
        "en" : "There may be an exception, or else the comparison against None is unnecessary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "before_null_check",
      "code-language" : "ruby",
      "name" : {
        "en" : "Instance variable access or function call before check for nil or undefined"
      },
      "description" : {
        "en" : "All paths that lead to this comparison against nil or the defined? predicate use the value earlier for accessing an instance variable or as a function call"
      },
      "local_effect" : {
        "en" : "There may be a NameError exception, or else the nil? or defined? test is unnecessary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "before_null_check",
      "code-language" : "scala",
      "name" : {
        "en" : "Dereference before null check"
      },
      "description" : {
        "en" : "All paths that lead to this null pointer comparison already dereference the pointer earlier"
      },
      "local_effect" : {
        "en" : "There may be a null pointer exception, or else the comparison against null is unnecessary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "before_null_check",
      "code-language" : "typescript",
      "name" : {
        "en" : "Property access or function call before check for null or undefined"
      },
      "description" : {
        "en" : "All paths that lead to this comparison against null or undefined already use the value earlier for accessing a property or as a function call"
      },
      "local_effect" : {
        "en" : "There may be an exception, or else the comparison against null is unnecessary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "before_null_check",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Dereference before null (Nothing) check"
      },
      "description" : {
        "en" : "All paths that lead to this null (Nothing) pointer comparison already dereference the pointer earlier"
      },
      "local_effect" : {
        "en" : "There may be a null reference exception, or else the comparison against null (Nothing) is unnecessary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "check_then_dereference",
      "code-language" : "c#",
      "name" : {
        "en" : "Dereference after null check"
      },
      "description" : {
        "en" : "Reference is checked against null but then dereferenced anyway"
      },
      "local_effect" : {
        "en" : "Either the check against null is unnecessary, or there may be a null reference exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "check_then_dereference",
      "code-language" : "go",
      "name" : {
        "en" : "Dereference after null check"
      },
      "description" : {
        "en" : "Reference is checked against null but then dereferenced anyway"
      },
      "local_effect" : {
        "en" : "Either the check against null is unnecessary, or there may be a null pointer exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "check_then_dereference",
      "code-language" : "java",
      "name" : {
        "en" : "Dereference after null check"
      },
      "description" : {
        "en" : "Reference is checked against null but then dereferenced anyway"
      },
      "local_effect" : {
        "en" : "Either the check against null is unnecessary, or there may be a null pointer exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "check_then_dereference",
      "code-language" : "javascript",
      "name" : {
        "en" : "Dereference after null check"
      },
      "description" : {
        "en" : "Reference is checked against null but then dereferenced anyway"
      },
      "local_effect" : {
        "en" : "Either the check against null is unnecessary, or there may be a null pointer exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "check_then_dereference",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Dereference after null check"
      },
      "description" : {
        "en" : "Reference is checked against null but then dereferenced anyway"
      },
      "local_effect" : {
        "en" : "Either the check against null is unnecessary, or there may be a null pointer exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "check_then_dereference",
      "code-language" : "php",
      "name" : {
        "en" : "Dereference after null check"
      },
      "description" : {
        "en" : "Reference is checked against null but then dereferenced anyway"
      },
      "local_effect" : {
        "en" : "Either the check against null is unnecessary, or there may be a null pointer exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "check_then_dereference",
      "code-language" : "python",
      "name" : {
        "en" : "Dereference after null check"
      },
      "description" : {
        "en" : "Reference is checked against null but then dereferenced anyway"
      },
      "local_effect" : {
        "en" : "Either the check against null is unnecessary, or there may be a null pointer exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "check_then_dereference",
      "code-language" : "ruby",
      "name" : {
        "en" : "Dereference after null check"
      },
      "description" : {
        "en" : "Reference is checked against null but then dereferenced anyway"
      },
      "local_effect" : {
        "en" : "Either the check against null is unnecessary, or there may be a null pointer exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "check_then_dereference",
      "code-language" : "scala",
      "name" : {
        "en" : "Dereference after null check"
      },
      "description" : {
        "en" : "Reference is checked against null but then dereferenced anyway"
      },
      "local_effect" : {
        "en" : "Either the check against null is unnecessary, or there may be a null pointer exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "check_then_dereference",
      "code-language" : "typescript",
      "name" : {
        "en" : "Dereference after null check"
      },
      "description" : {
        "en" : "Reference is checked against null but then dereferenced anyway"
      },
      "local_effect" : {
        "en" : "Either the check against null is unnecessary, or there may be a null pointer exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "check_then_dereference",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Dereference after null check"
      },
      "description" : {
        "en" : "Reference is checked against null (Nothing) but then dereferenced anyway"
      },
      "local_effect" : {
        "en" : "Either the check against null (Nothing) is unnecessary, or there may be a null reference exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant",
      "code-language" : "javascript",
      "name" : {
        "en" : "Bad use of null-like value"
      },
      "description" : {
        "en" : "Performing an operation that would be invalid on a null or undefined value."
      },
      "local_effect" : {
        "en" : "If the value is null or undefined, this code will cause an exception such as a TypeError."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "bad_null_value_use",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant",
      "code-language" : "php",
      "name" : {
        "en" : "Bad use of null-like value"
      },
      "description" : {
        "en" : "Performing an operation that would be invalid on a null or undefined value."
      },
      "local_effect" : {
        "en" : "If the value is null or undefined, this code will cause an exception such as a TypeError."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "bad_null_value_use",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant",
      "code-language" : "python",
      "name" : {
        "en" : "Bad use of null-like value"
      },
      "description" : {
        "en" : "Performing an operation that would be invalid on a null or undefined value."
      },
      "local_effect" : {
        "en" : "If the value is null or undefined, this code will cause an exception such as a TypeError."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "bad_null_value_use",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant",
      "code-language" : "ruby",
      "name" : {
        "en" : "Bad use of null-like value"
      },
      "description" : {
        "en" : "Performing an operation that would be invalid on a null or undefined value."
      },
      "local_effect" : {
        "en" : "If the value is null or undefined, this code will cause an exception such as a TypeError."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "bad_null_value_use",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant",
      "code-language" : "typescript",
      "name" : {
        "en" : "Bad use of null-like value"
      },
      "description" : {
        "en" : "Performing an operation that would be invalid on a null or undefined value."
      },
      "local_effect" : {
        "en" : "If the value is null or undefined, this code will cause an exception such as a TypeError."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "bad_null_value_use",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant_null",
      "code-language" : "c#",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null value"
      },
      "local_effect" : {
        "en" : "A null pointer exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant_null",
      "code-language" : "java",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null value"
      },
      "local_effect" : {
        "en" : "A null pointer exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant_null",
      "code-language" : "javascript",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null value"
      },
      "local_effect" : {
        "en" : "A null pointer exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant_null",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null value"
      },
      "local_effect" : {
        "en" : "A null pointer exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant_null",
      "code-language" : "php",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null value"
      },
      "local_effect" : {
        "en" : "A null pointer exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant_null",
      "code-language" : "python",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null value"
      },
      "local_effect" : {
        "en" : "A null pointer exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant_null",
      "code-language" : "ruby",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null value"
      },
      "local_effect" : {
        "en" : "A null pointer exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant_null",
      "code-language" : "scala",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null value"
      },
      "local_effect" : {
        "en" : "A null pointer exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant_null",
      "code-language" : "typescript",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null value"
      },
      "local_effect" : {
        "en" : "A null pointer exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant_null",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null (Nothing) value"
      },
      "local_effect" : {
        "en" : "A null pointer exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant_zero",
      "code-language" : "c#",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null value"
      },
      "local_effect" : {
        "en" : "A null reference exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant_zero",
      "code-language" : "java",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null value"
      },
      "local_effect" : {
        "en" : "A null pointer exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant_zero",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null value"
      },
      "local_effect" : {
        "en" : "A null pointer exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "constant_zero",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Explicit null dereferenced"
      },
      "description" : {
        "en" : "Dereference of an explicit null (Nothing) value"
      },
      "local_effect" : {
        "en" : "A null reference exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "deref_constant_zero",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "dynamic_cast",
      "code-language" : "c#",
      "name" : {
        "en" : "Unchecked dynamic_cast"
      },
      "description" : {
        "en" : "Dynamic_cast may fail and return null if the type cast is incompatible"
      },
      "local_effect" : {
        "en" : "If the dynamic_cast fails, a null pointer dereference will occur; if the dynamic_cast cannot fail, using static_cast instead offers better performance."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "dynamic_cast",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "dynamic_cast",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Unchecked TryCast"
      },
      "description" : {
        "en" : "TryCast may fail and return null if the type cast is incompatible"
      },
      "local_effect" : {
        "en" : "If the TryCast fails, a null pointer dereference will occur; if the TryCast cannot fail, using DirectCast instead offers better performance."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "dynamic_cast",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "inferred_null_return_value",
      "code-language" : "c#",
      "name" : {
        "en" : "Dereference null return (stat)"
      },
      "description" : {
        "en" : "Return value of function, which is statistically inferred to return null, but with no source code available, is dereferenced"
      },
      "local_effect" : {
        "en" : "If the function can actually return null, then a null pointer dereference would occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "unimpl",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "inferred_null_return_value",
      "code-language" : "go",
      "name" : {
        "en" : "Dereference nil return (stat)"
      },
      "description" : {
        "en" : "Return value of function, which is statistically inferred to return nil, but with no source code available, is dereferenced"
      },
      "local_effect" : {
        "en" : "If the function can actually return nil, then a nil pointer dereference would occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "unimpl",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "inferred_null_return_value",
      "code-language" : "java",
      "name" : {
        "en" : "Dereference null return (stat)"
      },
      "description" : {
        "en" : "Return value of function, which is statistically inferred to return null, but with no source code available, is dereferenced"
      },
      "local_effect" : {
        "en" : "If the function can actually return null, then a NullPointerException will be thrown."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "unimpl",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "inferred_null_return_value",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Dereference null (Nothing) return (stat)"
      },
      "description" : {
        "en" : "Return value of function, which is statistically inferred to return null (Nothing), but with no source code available, is dereferenced"
      },
      "local_effect" : {
        "en" : "If the function can actually return null (Nothing), then a null pointer dereference would occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "unimpl",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "null_from_as",
      "code-language" : "c#",
      "name" : {
        "en" : "Unchecked \"as\" conversion"
      },
      "description" : {
        "en" : "The \"as\" conversion may fail and return null if the type cast is incompatible"
      },
      "local_effect" : {
        "en" : "If the \"as\" conversion fails, a null pointer exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "null_from_as",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "null_from_as",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Unchecked \"TryCast\" conversion"
      },
      "description" : {
        "en" : "The \"TryCast\" conversion may fail and return null (Nothing) if the type cast is incompatible"
      },
      "local_effect" : {
        "en" : "If the \"TryCast\" conversion fails, a null pointer exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "null_from_as",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "nullable_parameter",
      "code-language" : "java",
      "name" : {
        "en" : "Dereference null argument"
      },
      "description" : {
        "en" : "A method parameter that is allowed to be null is dereferenced without a check"
      },
      "local_effect" : {
        "en" : "If the method is passed a null value, a NullPointerException will be thrown."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "needs_null_check",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "nullable_parameter",
      "code-language" : "javascript",
      "name" : {
        "en" : "Dereference null argument"
      },
      "description" : {
        "en" : "A method parameter that is allowed to be null is dereferenced without a check"
      },
      "local_effect" : {
        "en" : "If the method is passed a null value, a NullPointerException will be thrown."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "needs_null_check",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "nullable_parameter",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Dereference null argument"
      },
      "description" : {
        "en" : "A method parameter that is allowed to be null is dereferenced without a check"
      },
      "local_effect" : {
        "en" : "If the method is passed a null value, a NullPointerException will be thrown."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "needs_null_check",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "nullable_parameter",
      "code-language" : "php",
      "name" : {
        "en" : "Dereference null argument"
      },
      "description" : {
        "en" : "A method parameter that is allowed to be null is dereferenced without a check"
      },
      "local_effect" : {
        "en" : "If the method is passed a null value, a NullPointerException will be thrown."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "needs_null_check",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "nullable_parameter",
      "code-language" : "python",
      "name" : {
        "en" : "Dereference null argument"
      },
      "description" : {
        "en" : "A method parameter that is allowed to be null is dereferenced without a check"
      },
      "local_effect" : {
        "en" : "If the method is passed a null value, a NullPointerException will be thrown."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "needs_null_check",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "nullable_parameter",
      "code-language" : "ruby",
      "name" : {
        "en" : "Dereference null argument"
      },
      "description" : {
        "en" : "A method parameter that is allowed to be null is dereferenced without a check"
      },
      "local_effect" : {
        "en" : "If the method is passed a null value, a NullPointerException will be thrown."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "needs_null_check",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "nullable_parameter",
      "code-language" : "typescript",
      "name" : {
        "en" : "Dereference null argument"
      },
      "description" : {
        "en" : "A method parameter that is allowed to be null is dereferenced without a check"
      },
      "local_effect" : {
        "en" : "If the method is passed a null value, a NullPointerException will be thrown."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "needs_null_check",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "return_value",
      "code-language" : "c#",
      "name" : {
        "en" : "Dereference null return value"
      },
      "description" : {
        "en" : "Return value of function which returns null is dereferenced without checking"
      },
      "local_effect" : {
        "en" : "If the function actually returns a null reference, a null reference exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "return_value",
      "code-language" : "go",
      "name" : {
        "en" : "Dereference nil return value"
      },
      "description" : {
        "en" : "Return value of function which returns nil is dereferenced without checking"
      },
      "local_effect" : {
        "en" : "If the function actually returns a nil value, a nil pointer dereference will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "return_value",
      "code-language" : "java",
      "name" : {
        "en" : "Dereference null return value"
      },
      "description" : {
        "en" : "Return value of function which returns null is dereferenced without checking"
      },
      "local_effect" : {
        "en" : "If the function actually returns a null value, a NullPointerException will be thrown."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "return_value",
      "code-language" : "javascript",
      "name" : {
        "en" : "Bad use of null-like value"
      },
      "description" : {
        "en" : "Using the return value of a function that can return null or undefined without checking it for null or undefined."
      },
      "local_effect" : {
        "en" : "If the function returns a null or undefined value, this code will cause an exception such as a TypeError."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "return_value",
      "code-language" : "typescript",
      "name" : {
        "en" : "Bad use of null-like value"
      },
      "description" : {
        "en" : "Using the return value of a function that can return null or undefined without checking it for null or undefined."
      },
      "local_effect" : {
        "en" : "If the function returns a null or undefined value, this code will cause an exception such as a TypeError."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "return_value",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Dereference null (Nothing) return value"
      },
      "description" : {
        "en" : "Return value of function which returns null (Nothing) is dereferenced without checking"
      },
      "local_effect" : {
        "en" : "If the function actually returns a null (Nothing) reference, a null reference exception will occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 960
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "throws_on_null",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Null value leads to thrown exception"
      },
      "description" : {
        "en" : "A null value is passed to a function that throws an exception in that case"
      },
      "local_effect" : {
        "en" : "An exception is thrown due to a null value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "throws_on_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "throws_on_null",
      "code-language" : "c#",
      "name" : {
        "en" : "Null value leads to thrown exception"
      },
      "description" : {
        "en" : "A null value is passed to a function that throws an exception in that case"
      },
      "local_effect" : {
        "en" : "An exception is thrown due to a null value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "throws_on_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "throws_on_null",
      "code-language" : "cuda",
      "name" : {
        "en" : "Null value leads to thrown exception"
      },
      "description" : {
        "en" : "A null value is passed to a function that throws an exception in that case"
      },
      "local_effect" : {
        "en" : "An exception is thrown due to a null value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "throws_on_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "throws_on_null",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Null value leads to thrown exception"
      },
      "description" : {
        "en" : "A null value is passed to a function that throws an exception in that case"
      },
      "local_effect" : {
        "en" : "An exception is thrown due to a null value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "throws_on_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "null_pointer_dereference_exception",
      "subtype" : "throws_on_null",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Null value (Nothing) leads to thrown exception"
      },
      "description" : {
        "en" : "A null value (Nothing) is passed to a function that throws an exception in that case"
      },
      "local_effect" : {
        "en" : "An exception is thrown due to a null value (Nothing)."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Null pointer dereferences",
        "cweCategory" : 476,
        "impact" : "Medium",
        "subcategory" : "throws_on_null",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1381
      }
    },
    {
      "type" : "ognl_injection",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "OGNL injection"
      },
      "description" : {
        "en" : "A user-controllable string is evaluated by an OGNL resolver."
      },
      "local_effect" : {
        "en" : "An attacker can force the evaluation of OGNL statements to execute arbitrary code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 94,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 291
      }
    },
    {
      "type" : "open_redirect",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Open redirect"
      },
      "description" : {
        "en" : "User-controlled input is used to specify an address that is used as a URL redirect or forward. An attacker can create a link to the trusted site that redirects to a malicious Web site. This could enable the attacker to steal user credentials."
      },
      "local_effect" : {
        "en" : "An attacker can mount a phishing attack by modifying the URL value to point to a malicious Web site."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 601,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 37
      }
    },
    {
      "type" : "open_redirect",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "Open redirect"
      },
      "description" : {
        "en" : "User-controlled input is used to specify an address that is used as a URL redirect or forward. An attacker can create a link to the trusted site that redirects to a malicious Web site. This could enable the attacker to steal user credentials."
      },
      "local_effect" : {
        "en" : "An attacker can mount a phishing attack by modifying the URL value to point to a malicious Web site."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 601,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 37
      }
    },
    {
      "type" : "open_redirect",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Open redirect"
      },
      "description" : {
        "en" : "User-controlled input is used to specify an address that is used as a URL redirect or forward. An attacker can create a link to the trusted site that redirects to a malicious Web site. This could enable the attacker to steal user credentials."
      },
      "local_effect" : {
        "en" : "An attacker can mount a phishing attack by modifying the URL value to point to a malicious Web site."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 601,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 37
      }
    },
    {
      "type" : "open_redirect",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Open redirect"
      },
      "description" : {
        "en" : "User-controlled input is used to specify an address that is used as a URL redirect or forward. An attacker can create a link to the trusted site that redirects to a malicious Web site. This could enable the attacker to steal user credentials."
      },
      "local_effect" : {
        "en" : "An attacker can mount a phishing attack by modifying the URL value to point to a malicious Web site."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 601,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 37
      }
    },
    {
      "type" : "open_redirect",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Open redirect"
      },
      "description" : {
        "en" : "User-controlled input is used to specify an address that is used as a URL redirect or forward. An attacker can create a link to the trusted site that redirects to a malicious Web site. This could enable the attacker to steal user credentials."
      },
      "local_effect" : {
        "en" : "An attacker can mount a phishing attack by modifying the URL value to point to a malicious Web site."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 601,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 37
      }
    },
    {
      "type" : "open_redirect",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Open redirect"
      },
      "description" : {
        "en" : "User-controlled input is used to specify an address that is used as a URL redirect or forward. An attacker can create a link to the trusted site that redirects to a malicious Web site. This could enable the attacker to steal user credentials."
      },
      "local_effect" : {
        "en" : "An attacker can mount a phishing attack by modifying the URL value to point to a malicious Web site."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 601,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 37
      }
    },
    {
      "type" : "open_redirect",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Open redirect"
      },
      "description" : {
        "en" : "User-controlled input is used to specify an address that is used as a URL redirect or forward. An attacker can create a link to the trusted site that redirects to a malicious Web site. This could enable the attacker to steal user credentials."
      },
      "local_effect" : {
        "en" : "An attacker can mount a phishing attack by modifying the URL value to point to a malicious Web site."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 601,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 37
      }
    },
    {
      "type" : "open_redirect",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Open redirect"
      },
      "description" : {
        "en" : "User-controlled input is used to specify an address that is used as a URL redirect or forward. An attacker can create a link to the trusted site that redirects to a malicious Web site. This could enable the attacker to steal user credentials."
      },
      "local_effect" : {
        "en" : "An attacker can mount a phishing attack by modifying the URL value to point to a malicious Web site."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 601,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 37
      }
    },
    {
      "type" : "open_redirect",
      "subtype" : "open_redirect_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Redirect"
      },
      "description" : {
        "en" : "User-controlled input is used to specify an address that is used as a URL redirect or forward. An attacker can create a link to the trusted site that redirects to a malicious Web site. This could enable the attacker to steal user credentials."
      },
      "local_effect" : {
        "en" : "An attacker can mount a phishing attack by modifying the URL value to point to a malicious Web site."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 601,
        "impact" : "High",
        "subcategory" : "open_redirect_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 37
      }
    },
    {
      "type" : "open_redirect",
      "subtype" : "open_redirect_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Redirect"
      },
      "description" : {
        "en" : "User-controlled input is used to specify an address that is used as a URL redirect or forward. An attacker can create a link to the trusted site that redirects to a malicious Web site. This could enable the attacker to steal user credentials."
      },
      "local_effect" : {
        "en" : "An attacker can mount a phishing attack by modifying the URL value to point to a malicious Web site."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 601,
        "impact" : "Low",
        "subcategory" : "open_redirect_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 37
      }
    },
    {
      "type" : "orm_load_null_check",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "ORM usage error"
      },
      "description" : {
        "en" : "A possibly proxy object is pointlessly tested for null."
      },
      "local_effect" : {
        "en" : "Use of a proxy for a non-existent object will throw an exception."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 253,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "orm_unnecessary_get",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Unnecessary call to org.hibernate.Session.get method"
      },
      "description" : {
        "en" : "There is an unnecessary call to org.hibernate.Session.get(...) which will result in a database access. In some cases, org.hibernate.Session.load(...) can be called to improve performance."
      },
      "local_effect" : {
        "en" : "Database accesses are expensive and will reduce the performance of the system."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1419
      }
    },
    {
      "type" : "orm_unnecessary_get",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unnecessary call to org.hibernate.Session.get method"
      },
      "description" : {
        "en" : "There is an unnecessary call to org.hibernate.Session.get(...) which will result in a database access. In some cases, org.hibernate.Session.load(...) can be called to improve performance."
      },
      "local_effect" : {
        "en" : "Database accesses are expensive and will reduce the performance of the system."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1419
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : "command_argument",
      "code-language" : "c#",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "command_argument",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : "command_argument",
      "code-language" : "vb.net",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "command_argument",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : "command_as_array_of_args",
      "code-language" : "java",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "command_as_array_of_args",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : "command_as_array_of_args",
      "code-language" : "kotlin",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "command_as_array_of_args",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : "command_as_one_string",
      "code-language" : "go",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "command_as_one_string",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : "command_as_one_string",
      "code-language" : "java",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "command_as_one_string",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : "command_as_one_string",
      "code-language" : "kotlin",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "command_as_one_string",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : "command_injection_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Command injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "command_injection_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : "command_injection_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Command injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 78,
        "impact" : "Medium",
        "subcategory" : "command_injection_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : "executable_file",
      "code-language" : "c#",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "executable_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "os_cmd_injection",
      "subtype" : "executable_file",
      "code-language" : "vb.net",
      "name" : {
        "en" : "OS Command Injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "local_effect" : {
        "en" : "A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 78,
        "impact" : "High",
        "subcategory" : "executable_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1186
      }
    },
    {
      "type" : "overflow_before_widen",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unintentional integer overflow"
      },
      "description" : {
        "en" : "An integer overflow occurs, with the result converted to a wider integer type"
      },
      "local_effect" : {
        "en" : "The expression's value may not be what the programmer intended, because the expression is evaluated using a narrow (i.e. few bits) integer type."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 190,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 328
      }
    },
    {
      "type" : "overflow_before_widen",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Unintentional integer overflow"
      },
      "description" : {
        "en" : "An integer overflow occurs, with the result converted to a wider integer type"
      },
      "local_effect" : {
        "en" : "The expression's value may not be what the programmer intended, because the expression is evaluated using a narrow (i.e. few bits) integer type."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 190,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 328
      }
    },
    {
      "type" : "overflow_before_widen",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Unintentional integer overflow"
      },
      "description" : {
        "en" : "An integer overflow occurs, with the result converted to a wider integer type"
      },
      "local_effect" : {
        "en" : "The expression's value may not be what the programmer intended, because the expression is evaluated using a narrow (i.e. few bits) integer type."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 190,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 328
      }
    },
    {
      "type" : "overflow_before_widen",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Unintentional integer overflow"
      },
      "description" : {
        "en" : "An integer overflow occurs, with the result converted to a wider integer type"
      },
      "local_effect" : {
        "en" : "The expression's value may not be what the programmer intended, because the expression is evaluated using a narrow (i.e. few bits) integer type."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 190,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 328
      }
    },
    {
      "type" : "overflow_before_widen",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unintentional integer overflow"
      },
      "description" : {
        "en" : "An integer overflow occurs, with the result converted to a wider integer type"
      },
      "local_effect" : {
        "en" : "The expression's value may not be what the programmer intended, because the expression is evaluated using a narrow (i.e. few bits) integer type."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 190,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 328
      }
    },
    {
      "type" : "overflow_before_widen",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Unintentional integer overflow"
      },
      "description" : {
        "en" : "An integer overflow occurs, with the result converted to a wider integer type"
      },
      "local_effect" : {
        "en" : "The expression's value may not be what the programmer intended, because the expression is evaluated using a narrow (i.e. few bits) integer type."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 190,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 328
      }
    },
    {
      "type" : "overflow_before_widen",
      "subtype" : null,
      "code-language" : "scala",
      "name" : {
        "en" : "Unintentional integer overflow"
      },
      "description" : {
        "en" : "An integer overflow occurs, with the result converted to a wider integer type"
      },
      "local_effect" : {
        "en" : "The expression's value may not be what the programmer intended, because the expression is evaluated using a narrow (i.e. few bits) integer type."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 190,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 328
      }
    },
    {
      "type" : "overlapping_copy",
      "subtype" : "assignment",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Assignment of overlapping memory"
      },
      "description" : {
        "en" : "Assignment to an object with overlapping storage without exact overlap and compatible types can cause undefined behavior."
      },
      "local_effect" : {
        "en" : "Memory may be overwritten before it is read."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "assignment",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1420
      }
    },
    {
      "type" : "overlapping_copy",
      "subtype" : "assignment",
      "code-language" : "cuda",
      "name" : {
        "en" : "Assignment of overlapping memory"
      },
      "description" : {
        "en" : "Assignment to an object with overlapping storage without exact overlap and compatible types can cause undefined behavior."
      },
      "local_effect" : {
        "en" : "Memory may be overwritten before it is read."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "assignment",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1420
      }
    },
    {
      "type" : "overlapping_copy",
      "subtype" : "byte_copy",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Copy of overlapping memory"
      },
      "description" : {
        "en" : "Copying a memory region to an overlapping memory region, which may cause memory corruption."
      },
      "local_effect" : {
        "en" : "Memory may be overwritten before it is read."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "byte_copy",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1420
      }
    },
    {
      "type" : "overlapping_copy",
      "subtype" : "byte_copy",
      "code-language" : "cuda",
      "name" : {
        "en" : "Copy of overlapping memory"
      },
      "description" : {
        "en" : "Copying a memory region to an overlapping memory region, which may cause memory corruption."
      },
      "local_effect" : {
        "en" : "Memory may be overwritten before it is read."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "byte_copy",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1420
      }
    },
    {
      "type" : "overrun",
      "subtype" : "array_vs_singleton",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Out-of-bounds access"
      },
      "description" : {
        "en" : "Access of memory past the end of a memory buffer"
      },
      "local_effect" : {
        "en" : "Memory not owned by this buffer will be accessed, causing memory corruption or incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "overrun",
      "subtype" : "array_vs_singleton",
      "code-language" : "cuda",
      "name" : {
        "en" : "Out-of-bounds access"
      },
      "description" : {
        "en" : "Access of memory past the end of a memory buffer"
      },
      "local_effect" : {
        "en" : "Memory not owned by this buffer will be accessed, causing memory corruption or incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "overrun",
      "subtype" : "array_vs_singleton",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Out-of-bounds access"
      },
      "description" : {
        "en" : "Access of memory past the end of a memory buffer"
      },
      "local_effect" : {
        "en" : "Memory not owned by this buffer will be accessed, causing memory corruption or incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "overrun",
      "subtype" : "bad_alloc_arithmetic",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Stray pointer arithmetic"
      },
      "description" : {
        "en" : "Pointer arithmetic performed on freshly allocated memory"
      },
      "local_effect" : {
        "en" : "The pointer value returned from the allocator may be lost, making it difficult to deallocate later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 771,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1179
      }
    },
    {
      "type" : "overrun",
      "subtype" : "bad_alloc_arithmetic",
      "code-language" : "cuda",
      "name" : {
        "en" : "Stray pointer arithmetic"
      },
      "description" : {
        "en" : "Pointer arithmetic performed on freshly allocated memory"
      },
      "local_effect" : {
        "en" : "The pointer value returned from the allocator may be lost, making it difficult to deallocate later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 771,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1179
      }
    },
    {
      "type" : "overrun",
      "subtype" : "bad_alloc_arithmetic",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Stray pointer arithmetic"
      },
      "description" : {
        "en" : "Pointer arithmetic performed on freshly allocated memory"
      },
      "local_effect" : {
        "en" : "The pointer value returned from the allocator may be lost, making it difficult to deallocate later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 771,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1179
      }
    },
    {
      "type" : "overrun",
      "subtype" : "buffer_size",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Possible buffer overflow"
      },
      "description" : {
        "en" : "Incorrect buffer manipulation may result in buffer overflow"
      },
      "local_effect" : {
        "en" : "Some memory locations will be written with incorrect values, possibly corrupting data structures or data integrity."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 120,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "overrun",
      "subtype" : "buffer_size",
      "code-language" : "cuda",
      "name" : {
        "en" : "Possible buffer overflow"
      },
      "description" : {
        "en" : "Incorrect buffer manipulation may result in buffer overflow"
      },
      "local_effect" : {
        "en" : "Some memory locations will be written with incorrect values, possibly corrupting data structures or data integrity."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 120,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "overrun",
      "subtype" : "buffer_size",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Possible buffer overflow"
      },
      "description" : {
        "en" : "Incorrect buffer manipulation may result in buffer overflow"
      },
      "local_effect" : {
        "en" : "Some memory locations will be written with incorrect values, possibly corrupting data structures or data integrity."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 120,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "overrun",
      "subtype" : "illegal_address",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Illegal address computation"
      },
      "description" : {
        "en" : "An illegal address is computed, which either precedes a buffer or is more than just-past its end"
      },
      "local_effect" : {
        "en" : "If this address is later used for bounds checking another pointer before dereferencing, an overrun may occur due to the weak guard."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "illegal_address",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "overrun",
      "subtype" : "illegal_address",
      "code-language" : "cuda",
      "name" : {
        "en" : "Illegal address computation"
      },
      "description" : {
        "en" : "An illegal address is computed, which either precedes a buffer or is more than just-past its end"
      },
      "local_effect" : {
        "en" : "If this address is later used for bounds checking another pointer before dereferencing, an overrun may occur due to the weak guard."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "illegal_address",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "overrun",
      "subtype" : "illegal_address",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Illegal address computation"
      },
      "description" : {
        "en" : "An illegal address is computed, which either precedes a buffer or is more than just-past its end"
      },
      "local_effect" : {
        "en" : "If this address is later used for bounds checking another pointer before dereferencing, an overrun may occur due to the weak guard."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "illegal_address",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "overrun",
      "subtype" : "logic_error",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Out-of-bounds access"
      },
      "description" : {
        "en" : "Out-of-bounds access to a buffer"
      },
      "local_effect" : {
        "en" : "Access of memory not owned by this buffer may cause crashes or incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "overrun",
      "subtype" : "logic_error",
      "code-language" : "cuda",
      "name" : {
        "en" : "Out-of-bounds access"
      },
      "description" : {
        "en" : "Out-of-bounds access to a buffer"
      },
      "local_effect" : {
        "en" : "Access of memory not owned by this buffer may cause crashes or incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "overrun",
      "subtype" : "logic_error",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Out-of-bounds access"
      },
      "description" : {
        "en" : "Out-of-bounds access to a buffer"
      },
      "local_effect" : {
        "en" : "Access of memory not owned by this buffer may cause crashes or incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "overrun",
      "subtype" : "read",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Out-of-bounds read"
      },
      "description" : {
        "en" : "Out-of-bounds read from a buffer"
      },
      "local_effect" : {
        "en" : "Incorrect values read from a different memory region will cause incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 125,
        "impact" : "High",
        "subcategory" : "read",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 568
      }
    },
    {
      "type" : "overrun",
      "subtype" : "read",
      "code-language" : "cuda",
      "name" : {
        "en" : "Out-of-bounds read"
      },
      "description" : {
        "en" : "Out-of-bounds read from a buffer"
      },
      "local_effect" : {
        "en" : "Incorrect values read from a different memory region will cause incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 125,
        "impact" : "High",
        "subcategory" : "read",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 568
      }
    },
    {
      "type" : "overrun",
      "subtype" : "read",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Out-of-bounds read"
      },
      "description" : {
        "en" : "Out-of-bounds read from a buffer"
      },
      "local_effect" : {
        "en" : "Incorrect values read from a different memory region will cause incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 125,
        "impact" : "High",
        "subcategory" : "read",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 568
      }
    },
    {
      "type" : "overrun",
      "subtype" : "strlen",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Allocation size error"
      },
      "description" : {
        "en" : "Allocation size does not include space for the null-terminator needed for a string"
      },
      "local_effect" : {
        "en" : "A buffer overrun may occur if the string is copied into the buffer."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "strlen",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "overrun",
      "subtype" : "strlen",
      "code-language" : "cuda",
      "name" : {
        "en" : "Allocation size error"
      },
      "description" : {
        "en" : "Allocation size does not include space for the null-terminator needed for a string"
      },
      "local_effect" : {
        "en" : "A buffer overrun may occur if the string is copied into the buffer."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "strlen",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "overrun",
      "subtype" : "strlen",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Allocation size error"
      },
      "description" : {
        "en" : "Allocation size does not include space for the null-terminator needed for a string"
      },
      "local_effect" : {
        "en" : "A buffer overrun may occur if the string is copied into the buffer."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "strlen",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "overrun",
      "subtype" : "write",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Out-of-bounds write"
      },
      "description" : {
        "en" : "Out-of-bounds write to a buffer"
      },
      "local_effect" : {
        "en" : "This could cause an immediate crash or incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "write",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "overrun",
      "subtype" : "write",
      "code-language" : "cuda",
      "name" : {
        "en" : "Out-of-bounds write"
      },
      "description" : {
        "en" : "Out-of-bounds write to a buffer"
      },
      "local_effect" : {
        "en" : "This could cause an immediate crash or incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "write",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "overrun",
      "subtype" : "write",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Out-of-bounds write"
      },
      "description" : {
        "en" : "Out-of-bounds write to a buffer"
      },
      "local_effect" : {
        "en" : "This could cause an immediate crash or incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "write",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "overwrite_of_lock_field_during_critical_section",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Bad choice of lock object"
      },
      "description" : {
        "en" : "The field used as a lock can be assigned a different value while the critical section is operating. This can cause multiple threads to enter the critical section at the same time, which may cause nondeterministic behavior."
      },
      "local_effect" : {
        "en" : "Nondeterministic locking behavior"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Unreliable locking behavior",
        "cweCategory" : 543,
        "impact" : "High",
        "subcategory" : "unsafe_assign_to_locked_field",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1386
      }
    },
    {
      "type" : "overwrite_of_lock_field_during_critical_section",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Bad choice of lock object"
      },
      "description" : {
        "en" : "The field used as a lock can be assigned a different value while the critical section is operating. This can cause multiple threads to enter the critical section at the same time, which may cause nondeterministic behavior."
      },
      "local_effect" : {
        "en" : "Nondeterministic locking behavior"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Unreliable locking behavior",
        "cweCategory" : 543,
        "impact" : "High",
        "subcategory" : "unsafe_assign_to_locked_field",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1386
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "array_captured_by_value",
      "code-language" : "c/c++",
      "name" : {
        "en" : "An array is captured by a lambda"
      },
      "description" : {
        "en" : "A C-array is captured by value, causing it to be copied, rather than passed as a pointer."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "array_captured_by_value",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "array_captured_by_value",
      "code-language" : "cuda",
      "name" : {
        "en" : "An array is captured by a lambda"
      },
      "description" : {
        "en" : "A C-array is captured by value, causing it to be copied, rather than passed as a pointer."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "array_captured_by_value",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "array_captured_by_value",
      "code-language" : "objective-c",
      "name" : {
        "en" : "An array is captured by a lambda"
      },
      "description" : {
        "en" : "A C-array is captured by value, causing it to be copied, rather than passed as a pointer."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "array_captured_by_value",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "exceeds_high_threshold",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Big parameter passed by value"
      },
      "description" : {
        "en" : "A very large function call parameter exceeding the high threshold is passed by value."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "exceeds_high_threshold",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "exceeds_high_threshold",
      "code-language" : "cuda",
      "name" : {
        "en" : "Big parameter passed by value"
      },
      "description" : {
        "en" : "A very large function call parameter exceeding the high threshold is passed by value."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "exceeds_high_threshold",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "exceeds_high_threshold",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Big parameter passed by value"
      },
      "description" : {
        "en" : "A very large function call parameter exceeding the high threshold is passed by value."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "exceeds_high_threshold",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "exceeds_low_threshold",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Big parameter passed by value"
      },
      "description" : {
        "en" : "A large function call parameter exceeding the low threshold is passed by value."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "exceeds_low_threshold",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "exceeds_low_threshold",
      "code-language" : "cuda",
      "name" : {
        "en" : "Big parameter passed by value"
      },
      "description" : {
        "en" : "A large function call parameter exceeding the low threshold is passed by value."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "exceeds_low_threshold",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "exceeds_low_threshold",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Big parameter passed by value"
      },
      "description" : {
        "en" : "A large function call parameter exceeding the low threshold is passed by value."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "exceeds_low_threshold",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "exceeds_medium_threshold",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Big parameter passed by value"
      },
      "description" : {
        "en" : "A large function call parameter exceeding the medium threshold is passed by value."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "exceeds_medium_threshold",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "exceeds_medium_threshold",
      "code-language" : "cuda",
      "name" : {
        "en" : "Big parameter passed by value"
      },
      "description" : {
        "en" : "A large function call parameter exceeding the medium threshold is passed by value."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "exceeds_medium_threshold",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "exceeds_medium_threshold",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Big parameter passed by value"
      },
      "description" : {
        "en" : "A large function call parameter exceeding the medium threshold is passed by value."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "exceeds_medium_threshold",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "exception_object",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Big exception object caught by value"
      },
      "description" : {
        "en" : "A large exception object is caught by value."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "exception_object",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "exception_object",
      "code-language" : "cuda",
      "name" : {
        "en" : "Big exception object caught by value"
      },
      "description" : {
        "en" : "A large exception object is caught by value."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "exception_object",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "exception_object",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Big exception object caught by value"
      },
      "description" : {
        "en" : "A large exception object is caught by value."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "exception_object",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "unmodified_function_parameter",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Big parameter passed by value to a function that doesn't modify it"
      },
      "description" : {
        "en" : "A large function call parameter is passed by value to a function that doesn't modify it."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "unmodified_function_parameter",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "unmodified_function_parameter",
      "code-language" : "cuda",
      "name" : {
        "en" : "Big parameter passed by value to a function that doesn't modify it"
      },
      "description" : {
        "en" : "A large function call parameter is passed by value to a function that doesn't modify it."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "unmodified_function_parameter",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "pass_by_value",
      "subtype" : "unmodified_function_parameter",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Big parameter passed by value to a function that doesn't modify it"
      },
      "description" : {
        "en" : "A large function call parameter is passed by value to a function that doesn't modify it."
      },
      "local_effect" : {
        "en" : "Copying large values is inefficient, consider passing by reference; Low, medium, and high size thresholds for detection can be adjusted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Performance inefficiencies",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "unmodified_function_parameter",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1421
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Filesystem path, filename, or URI manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Filesystem path, filename, or URI manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Filesystem path, filename, or URI manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "Filesystem path, filename, or URI manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Filesystem path, filename, or URI manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Filesystem path, filename, or URI manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Filesystem path, filename, or URI manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Filesystem path, filename, or URI manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Filesystem path, filename, or URI manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Filesystem path, filename, or URI manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Filesystem path, filename, or URI manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Filesystem path, filename, or URI manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : "dynamic_render_path_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Dynamic render path"
      },
      "description" : {
        "en" : "User-supplied values in template file paths might allow an attacker to render arbitrary files. Ruby on Rails will attempt to render any file matching the path. If the file does not have a known extension, it will be treated as an ERB template by default, which can lead to code execution."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended files or cause unexpected code to execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "dynamic_render_path_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 399
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : "dynamic_render_path_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Dynamic render path"
      },
      "description" : {
        "en" : "User-supplied values in template file paths might allow an attacker to render arbitrary files. Ruby on Rails will attempt to render any file matching the path. If the file does not have a known extension, it will be treated as an ERB template by default, which can lead to code execution."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended files or cause unexpected code to execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 22,
        "impact" : "Low",
        "subcategory" : "dynamic_render_path_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 399
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : "dynamic_render_path_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Dynamic render path"
      },
      "description" : {
        "en" : "User-supplied values in template file paths might allow an attacker to render arbitrary files. Ruby on Rails will attempt to render any file matching the path. If the file does not have a known extension, it will be treated as an ERB template by default, which can lead to code execution."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended files or cause unexpected code to execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 22,
        "impact" : "Medium",
        "subcategory" : "dynamic_render_path_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 399
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : "dynamic_render_path_rce_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Remote code execution"
      },
      "description" : {
        "en" : "If query parameters are passed directly to render, an attacker can send in an inline parameter that will be executed directly as an ERB template. Additionally, Rails does not prevent directory traversal and will attempt to render any file argument to a render call. If the file does not have a known extension, it will be treated as an ERB template, which can lead to code execution. One way to exploit this is to send a request containing ERB, which will be recorded in the log file. Then send a request to render the log file."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended files or cause unexpected code to execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 95,
        "impact" : "High",
        "subcategory" : "dynamic_render_path_rce_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 291
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : "file_access_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "File access"
      },
      "description" : {
        "en" : "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "file_access_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : "file_access_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "File access"
      },
      "description" : {
        "en" : "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 22,
        "impact" : "Low",
        "subcategory" : "file_access_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "path_manipulation",
      "subtype" : "file_access_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "File access"
      },
      "description" : {
        "en" : "A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 22,
        "impact" : "Medium",
        "subcategory" : "file_access_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "precedence_error",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Operator precedence logic error"
      },
      "description" : {
        "en" : "The operators in the expression are evaluated in an order that conflicts with the operand types.  This may indicate a logic error."
      },
      "local_effect" : {
        "en" : "This may lead to incorrect program behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "precedence_error",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Operator precedence logic error"
      },
      "description" : {
        "en" : "The operators in the expression are evaluated in an order that conflicts with the operand types.  This may indicate a logic error."
      },
      "local_effect" : {
        "en" : "This may lead to incorrect program behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 783,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "predictable_random_seed",
      "subtype" : "constant",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Constant seed used in random number generator"
      },
      "description" : {
        "en" : "Generating random number using constant seed may completely replace the cryptographically strong default seed causing the instance to return a predictable sequence of numbers unfit for secure use."
      },
      "local_effect" : {
        "en" : "An attacker may predict generated random number with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 336,
        "impact" : "Low",
        "subcategory" : "random_seed",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 844
      }
    },
    {
      "type" : "predictable_random_seed",
      "subtype" : "constant",
      "code-language" : "cuda",
      "name" : {
        "en" : "Constant seed used in random number generator"
      },
      "description" : {
        "en" : "Generating random number using constant seed may completely replace the cryptographically strong default seed causing the instance to return a predictable sequence of numbers unfit for secure use."
      },
      "local_effect" : {
        "en" : "An attacker may predict generated random number with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 336,
        "impact" : "Low",
        "subcategory" : "random_seed",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 844
      }
    },
    {
      "type" : "predictable_random_seed",
      "subtype" : "constant",
      "code-language" : "java",
      "name" : {
        "en" : "Constant seed used in random number generator"
      },
      "description" : {
        "en" : "Generating random number using constant seed may completely replace the cryptographically strong default seed causing the instance to return a predictable sequence of numbers unfit for secure use."
      },
      "local_effect" : {
        "en" : "An attacker may predict generated random number with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 336,
        "impact" : "Low",
        "subcategory" : "random_seed",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 844
      }
    },
    {
      "type" : "predictable_random_seed",
      "subtype" : "constant",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Constant seed used in random number generator"
      },
      "description" : {
        "en" : "Generating random number using constant seed may completely replace the cryptographically strong default seed causing the instance to return a predictable sequence of numbers unfit for secure use."
      },
      "local_effect" : {
        "en" : "An attacker may predict generated random number with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 336,
        "impact" : "Low",
        "subcategory" : "random_seed",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 844
      }
    },
    {
      "type" : "predictable_random_seed",
      "subtype" : "constant_in_csprng",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Constant seed used in random number generator"
      },
      "description" : {
        "en" : "Generating random number using constant seed may cause the instance to return a predictable sequence of numbers unfit for secure use."
      },
      "local_effect" : {
        "en" : "An attacker may predict generated random number with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 336,
        "impact" : "Medium",
        "subcategory" : "secure_random_seed_const",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 844
      }
    },
    {
      "type" : "predictable_random_seed",
      "subtype" : "constant_in_csprng",
      "code-language" : "cuda",
      "name" : {
        "en" : "Constant seed used in random number generator"
      },
      "description" : {
        "en" : "Generating random number using constant seed may cause the instance to return a predictable sequence of numbers unfit for secure use."
      },
      "local_effect" : {
        "en" : "An attacker may predict generated random number with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 336,
        "impact" : "Medium",
        "subcategory" : "secure_random_seed_const",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 844
      }
    },
    {
      "type" : "predictable_random_seed",
      "subtype" : "constant_in_csprng",
      "code-language" : "java",
      "name" : {
        "en" : "Constant seed used in random number generator"
      },
      "description" : {
        "en" : "Generating random number using constant seed may cause the instance to return a predictable sequence of numbers unfit for secure use."
      },
      "local_effect" : {
        "en" : "An attacker may predict generated random number with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 336,
        "impact" : "Medium",
        "subcategory" : "secure_random_seed_const",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 844
      }
    },
    {
      "type" : "predictable_random_seed",
      "subtype" : "constant_in_csprng",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Constant seed used in random number generator"
      },
      "description" : {
        "en" : "Generating random number using constant seed may cause the instance to return a predictable sequence of numbers unfit for secure use."
      },
      "local_effect" : {
        "en" : "An attacker may predict generated random number with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 336,
        "impact" : "Medium",
        "subcategory" : "secure_random_seed_const",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 844
      }
    },
    {
      "type" : "predictable_random_seed",
      "subtype" : "system_time",
      "code-language" : "c/c++",
      "name" : {
        "en" : "System time used as seed in random number generator"
      },
      "description" : {
        "en" : "Generating random number using system time as the seed may cause the instance to return a predictable sequence of numbers unfit for secure use."
      },
      "local_effect" : {
        "en" : "An attacker may predict generated random number with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 337,
        "impact" : "Medium",
        "subcategory" : "secure_random_seed_sys_time",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 845
      }
    },
    {
      "type" : "predictable_random_seed",
      "subtype" : "system_time",
      "code-language" : "cuda",
      "name" : {
        "en" : "System time used as seed in random number generator"
      },
      "description" : {
        "en" : "Generating random number using system time as the seed may cause the instance to return a predictable sequence of numbers unfit for secure use."
      },
      "local_effect" : {
        "en" : "An attacker may predict generated random number with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 337,
        "impact" : "Medium",
        "subcategory" : "secure_random_seed_sys_time",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 845
      }
    },
    {
      "type" : "predictable_random_seed",
      "subtype" : "system_time",
      "code-language" : "java",
      "name" : {
        "en" : "System time used as seed in random number generator"
      },
      "description" : {
        "en" : "Generating random number using system time as the seed may cause the instance to return a predictable sequence of numbers unfit for secure use."
      },
      "local_effect" : {
        "en" : "An attacker may predict generated random number with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 337,
        "impact" : "Medium",
        "subcategory" : "secure_random_seed_sys_time",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 845
      }
    },
    {
      "type" : "predictable_random_seed",
      "subtype" : "system_time",
      "code-language" : "kotlin",
      "name" : {
        "en" : "System time used as seed in random number generator"
      },
      "description" : {
        "en" : "Generating random number using system time as the seed may cause the instance to return a predictable sequence of numbers unfit for secure use."
      },
      "local_effect" : {
        "en" : "An attacker may predict generated random number with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 337,
        "impact" : "Medium",
        "subcategory" : "secure_random_seed_sys_time",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 845
      }
    },
    {
      "type" : "printf_argument_error",
      "subtype" : "extra_printf_arg",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Extra argument to printf format specifier"
      },
      "description" : {
        "en" : "An extraneous argument was passed to a printf function."
      },
      "local_effect" : {
        "en" : "An argument was passed that does not match any format specifier. It will be ignored and likely indicates an error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 685,
        "impact" : "Low",
        "subcategory" : "extra_printf_arg",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1135
      }
    },
    {
      "type" : "printf_argument_error",
      "subtype" : "extra_printf_arg",
      "code-language" : "cuda",
      "name" : {
        "en" : "Extra argument to printf format specifier"
      },
      "description" : {
        "en" : "An extraneous argument was passed to a printf function."
      },
      "local_effect" : {
        "en" : "An argument was passed that does not match any format specifier. It will be ignored and likely indicates an error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 685,
        "impact" : "Low",
        "subcategory" : "extra_printf_arg",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1135
      }
    },
    {
      "type" : "printf_argument_error",
      "subtype" : "extra_printf_arg",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Extra argument to printf format specifier"
      },
      "description" : {
        "en" : "An extraneous argument was passed to a printf function."
      },
      "local_effect" : {
        "en" : "An argument was passed that does not match any format specifier. It will be ignored and likely indicates an error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 685,
        "impact" : "Low",
        "subcategory" : "extra_printf_arg",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1135
      }
    },
    {
      "type" : "printf_argument_error",
      "subtype" : "invalid_printf_format_string",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Invalid printf format string"
      },
      "description" : {
        "en" : "The format string passed to printf contains errors."
      },
      "local_effect" : {
        "en" : "The format string passed to printf contains errors, leading to undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 475,
        "impact" : "Medium",
        "subcategory" : "invalid_printf_format_string",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 959
      }
    },
    {
      "type" : "printf_argument_error",
      "subtype" : "invalid_printf_format_string",
      "code-language" : "cuda",
      "name" : {
        "en" : "Invalid printf format string"
      },
      "description" : {
        "en" : "The format string passed to printf contains errors."
      },
      "local_effect" : {
        "en" : "The format string passed to printf contains errors, leading to undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 475,
        "impact" : "Medium",
        "subcategory" : "invalid_printf_format_string",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 959
      }
    },
    {
      "type" : "printf_argument_error",
      "subtype" : "invalid_printf_format_string",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Invalid printf format string"
      },
      "description" : {
        "en" : "The format string passed to printf contains errors."
      },
      "local_effect" : {
        "en" : "The format string passed to printf contains errors, leading to undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 475,
        "impact" : "Medium",
        "subcategory" : "invalid_printf_format_string",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 959
      }
    },
    {
      "type" : "printf_argument_error",
      "subtype" : "invalid_type_printf_arg",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Invalid type in argument to printf format specifier"
      },
      "description" : {
        "en" : "An argument with the wrong type was passed to a print format specifier."
      },
      "local_effect" : {
        "en" : "An argument with the wrong type was passed to a format specifier, leading to undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 686,
        "impact" : "Medium",
        "subcategory" : "invalid_type_printf_arg",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1136
      }
    },
    {
      "type" : "printf_argument_error",
      "subtype" : "invalid_type_printf_arg",
      "code-language" : "cuda",
      "name" : {
        "en" : "Invalid type in argument to printf format specifier"
      },
      "description" : {
        "en" : "An argument with the wrong type was passed to a print format specifier."
      },
      "local_effect" : {
        "en" : "An argument with the wrong type was passed to a format specifier, leading to undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 686,
        "impact" : "Medium",
        "subcategory" : "invalid_type_printf_arg",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1136
      }
    },
    {
      "type" : "printf_argument_error",
      "subtype" : "invalid_type_printf_arg",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Invalid type in argument to printf format specifier"
      },
      "description" : {
        "en" : "An argument with the wrong type was passed to a print format specifier."
      },
      "local_effect" : {
        "en" : "An argument with the wrong type was passed to a format specifier, leading to undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 686,
        "impact" : "Medium",
        "subcategory" : "invalid_type_printf_arg",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1136
      }
    },
    {
      "type" : "printf_argument_error",
      "subtype" : "missing_printf_arg",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Missing argument to printf format specifier"
      },
      "description" : {
        "en" : "A printf format string requires an argument that was not provided."
      },
      "local_effect" : {
        "en" : "A printf format string requires an argument that was not provided, leading to undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 685,
        "impact" : "Medium",
        "subcategory" : "missing_printf_arg",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1135
      }
    },
    {
      "type" : "printf_argument_error",
      "subtype" : "missing_printf_arg",
      "code-language" : "cuda",
      "name" : {
        "en" : "Missing argument to printf format specifier"
      },
      "description" : {
        "en" : "A printf format string requires an argument that was not provided."
      },
      "local_effect" : {
        "en" : "A printf format string requires an argument that was not provided, leading to undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 685,
        "impact" : "Medium",
        "subcategory" : "missing_printf_arg",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1135
      }
    },
    {
      "type" : "printf_argument_error",
      "subtype" : "missing_printf_arg",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Missing argument to printf format specifier"
      },
      "description" : {
        "en" : "A printf format string requires an argument that was not provided."
      },
      "local_effect" : {
        "en" : "A printf format string requires an argument that was not provided, leading to undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 685,
        "impact" : "Medium",
        "subcategory" : "missing_printf_arg",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1135
      }
    },
    {
      "type" : "race_condition",
      "subtype" : "missing_lock",
      "code-language" : "c#",
      "name" : {
        "en" : "Data race condition"
      },
      "description" : {
        "en" : "Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition"
      },
      "local_effect" : {
        "en" : "The value of the shared data will be determined by the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "race_condition",
      "subtype" : "missing_lock",
      "code-language" : "go",
      "name" : {
        "en" : "Data race condition"
      },
      "description" : {
        "en" : "Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition"
      },
      "local_effect" : {
        "en" : "The value of the shared data will be determined by the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "race_condition",
      "subtype" : "missing_lock",
      "code-language" : "java",
      "name" : {
        "en" : "Data race condition"
      },
      "description" : {
        "en" : "Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition"
      },
      "local_effect" : {
        "en" : "The value of the shared data will be determined by the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "race_condition",
      "subtype" : "missing_lock_on_read",
      "code-language" : "java",
      "name" : {
        "en" : "Unguarded read"
      },
      "description" : {
        "en" : "Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition"
      },
      "local_effect" : {
        "en" : "The value of the shared data will be determined by the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Medium",
        "subcategory" : "unlocked_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "race_condition",
      "subtype" : "missing_lock_on_write",
      "code-language" : "java",
      "name" : {
        "en" : "Unguarded write"
      },
      "description" : {
        "en" : "Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition"
      },
      "local_effect" : {
        "en" : "The value of the shared data will be determined by the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Medium",
        "subcategory" : "unlocked_write",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "race_condition",
      "subtype" : "non_static_guarding_static",
      "code-language" : "c#",
      "name" : {
        "en" : "Data race condition"
      },
      "description" : {
        "en" : "Static field is protected by a per-instance lock"
      },
      "local_effect" : {
        "en" : "No single lock protects the static data, so the value will be determined by the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "race_condition",
      "subtype" : "non_static_guarding_static",
      "code-language" : "java",
      "name" : {
        "en" : "Data race condition"
      },
      "description" : {
        "en" : "Static field is protected by a per-instance lock"
      },
      "local_effect" : {
        "en" : "No single lock protects the static data, so the value of the data will be determined by the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "race_condition",
      "subtype" : "non_static_guarding_static",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Data race condition"
      },
      "description" : {
        "en" : "Static field is protected by a per-instance lock"
      },
      "local_effect" : {
        "en" : "No single lock protects the static data, so the value of the data will be determined by the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "rails_default_routes",
      "subtype" : "all_default_routes_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Default routes"
      },
      "description" : {
        "en" : "The application has a default routes setting, which allows any public method on any controller to be called directly as a routable action. Not all methods are intended to be used as routes. This might allow unauthorized or unexpected execution of controller code. The recommended best practice is to explicitly define each route."
      },
      "local_effect" : {
        "en" : "All public controller methods might be accessed as routable actions."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 862,
        "impact" : "High",
        "subcategory" : "all_default_routes_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1292
      }
    },
    {
      "type" : "rails_default_routes",
      "subtype" : "controller_default_routes_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Default routes"
      },
      "description" : {
        "en" : "The routing configuration for this controller allows any public method on this controller to be called directly as a routable action. Not all methods are intended to be used as routes. This might allow unauthorized or unexpected execution of controller code. The recommended best practice is to explicitly define each route."
      },
      "local_effect" : {
        "en" : "All public controller methods might be accessed as routable actions."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 862,
        "impact" : "Medium",
        "subcategory" : "controller_default_routes_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1292
      }
    },
    {
      "type" : "rails_default_routes",
      "subtype" : "cve_2014_0130_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Remote code execution"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a vulnerability in the 'implicit render' functionality in Ruby on Rails. The implicit render functionality allows controllers to render a template, even if there is no explicit action with the corresponding name. This module does not perform adequate input sanitization which could allow an attacker to use a specially crafted request to retrieve arbitrary files from the Ruby on Rails application server.\n\nIn order to be vulnerable an application must specifically use globbing routes in combination with the :action parameter. The purpose of the route globbing feature is to allow parameters to contain characters that would otherwise be regarded as separators, for example '/' and '.'. As these characters have semantic meaning within template filenames, it is highly unlikely that applications are deliberately combining these functions."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended files or cause unexpected code to execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 400,
        "impact" : "High",
        "subcategory" : "cve_2014_0130_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 894
      }
    },
    {
      "type" : "rails_default_routes",
      "subtype" : "cve_2014_0130_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Remote code execution"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a vulnerability in the 'implicit render' functionality in Ruby on Rails. The implicit render functionality allows controllers to render a template, even if there is no explicit action with the corresponding name. This module does not perform adequate input sanitization which could allow an attacker to use a specially crafted request to retrieve arbitrary files from the Ruby on Rails application server.\n\nIn order to be vulnerable an application must specifically use globbing routes in combination with the :action parameter. The purpose of the route globbing feature is to allow parameters to contain characters that would otherwise be regarded as separators, for example '/' and '.'. As these characters have semantic meaning within template filenames, it is highly unlikely that applications are deliberately combining these functions."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended files or cause unexpected code to execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 400,
        "impact" : "Medium",
        "subcategory" : "cve_2014_0130_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 894
      }
    },
    {
      "type" : "rails_devise_config",
      "subtype" : "devise_encryptor_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Authentication"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive, and/or without using a random and unique salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover passwords with feasible amounts of computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 916,
        "impact" : "High",
        "subcategory" : "devise_encryptor_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 26
      }
    },
    {
      "type" : "rails_devise_config",
      "subtype" : "devise_lock_strategy_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Authentication"
      },
      "description" : {
        "en" : "Unless the application has other rate-limiting in place for login attempts, the Devise lockout strategy of failed_attempts is recommended. This will lock accounts after a set number of failed logins. For less sensitive applications, the recommended \"unlock strategy\" is both to enable locks to expire after a time and also send an email to the user."
      },
      "local_effect" : {
        "en" : "Account credential brute forcing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 307,
        "impact" : "Low",
        "subcategory" : "devise_lock_strategy_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 289
      }
    },
    {
      "type" : "rails_devise_config",
      "subtype" : "devise_paranoid_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Authentication"
      },
      "description" : {
        "en" : "The paranoid setting for Devise changes the default messages shown for login failures to hide whether the username exists. This is intended to prevent user enumeration. If usernames are exposed or validated elsewhere (for example, profile and registration pages), there is no advantage to turning on paranoid mode in Devise. For less sensitive applications, user-friendliness might also outweigh the security concerns of user enumeration."
      },
      "local_effect" : {
        "en" : "Username enumeration."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 0,
        "impact" : "Low",
        "subcategory" : "devise_paranoid_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 170
      }
    },
    {
      "type" : "rails_devise_config",
      "subtype" : "devise_password_length_max_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Authentication"
      },
      "description" : {
        "en" : "The NIST recommended maximum password length is 64 characters. The default for Devise is 128 characters. Consider increasing the password length limit to allow for more secure passwords."
      },
      "local_effect" : {
        "en" : "An attacker may recover passwords with feasible amounts of computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 521,
        "impact" : "Low",
        "subcategory" : "devise_password_length_max_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 25
      }
    },
    {
      "type" : "rails_devise_config",
      "subtype" : "devise_password_length_max_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Authentication"
      },
      "description" : {
        "en" : "The NIST recommended maximum password length is 64 characters. The default for Devise is 128 characters. Consider increasing the password length limit to allow for more secure passwords."
      },
      "local_effect" : {
        "en" : "An attacker may recover passwords with feasible amounts of computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 521,
        "impact" : "Medium",
        "subcategory" : "devise_password_length_max_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 25
      }
    },
    {
      "type" : "rails_devise_config",
      "subtype" : "devise_password_length_min_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Authentication"
      },
      "description" : {
        "en" : "The NIST recommended minimum password length is 8 characters. However, many basic passwords such as password meet the 8 character minimum. Depending on the sensitivity of your application and the sophistication of your users, consider increasing the minimum to 10 or more characters."
      },
      "local_effect" : {
        "en" : "An attacker may recover passwords with feasible amounts of computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 521,
        "impact" : "Low",
        "subcategory" : "devise_password_length_min_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 25
      }
    },
    {
      "type" : "rails_devise_config",
      "subtype" : "devise_password_length_min_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Authentication"
      },
      "description" : {
        "en" : "The NIST recommended minimum password length is 8 characters. However, many basic passwords such as password meet the 8 character minimum. Depending on the sensitivity of your application and the sophistication of your users, consider increasing the minimum to 10 or more characters."
      },
      "local_effect" : {
        "en" : "An attacker may recover passwords with feasible amounts of computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 521,
        "impact" : "Medium",
        "subcategory" : "devise_password_length_min_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 25
      }
    },
    {
      "type" : "rails_devise_config",
      "subtype" : "devise_reset_timeout_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Authentication"
      },
      "description" : {
        "en" : "This setting controls how quickly reset links expire. The interval should be long enough that a regular user has time to receive the email, open the email, and reset the password. The Devise default is 30 minutes. Long-lived reset tokens are dangerous since they allow attackers to takeover an account. Although emails are expected to be private, they can be leaked, intercepted, or accidentally forwarded. To reduce attack surface, limit the lifetime of reset tokens to a reasonably short period of time."
      },
      "local_effect" : {
        "en" : "Reset link expiration time is too long."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 263,
        "impact" : "High",
        "subcategory" : "devise_reset_timeout_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1344
      }
    },
    {
      "type" : "rails_missing_filter_action",
      "subtype" : "missing_action_filter_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Missing action"
      },
      "description" : {
        "en" : "The before_action filter references a method that does not appear to be defined for this controller. This might be the result of a typo, incomplete code removal, or missing code. Missing or misapplied filters might cause unexpected behavior and security issues."
      },
      "local_effect" : {
        "en" : "Specified filter might not exist."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 862,
        "impact" : "Low",
        "subcategory" : "missing_action_filter_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1405
      }
    },
    {
      "type" : "rce",
      "subtype" : "template_injection",
      "code-language" : "go",
      "name" : {
        "en" : "Remote code execution via template source injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a context that can execute template code."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program in an unintended way or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 94,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "rce",
      "subtype" : "template_injection",
      "code-language" : "javascript",
      "name" : {
        "en" : "Remote code execution via template source injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a context that can execute JavaScript code."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program in an unintended way or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 94,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "rce",
      "subtype" : "template_injection",
      "code-language" : "python",
      "name" : {
        "en" : "Remote code execution via template source injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a context that can execute Python code."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program in an unintended way or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 94,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "rce",
      "subtype" : "template_injection",
      "code-language" : "typescript",
      "name" : {
        "en" : "Remote code execution via template source injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a context that can execute JavaScript code."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program in an unintended way or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 94,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "regex_confusion",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Unintended regular expression"
      },
      "description" : {
        "en" : "A string intended to be matched literally is instead treated as a regular expression, changing its meaning."
      },
      "local_effect" : {
        "en" : "The string manipulation will return incorrect results for some inputs."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 185,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 708
      }
    },
    {
      "type" : "regex_injection",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Regular expression injection"
      },
      "description" : {
        "en" : "A regular expression is constructed from a user-controllable string."
      },
      "local_effect" : {
        "en" : "An attacker may be able to retrieve sensitive information, alter the behavior of the program, or exhaust resources within the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 624,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 361
      }
    },
    {
      "type" : "regex_injection",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Regular expression injection"
      },
      "description" : {
        "en" : "A regular expression is constructed from a user-controllable string."
      },
      "local_effect" : {
        "en" : "An attacker may be able to retrieve sensitive information, alter the behavior of the program, or exhaust resources within the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 624,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 361
      }
    },
    {
      "type" : "regex_injection",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Regular expression injection"
      },
      "description" : {
        "en" : "A regular expression is constructed from a user-controllable string."
      },
      "local_effect" : {
        "en" : "An attacker may be able to retrieve sensitive information, alter the behavior of the program, or exhaust resources within the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 624,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 361
      }
    },
    {
      "type" : "regex_injection",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Regular expression injection"
      },
      "description" : {
        "en" : "A regular expression is constructed from a user-controllable string."
      },
      "local_effect" : {
        "en" : "An attacker may be able to retrieve sensitive information, alter the behavior of the program, or exhaust resources within the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 624,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 361
      }
    },
    {
      "type" : "regex_injection",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Regular expression injection"
      },
      "description" : {
        "en" : "A regular expression is constructed from a user-controllable string."
      },
      "local_effect" : {
        "en" : "An attacker may be able to retrieve sensitive information, alter the behavior of the program, or exhaust resources within the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 624,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 361
      }
    },
    {
      "type" : "regex_injection",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Regular expression injection"
      },
      "description" : {
        "en" : "A regular expression is constructed from a user-controllable string."
      },
      "local_effect" : {
        "en" : "An attacker may be able to retrieve sensitive information, alter the behavior of the program, or exhaust resources within the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 624,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 361
      }
    },
    {
      "type" : "regex_injection",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Regular expression injection"
      },
      "description" : {
        "en" : "A regular expression is constructed from a user-controllable string."
      },
      "local_effect" : {
        "en" : "An attacker may be able to retrieve sensitive information, alter the behavior of the program, or exhaust resources within the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 624,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 361
      }
    },
    {
      "type" : "regex_injection",
      "subtype" : "regex_dos_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Denial of service"
      },
      "description" : {
        "en" : "A regular expression is constructed from a user-controllable string."
      },
      "local_effect" : {
        "en" : "An attacker may be able to retrieve sensitive information, alter the behavior of the program, or exhaust resources within the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 94,
        "impact" : "High",
        "subcategory" : "regex_dos_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 361
      }
    },
    {
      "type" : "regex_injection",
      "subtype" : "regex_dos_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Denial of service"
      },
      "description" : {
        "en" : "A regular expression is constructed from a user-controllable string."
      },
      "local_effect" : {
        "en" : "An attacker may be able to retrieve sensitive information, alter the behavior of the program, or exhaust resources within the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 94,
        "impact" : "Low",
        "subcategory" : "regex_dos_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 361
      }
    },
    {
      "type" : "regex_injection",
      "subtype" : "regex_dos_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Denial of service"
      },
      "description" : {
        "en" : "A regular expression is constructed from a user-controllable string."
      },
      "local_effect" : {
        "en" : "An attacker may be able to retrieve sensitive information, alter the behavior of the program, or exhaust resources within the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 94,
        "impact" : "Medium",
        "subcategory" : "regex_dos_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 361
      }
    },
    {
      "type" : "regex_missing_anchor",
      "subtype" : "validation_regex_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Format validation"
      },
      "description" : {
        "en" : "The regular expression anchors ^ and $ match the beginning and end of a line, respectively. Rails will convert the %0A URL encoding to a newline, allowing an attacker to generate an input that has valid values followed or preceded by a newline character. The rest of the input may contain arbitrary characters. Use of A to anchor to the beginning of the string and z to anchor to the end of the string ensures the entire string must match."
      },
      "local_effect" : {
        "en" : "Missing regular expression anchors allow validation to be bypassed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 777,
        "impact" : "High",
        "subcategory" : "validation_regex_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1184
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Resource leak"
      },
      "description" : {
        "en" : "Leak of a system resource such as streams, channels, or other resources"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 404,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Resource leak"
      },
      "description" : {
        "en" : "Leak of a system resource"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 404,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Resource leak"
      },
      "description" : {
        "en" : "Leak of memory or pointers to system resources"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 404,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Resource leak"
      },
      "description" : {
        "en" : "Leak of a system resource such as streams, channels, or other resources"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 404,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "channel",
      "code-language" : "c#",
      "name" : {
        "en" : "Channel leak"
      },
      "description" : {
        "en" : "Leak of a channel object"
      },
      "local_effect" : {
        "en" : "The resource underlying the channel will remain open and unused, reducing the future availability of channels."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 404,
        "impact" : "High",
        "subcategory" : "channel",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "channel",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Channel leak"
      },
      "description" : {
        "en" : "Leak of a channel object"
      },
      "local_effect" : {
        "en" : "The resource underlying the channel will remain open and unused, reducing the future availability of channels."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 404,
        "impact" : "High",
        "subcategory" : "channel",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "database",
      "code-language" : "c#",
      "name" : {
        "en" : "Database connection leak"
      },
      "description" : {
        "en" : "Leak of a database connection"
      },
      "local_effect" : {
        "en" : "The database connection will remain open and unused, reducing the future availability of other connections."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 404,
        "impact" : "High",
        "subcategory" : "database",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "database",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Database connection leak"
      },
      "description" : {
        "en" : "Leak of a database connection"
      },
      "local_effect" : {
        "en" : "The database connection will remain open and unused, reducing the future availability of other connections."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 404,
        "impact" : "High",
        "subcategory" : "database",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "exceptional_path",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Resource leak on an exceptional path"
      },
      "description" : {
        "en" : "Leak of a system resource on an exception path (probably error handling)"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Exceptional resource leaks",
        "cweCategory" : 404,
        "impact" : "Low",
        "subcategory" : "exceptional_path",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "exceptional_path",
      "code-language" : "c#",
      "name" : {
        "en" : "Resource leak on an exceptional path"
      },
      "description" : {
        "en" : "Leak of a system resource such as streams, channels, or other resources on an exception path (probably error handling)"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Exceptional resource leaks",
        "cweCategory" : 404,
        "impact" : "Low",
        "subcategory" : "exceptional_path",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "exceptional_path",
      "code-language" : "cuda",
      "name" : {
        "en" : "Resource leak on an exceptional path"
      },
      "description" : {
        "en" : "Leak of a system resource on an exception path (probably error handling)"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Exceptional resource leaks",
        "cweCategory" : 404,
        "impact" : "Low",
        "subcategory" : "exceptional_path",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "exceptional_path",
      "code-language" : "java",
      "name" : {
        "en" : "Resource leak on an exceptional path"
      },
      "description" : {
        "en" : "Leak of a system resource on an exception path (probably error handling)"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Exceptional resource leaks",
        "cweCategory" : 404,
        "impact" : "Low",
        "subcategory" : "exceptional_path",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "exceptional_path",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Resource leak on an exceptional path"
      },
      "description" : {
        "en" : "Leak of a system resource on an exception path (probably error handling)"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Exceptional resource leaks",
        "cweCategory" : 404,
        "impact" : "Low",
        "subcategory" : "exceptional_path",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "exceptional_path",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Resource leak on an exceptional path"
      },
      "description" : {
        "en" : "Leak of a system resource on an exception path (probably error handling)"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Exceptional resource leaks",
        "cweCategory" : 404,
        "impact" : "Low",
        "subcategory" : "exceptional_path",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "exceptional_path",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Resource leak on an exceptional path"
      },
      "description" : {
        "en" : "Leak of a system resource such as streams, channels, or other resources on an exception path (probably error handling)"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Exceptional resource leaks",
        "cweCategory" : 404,
        "impact" : "Low",
        "subcategory" : "exceptional_path",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "fds_handles",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Integer handle or fd leak"
      },
      "description" : {
        "en" : "Leak of a system resource with an integer descriptor such as a file descriptor or a handle in Windows"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 775,
        "impact" : "High",
        "subcategory" : "fds_handles",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1183
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "fds_handles",
      "code-language" : "cuda",
      "name" : {
        "en" : "Integer handle or fd leak"
      },
      "description" : {
        "en" : "Leak of a system resource with an integer descriptor such as a file descriptor or a handle in Windows"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 775,
        "impact" : "High",
        "subcategory" : "fds_handles",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1183
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "fds_handles",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Integer handle or fd leak"
      },
      "description" : {
        "en" : "Leak of a system resource with an integer descriptor such as a file descriptor or a handle in Windows"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 775,
        "impact" : "High",
        "subcategory" : "fds_handles",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1183
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "memory",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Resource leak"
      },
      "description" : {
        "en" : "Leak of memory or pointers to system resources"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 404,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "memory",
      "code-language" : "cuda",
      "name" : {
        "en" : "Resource leak"
      },
      "description" : {
        "en" : "Leak of memory or pointers to system resources"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 404,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "memory",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Resource leak"
      },
      "description" : {
        "en" : "Leak of memory or pointers to system resources"
      },
      "local_effect" : {
        "en" : "The system resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 404,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "socket",
      "code-language" : "c#",
      "name" : {
        "en" : "Socket leak"
      },
      "description" : {
        "en" : "Leak of a socket resource"
      },
      "local_effect" : {
        "en" : "The system socket will remain open and unused, reducing the future availability of sockets for other purposes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 403,
        "impact" : "High",
        "subcategory" : "socket",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1183
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "socket",
      "code-language" : "java",
      "name" : {
        "en" : "Socket leak"
      },
      "description" : {
        "en" : "Leak of a socket resource"
      },
      "local_effect" : {
        "en" : "The system socket will remain open and unused, reducing the future availability of sockets for other purposes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 403,
        "impact" : "High",
        "subcategory" : "socket",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1183
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "socket",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Socket leak"
      },
      "description" : {
        "en" : "Leak of a socket resource"
      },
      "local_effect" : {
        "en" : "The system socket will remain open and unused, reducing the future availability of sockets for other purposes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 403,
        "impact" : "High",
        "subcategory" : "socket",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1183
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "socket",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Socket leak"
      },
      "description" : {
        "en" : "Leak of a socket resource"
      },
      "local_effect" : {
        "en" : "The system socket will remain open and unused, reducing the future availability of sockets for other purposes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 403,
        "impact" : "High",
        "subcategory" : "socket",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1183
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "stream",
      "code-language" : "c#",
      "name" : {
        "en" : "Stream leak"
      },
      "description" : {
        "en" : "Leak of a stream representing a file or other resource"
      },
      "local_effect" : {
        "en" : "The stream's underlying resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 404,
        "impact" : "High",
        "subcategory" : "stream",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "stream",
      "code-language" : "java",
      "name" : {
        "en" : "Stream leak"
      },
      "description" : {
        "en" : "Leak of a stream representing a file or other resource"
      },
      "local_effect" : {
        "en" : "The stream's underlying resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 404,
        "impact" : "High",
        "subcategory" : "stream",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "stream",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Stream leak"
      },
      "description" : {
        "en" : "Leak of a stream representing a file or other resource"
      },
      "local_effect" : {
        "en" : "The stream's underlying resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 404,
        "impact" : "High",
        "subcategory" : "stream",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "stream",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Stream leak"
      },
      "description" : {
        "en" : "Leak of a stream representing a file or other resource"
      },
      "local_effect" : {
        "en" : "The stream's underlying resource will not be reclaimed and reused, reducing the future availability of the resource."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 404,
        "impact" : "High",
        "subcategory" : "stream",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "resource_leak",
      "subtype" : "unsafe_symbol_creation_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Denial of service"
      },
      "description" : {
        "en" : "Prior to Ruby 2.2.0, Symbols were not garbage collected. Code that creates symbols based on user input could be used to fill up the memory on the server, causing a denial of service attack."
      },
      "local_effect" : {
        "en" : "Unlimited symbol creation might cause memory exhaustion."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 400,
        "impact" : "Low",
        "subcategory" : "unsafe_symbol_creation_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 206
      }
    },
    {
      "type" : "return_local",
      "subtype" : "return",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Pointer to local outside scope"
      },
      "description" : {
        "en" : "Pointer to a local stack variable returned or used outside scope"
      },
      "local_effect" : {
        "en" : "Dereferencing the returned or out-of-scope stack pointer will access an invalid location on the stack after its scope or after the function returns."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 562,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1033
      }
    },
    {
      "type" : "return_local",
      "subtype" : "return",
      "code-language" : "cuda",
      "name" : {
        "en" : "Pointer to local outside scope"
      },
      "description" : {
        "en" : "Pointer to a local stack variable returned or used outside scope"
      },
      "local_effect" : {
        "en" : "Dereferencing the returned or out-of-scope stack pointer will access an invalid location on the stack after its scope or after the function returns."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 562,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1033
      }
    },
    {
      "type" : "return_local",
      "subtype" : "return",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Pointer to local outside scope"
      },
      "description" : {
        "en" : "Pointer to a local stack variable returned or used outside scope"
      },
      "local_effect" : {
        "en" : "Dereferencing the returned or out-of-scope stack pointer will access an invalid location on the stack after its scope or after the function returns."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 562,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1033
      }
    },
    {
      "type" : "return_local",
      "subtype" : "store",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Pointer to local outside scope"
      },
      "description" : {
        "en" : "Pointer to a local stack variable stored in a field or global variable"
      },
      "local_effect" : {
        "en" : "Later dereferencing of the saved stack pointer will access an invalid location on the stack outside its scope or after the function returns."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 562,
        "impact" : "High",
        "subcategory" : "escape_local_addr_to_fields_or_globals",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1033
      }
    },
    {
      "type" : "return_local",
      "subtype" : "store",
      "code-language" : "cuda",
      "name" : {
        "en" : "Pointer to local outside scope"
      },
      "description" : {
        "en" : "Pointer to a local stack variable stored in a field or global variable"
      },
      "local_effect" : {
        "en" : "Later dereferencing of the saved stack pointer will access an invalid location on the stack outside its scope or after the function returns."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 562,
        "impact" : "High",
        "subcategory" : "escape_local_addr_to_fields_or_globals",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1033
      }
    },
    {
      "type" : "return_local",
      "subtype" : "store",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Pointer to local outside scope"
      },
      "description" : {
        "en" : "Pointer to a local stack variable stored in a field or global variable"
      },
      "local_effect" : {
        "en" : "Later dereferencing of the saved stack pointer will access an invalid location on the stack outside its scope or after the function returns."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 562,
        "impact" : "High",
        "subcategory" : "escape_local_addr_to_fields_or_globals",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1033
      }
    },
    {
      "type" : "reverse_negative",
      "subtype" : "array_index_read",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Negative array index read"
      },
      "description" : {
        "en" : "Read from array at negative index"
      },
      "local_effect" : {
        "en" : "A memory location at a negative offset from the beginning of the array will be read, resulting in incorrect values."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 129,
        "impact" : "High",
        "subcategory" : "array_index_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 568
      }
    },
    {
      "type" : "reverse_negative",
      "subtype" : "array_index_read",
      "code-language" : "cuda",
      "name" : {
        "en" : "Negative array index read"
      },
      "description" : {
        "en" : "Read from array at negative index"
      },
      "local_effect" : {
        "en" : "A memory location at a negative offset from the beginning of the array will be read, resulting in incorrect values."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 129,
        "impact" : "High",
        "subcategory" : "array_index_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 568
      }
    },
    {
      "type" : "reverse_negative",
      "subtype" : "array_index_read",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Negative array index read"
      },
      "description" : {
        "en" : "Read from array at negative index"
      },
      "local_effect" : {
        "en" : "A memory location at a negative offset from the beginning of the array will be read, resulting in incorrect values."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 129,
        "impact" : "High",
        "subcategory" : "array_index_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 568
      }
    },
    {
      "type" : "reverse_negative",
      "subtype" : "array_index_write",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Negative array index write"
      },
      "description" : {
        "en" : "Write to array at negative index"
      },
      "local_effect" : {
        "en" : "A memory location at a negative offset from the beginning of the array will be written, likely causing a crash later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 129,
        "impact" : "High",
        "subcategory" : "array_index_write",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "reverse_negative",
      "subtype" : "array_index_write",
      "code-language" : "cuda",
      "name" : {
        "en" : "Negative array index write"
      },
      "description" : {
        "en" : "Write to array at negative index"
      },
      "local_effect" : {
        "en" : "A memory location at a negative offset from the beginning of the array will be written, likely causing a crash later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 129,
        "impact" : "High",
        "subcategory" : "array_index_write",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "reverse_negative",
      "subtype" : "array_index_write",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Negative array index write"
      },
      "description" : {
        "en" : "Write to array at negative index"
      },
      "local_effect" : {
        "en" : "A memory location at a negative offset from the beginning of the array will be written, likely causing a crash later."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 129,
        "impact" : "High",
        "subcategory" : "array_index_write",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "reverse_negative",
      "subtype" : "critical_argument",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Argument cannot be negative"
      },
      "description" : {
        "en" : "Negative value used as argument to a function expecting a positive value (for example, size of buffer or allocation)"
      },
      "local_effect" : {
        "en" : "The negative  argument will be interpreted as a very large unsigned value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "critical_argument",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "reverse_negative",
      "subtype" : "critical_argument",
      "code-language" : "cuda",
      "name" : {
        "en" : "Argument cannot be negative"
      },
      "description" : {
        "en" : "Negative value used as argument to a function expecting a positive value (for example, size of buffer or allocation)"
      },
      "local_effect" : {
        "en" : "The negative  argument will be interpreted as a very large unsigned value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "critical_argument",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "reverse_negative",
      "subtype" : "critical_argument",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Argument cannot be negative"
      },
      "description" : {
        "en" : "Negative value used as argument to a function expecting a positive value (for example, size of buffer or allocation)"
      },
      "local_effect" : {
        "en" : "The negative  argument will be interpreted as a very large unsigned value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 119,
        "impact" : "High",
        "subcategory" : "critical_argument",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1293
      }
    },
    {
      "type" : "reverse_negative",
      "subtype" : "unsigned",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Improper use of negative value"
      },
      "description" : {
        "en" : "Negative value used incorrectly where positive value is expected"
      },
      "local_effect" : {
        "en" : "The negative value may be interpreted as an unsigned value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 394,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 889
      }
    },
    {
      "type" : "reverse_negative",
      "subtype" : "unsigned",
      "code-language" : "cuda",
      "name" : {
        "en" : "Improper use of negative value"
      },
      "description" : {
        "en" : "Negative value used incorrectly where positive value is expected"
      },
      "local_effect" : {
        "en" : "The negative value may be interpreted as an unsigned value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 394,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 889
      }
    },
    {
      "type" : "reverse_negative",
      "subtype" : "unsigned",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Improper use of negative value"
      },
      "description" : {
        "en" : "Negative value used incorrectly where positive value is expected"
      },
      "local_effect" : {
        "en" : "The negative value may be interpreted as an unsigned value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 394,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 889
      }
    },
    {
      "type" : "reverse_tabnabbing",
      "subtype" : "reverse_tabnabbing_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Sensitive data leak"
      },
      "description" : {
        "en" : "The anchor tag is generated dynamically and sets the 'target' attribute to '_blank'. The page opened from that link will have access to the 'location' object of the original page through 'window.opener.location'."
      },
      "local_effect" : {
        "en" : "A malicious page linked with this link will be able to navigate the original page to an arbitrary site and perform a phishing attack."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 1022,
        "impact" : "Low",
        "subcategory" : "reverse_tabnabbing_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 284
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "cipher_suite",
      "code-language" : "java",
      "name" : {
        "en" : "Risky cryptographic cipher suite"
      },
      "description" : {
        "en" : "A cipher suite was enabled that is known to be insecure. This may allow an attacker to decrypt or extract sensitive data that is transmitted over the network."
      },
      "local_effect" : {
        "en" : "A use of an insecure cipher suite was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "cipher_suite",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 43
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "cipher_suite",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Risky cryptographic cipher suite"
      },
      "description" : {
        "en" : "A cipher suite was enabled that is known to be insecure. This may allow an attacker to decrypt or extract sensitive data that is transmitted over the network."
      },
      "local_effect" : {
        "en" : "A use of an insecure cipher suite was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "cipher_suite",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 43
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "encryption_decryption",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Risky cryptographic function"
      },
      "description" : {
        "en" : "A risky cryptographic function was used. This may allow an attacker to decrypt encrypted data as the quality of the cryptographic protection is suspect."
      },
      "local_effect" : {
        "en" : "A use of a weak cryptographic method was detected. There exist known ways to compromise the security of the encrypted data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 194
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "encryption_decryption",
      "code-language" : "c#",
      "name" : {
        "en" : "Risky cryptographic function"
      },
      "description" : {
        "en" : "A risky cryptographic function was used. This may allow an attacker to decrypt encrypted data as the quality of the cryptographic protection is suspect."
      },
      "local_effect" : {
        "en" : "A use of a weak cryptographic method was detected. There exist known ways to compromise the security of the encrypted data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 194
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "encryption_decryption",
      "code-language" : "cuda",
      "name" : {
        "en" : "Risky cryptographic function"
      },
      "description" : {
        "en" : "A risky cryptographic function was used. This may allow an attacker to decrypt encrypted data as the quality of the cryptographic protection is suspect."
      },
      "local_effect" : {
        "en" : "A use of a weak cryptographic method was detected. There exist known ways to compromise the security of the encrypted data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 194
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "encryption_decryption",
      "code-language" : "go",
      "name" : {
        "en" : "Risky cryptographic function"
      },
      "description" : {
        "en" : "A risky cryptographic function was used. This may allow an attacker to decrypt encrypted data as the quality of the cryptographic protection is suspect."
      },
      "local_effect" : {
        "en" : "A use of a weak cryptographic method was detected. There exist known ways to compromise the security of the encrypted data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 194
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "encryption_decryption",
      "code-language" : "java",
      "name" : {
        "en" : "Risky cryptographic function"
      },
      "description" : {
        "en" : "A risky cryptographic function was used. This may allow an attacker to decrypt encrypted data as the quality of the cryptographic protection is suspect."
      },
      "local_effect" : {
        "en" : "A use of a weak cryptographic method was detected. There exist known ways to compromise the security of the encrypted data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 194
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "encryption_decryption",
      "code-language" : "javascript",
      "name" : {
        "en" : "Risky cryptographic function"
      },
      "description" : {
        "en" : "A risky cryptographic function was used. This may allow an attacker to decrypt encrypted data as the quality of the cryptographic protection is suspect."
      },
      "local_effect" : {
        "en" : "A use of a weak cryptographic method was detected. There exist known ways to compromise the security of the encrypted data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 194
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "encryption_decryption",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Risky cryptographic function"
      },
      "description" : {
        "en" : "A risky cryptographic function was used. This may allow an attacker to decrypt encrypted data as the quality of the cryptographic protection is suspect."
      },
      "local_effect" : {
        "en" : "A use of a weak cryptographic method was detected. There exist known ways to compromise the security of the encrypted data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 194
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "encryption_decryption",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Risky cryptographic function"
      },
      "description" : {
        "en" : "A risky cryptographic function was used. This may allow an attacker to decrypt encrypted data as the quality of the cryptographic protection is suspect."
      },
      "local_effect" : {
        "en" : "A use of a weak cryptographic method was detected. There exist known ways to compromise the security of the encrypted data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 194
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "encryption_decryption",
      "code-language" : "python",
      "name" : {
        "en" : "Risky cryptographic function"
      },
      "description" : {
        "en" : "A risky cryptographic function was used. This may allow an attacker to decrypt encrypted data as the quality of the cryptographic protection is suspect."
      },
      "local_effect" : {
        "en" : "A use of a weak cryptographic method was detected. There exist known ways to compromise the security of the encrypted data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 194
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "encryption_decryption",
      "code-language" : "typescript",
      "name" : {
        "en" : "Risky cryptographic function"
      },
      "description" : {
        "en" : "A risky cryptographic function was used. This may allow an attacker to decrypt encrypted data as the quality of the cryptographic protection is suspect."
      },
      "local_effect" : {
        "en" : "A use of a weak cryptographic method was detected. There exist known ways to compromise the security of the encrypted data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 194
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "encryption_decryption",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Risky cryptographic function"
      },
      "description" : {
        "en" : "A risky cryptographic function was used. This may allow an attacker to decrypt encrypted data as the quality of the cryptographic protection is suspect."
      },
      "local_effect" : {
        "en" : "A use of a weak cryptographic method was detected. There exist known ways to compromise the security of the encrypted data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 194
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "hashing",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Risky cryptographic hashing function"
      },
      "description" : {
        "en" : "A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."
      },
      "local_effect" : {
        "en" : "A use of a weak hashing algorithm was detected. There exist well known ways to produce collisions on the hashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 328,
        "impact" : "Medium",
        "subcategory" : "hashing",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 64
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "hashing",
      "code-language" : "c#",
      "name" : {
        "en" : "Risky cryptographic hashing function"
      },
      "description" : {
        "en" : "A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."
      },
      "local_effect" : {
        "en" : "A use of a weak hashing algorithm was detected. There exist well known ways to produce collisions on the hashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 328,
        "impact" : "Medium",
        "subcategory" : "hashing",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 64
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "hashing",
      "code-language" : "cuda",
      "name" : {
        "en" : "Risky cryptographic hashing function"
      },
      "description" : {
        "en" : "A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."
      },
      "local_effect" : {
        "en" : "A use of a weak hashing algorithm was detected. There exist well known ways to produce collisions on the hashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 328,
        "impact" : "Medium",
        "subcategory" : "hashing",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 64
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "hashing",
      "code-language" : "go",
      "name" : {
        "en" : "Risky cryptographic hashing function"
      },
      "description" : {
        "en" : "A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."
      },
      "local_effect" : {
        "en" : "A use of a weak hashing algorithm was detected. There exist well known ways to produce collisions on the hashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 328,
        "impact" : "Medium",
        "subcategory" : "hashing",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 64
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "hashing",
      "code-language" : "java",
      "name" : {
        "en" : "Risky cryptographic hashing function"
      },
      "description" : {
        "en" : "A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."
      },
      "local_effect" : {
        "en" : "A use of a weak hashing algorithm was detected. There exist well known ways to produce collisions on the hashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 328,
        "impact" : "Medium",
        "subcategory" : "hashing",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 64
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "hashing",
      "code-language" : "javascript",
      "name" : {
        "en" : "Risky cryptographic hashing function"
      },
      "description" : {
        "en" : "A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."
      },
      "local_effect" : {
        "en" : "A use of a weak hashing algorithm was detected. There exist well known ways to produce collisions on the hashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 328,
        "impact" : "Medium",
        "subcategory" : "hashing",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 64
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "hashing",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Risky cryptographic hashing function"
      },
      "description" : {
        "en" : "A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."
      },
      "local_effect" : {
        "en" : "A use of a weak hashing algorithm was detected. There exist well known ways to produce collisions on the hashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 328,
        "impact" : "Medium",
        "subcategory" : "hashing",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 64
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "hashing",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Risky cryptographic hashing function"
      },
      "description" : {
        "en" : "A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."
      },
      "local_effect" : {
        "en" : "A use of a weak hashing algorithm was detected. There exist well known ways to produce collisions on the hashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 328,
        "impact" : "Medium",
        "subcategory" : "hashing",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 64
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "hashing",
      "code-language" : "python",
      "name" : {
        "en" : "Risky cryptographic hashing function"
      },
      "description" : {
        "en" : "A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."
      },
      "local_effect" : {
        "en" : "A use of a weak hashing algorithm was detected. There exist well known ways to produce collisions on the hashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 328,
        "impact" : "Medium",
        "subcategory" : "hashing",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 64
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "hashing",
      "code-language" : "typescript",
      "name" : {
        "en" : "Risky cryptographic hashing function"
      },
      "description" : {
        "en" : "A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."
      },
      "local_effect" : {
        "en" : "A use of a weak hashing algorithm was detected. There exist well known ways to produce collisions on the hashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 328,
        "impact" : "Medium",
        "subcategory" : "hashing",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 64
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "hashing",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Risky cryptographic hashing function"
      },
      "description" : {
        "en" : "A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."
      },
      "local_effect" : {
        "en" : "A use of a weak hashing algorithm was detected. There exist well known ways to produce collisions on the hashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 328,
        "impact" : "Medium",
        "subcategory" : "hashing",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 64
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "ssl_protocol",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Risky cryptographic SSL protocol"
      },
      "description" : {
        "en" : "A Secure Sockets Layer (SSL) protocol was enabled that is known to be insecure. This may allow an attacker to decrypt or extract sensitive data that is transmitted over the network."
      },
      "local_effect" : {
        "en" : "A use of an insecure SSL connection protocol was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "ssl_protocol",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 43
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "ssl_protocol",
      "code-language" : "c#",
      "name" : {
        "en" : "Risky cryptographic SSL protocol"
      },
      "description" : {
        "en" : "A Secure Sockets Layer (SSL) protocol was enabled that is known to be insecure. This may allow an attacker to decrypt or extract sensitive data that is transmitted over the network."
      },
      "local_effect" : {
        "en" : "A use of an insecure SSL connection protocol was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "ssl_protocol",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 43
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "ssl_protocol",
      "code-language" : "cuda",
      "name" : {
        "en" : "Risky cryptographic SSL protocol"
      },
      "description" : {
        "en" : "A Secure Sockets Layer (SSL) protocol was enabled that is known to be insecure. This may allow an attacker to decrypt or extract sensitive data that is transmitted over the network."
      },
      "local_effect" : {
        "en" : "A use of an insecure SSL connection protocol was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "ssl_protocol",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 43
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "ssl_protocol",
      "code-language" : "go",
      "name" : {
        "en" : "Risky cryptographic SSL protocol"
      },
      "description" : {
        "en" : "A Secure Sockets Layer (SSL) protocol was enabled that is known to be insecure. This may allow an attacker to decrypt or extract sensitive data that is transmitted over the network."
      },
      "local_effect" : {
        "en" : "A use of an insecure SSL connection protocol was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "ssl_protocol",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1370
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "ssl_protocol",
      "code-language" : "java",
      "name" : {
        "en" : "Risky cryptographic SSL protocol"
      },
      "description" : {
        "en" : "A Secure Sockets Layer (SSL) protocol was enabled that is known to be insecure. This may allow an attacker to decrypt or extract sensitive data that is transmitted over the network."
      },
      "local_effect" : {
        "en" : "A use of an insecure SSL connection protocol was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "ssl_protocol",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 43
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "ssl_protocol",
      "code-language" : "javascript",
      "name" : {
        "en" : "Risky cryptographic SSL protocol"
      },
      "description" : {
        "en" : "A Secure Sockets Layer (SSL) protocol was enabled that is known to be insecure. This may allow an attacker to decrypt or extract sensitive data that is transmitted over the network."
      },
      "local_effect" : {
        "en" : "A use of an insecure SSL connection protocol was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "ssl_protocol",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1370
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "ssl_protocol",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Risky cryptographic SSL protocol"
      },
      "description" : {
        "en" : "A Secure Sockets Layer (SSL) protocol was enabled that is known to be insecure. This may allow an attacker to decrypt or extract sensitive data that is transmitted over the network."
      },
      "local_effect" : {
        "en" : "A use of an insecure SSL connection protocol was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "ssl_protocol",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 43
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "ssl_protocol",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Risky cryptographic SSL protocol"
      },
      "description" : {
        "en" : "A Secure Sockets Layer (SSL) protocol was enabled that is known to be insecure. This may allow an attacker to decrypt or extract sensitive data that is transmitted over the network."
      },
      "local_effect" : {
        "en" : "A use of an insecure SSL connection protocol was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "ssl_protocol",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 43
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "ssl_protocol",
      "code-language" : "python",
      "name" : {
        "en" : "Risky cryptographic SSL protocol"
      },
      "description" : {
        "en" : "A Secure Sockets Layer (SSL) protocol was enabled that is known to be insecure. This may allow an attacker to decrypt or extract sensitive data that is transmitted over the network."
      },
      "local_effect" : {
        "en" : "A use of an insecure SSL connection protocol was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "ssl_protocol",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1370
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "ssl_protocol",
      "code-language" : "typescript",
      "name" : {
        "en" : "Risky cryptographic SSL protocol"
      },
      "description" : {
        "en" : "A Secure Sockets Layer (SSL) protocol was enabled that is known to be insecure. This may allow an attacker to decrypt or extract sensitive data that is transmitted over the network."
      },
      "local_effect" : {
        "en" : "A use of an insecure SSL connection protocol was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "ssl_protocol",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1370
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "ssl_protocol",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Risky cryptographic SSL protocol"
      },
      "description" : {
        "en" : "A Secure Sockets Layer (SSL) protocol was enabled that is known to be insecure. This may allow an attacker to decrypt or extract sensitive data that is transmitted over the network."
      },
      "local_effect" : {
        "en" : "A use of an insecure SSL connection protocol was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 327,
        "impact" : "Medium",
        "subcategory" : "ssl_protocol",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 43
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "user_policy",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Violation of user-specified RISKY_CRYPTO policy"
      },
      "description" : {
        "en" : "A cryptographic function was used in such a way as to violate the user-specified RISKY_CRYPTO policy. This violation may indicate that an attacker could decrypt or otherwise interfere with the encrypted or hashed data."
      },
      "local_effect" : {
        "en" : "A violation of user-specified RISKY_CRYPTO policy was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "custom",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1422
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "user_policy",
      "code-language" : "c#",
      "name" : {
        "en" : "Violation of user-specified RISKY_CRYPTO policy"
      },
      "description" : {
        "en" : "A cryptographic function was used in such a way as to violate the user-specified RISKY_CRYPTO policy. This violation may indicate that an attacker could decrypt or otherwise interfere with the encrypted or hashed data."
      },
      "local_effect" : {
        "en" : "A violation of user-specified RISKY_CRYPTO policy was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "custom",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1422
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "user_policy",
      "code-language" : "cuda",
      "name" : {
        "en" : "Violation of user-specified RISKY_CRYPTO policy"
      },
      "description" : {
        "en" : "A cryptographic function was used in such a way as to violate the user-specified RISKY_CRYPTO policy. This violation may indicate that an attacker could decrypt or otherwise interfere with the encrypted or hashed data."
      },
      "local_effect" : {
        "en" : "A violation of user-specified RISKY_CRYPTO policy was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "custom",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1422
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "user_policy",
      "code-language" : "go",
      "name" : {
        "en" : "Violation of user-specified RISKY_CRYPTO policy"
      },
      "description" : {
        "en" : "A cryptographic function was used in such a way as to violate the user-specified RISKY_CRYPTO policy. This violation may indicate that an attacker could decrypt or otherwise interfere with the encrypted or hashed data."
      },
      "local_effect" : {
        "en" : "A violation of user-specified RISKY_CRYPTO policy was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "custom",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1422
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "user_policy",
      "code-language" : "java",
      "name" : {
        "en" : "Violation of user-specified RISKY_CRYPTO policy"
      },
      "description" : {
        "en" : "A cryptographic function was used in such a way as to violate the user-specified RISKY_CRYPTO policy. This violation may indicate that an attacker could decrypt or otherwise interfere with the encrypted or hashed data."
      },
      "local_effect" : {
        "en" : "A violation of user-specified RISKY_CRYPTO policy was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "custom",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1422
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "user_policy",
      "code-language" : "javascript",
      "name" : {
        "en" : "Violation of user-specified RISKY_CRYPTO policy"
      },
      "description" : {
        "en" : "A cryptographic function was used in such a way as to violate the user-specified RISKY_CRYPTO policy. This violation may indicate that an attacker could decrypt or otherwise interfere with the encrypted or hashed data."
      },
      "local_effect" : {
        "en" : "A violation of user-specified RISKY_CRYPTO policy was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "custom",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1422
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "user_policy",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Violation of user-specified RISKY_CRYPTO policy"
      },
      "description" : {
        "en" : "A cryptographic function was used in such a way as to violate the user-specified RISKY_CRYPTO policy. This violation may indicate that an attacker could decrypt or otherwise interfere with the encrypted or hashed data."
      },
      "local_effect" : {
        "en" : "A violation of user-specified RISKY_CRYPTO policy was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "custom",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1422
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "user_policy",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Violation of user-specified RISKY_CRYPTO policy"
      },
      "description" : {
        "en" : "A cryptographic function was used in such a way as to violate the user-specified RISKY_CRYPTO policy. This violation may indicate that an attacker could decrypt or otherwise interfere with the encrypted or hashed data."
      },
      "local_effect" : {
        "en" : "A violation of user-specified RISKY_CRYPTO policy was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "custom",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1422
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "user_policy",
      "code-language" : "python",
      "name" : {
        "en" : "Violation of user-specified RISKY_CRYPTO policy"
      },
      "description" : {
        "en" : "A cryptographic function was used in such a way as to violate the user-specified RISKY_CRYPTO policy. This violation may indicate that an attacker could decrypt or otherwise interfere with the encrypted or hashed data."
      },
      "local_effect" : {
        "en" : "A violation of user-specified RISKY_CRYPTO policy was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "custom",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1422
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "user_policy",
      "code-language" : "typescript",
      "name" : {
        "en" : "Violation of user-specified RISKY_CRYPTO policy"
      },
      "description" : {
        "en" : "A cryptographic function was used in such a way as to violate the user-specified RISKY_CRYPTO policy. This violation may indicate that an attacker could decrypt or otherwise interfere with the encrypted or hashed data."
      },
      "local_effect" : {
        "en" : "A violation of user-specified RISKY_CRYPTO policy was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "custom",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1422
      }
    },
    {
      "type" : "risky_crypto",
      "subtype" : "user_policy",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Violation of user-specified RISKY_CRYPTO policy"
      },
      "description" : {
        "en" : "A cryptographic function was used in such a way as to violate the user-specified RISKY_CRYPTO policy. This violation may indicate that an attacker could decrypt or otherwise interfere with the encrypted or hashed data."
      },
      "local_effect" : {
        "en" : "A violation of user-specified RISKY_CRYPTO policy was detected."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "custom",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1422
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2010_3933_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Nested attributes"
      },
      "description" : {
        "en" : "This application uses nested attributes and might be vulnerable to CVE-2010-3933.\n\nOfficial description of vulnerability: There is a vulnerability in the nested attributes handling code in some versions of Ruby on Rails. An attacker could manipulate form parameters and make changes to records other than those the developer intended."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "cve_2010_3933_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2011_2929_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Default routes"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a vulnerability in the template selection code in Rails releases after 3.0 that could allow an attacker to render a view they should not have access to.\n\nDue to a bug in the template selection code, an attacker can craft a URL and cause Rails to render an arbitrary view, but not call its corresponding action. This only affects 3.0 applications that use :action in their routes."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended files or cause unexpected code to execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "cve_2011_2929_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 738
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2011_2930_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "This application might use a vulnerable version of quote_table_name that does not properly sanitize user-supplied values."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "cve_2011_2930_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2011_2930_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "This application might use a vulnerable version of quote_table_name that does not properly sanitize user-supplied values."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "cve_2011_2930_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2011_2931_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This application relies on a vulnerable version of strip_tags.\n\nOfficial description of vulnerability: There is a vulnerability in the strip_tags helper in Rails: using specially crafted output an attacker can successfully inject HTML into the document.\n\nThe strip_tags helper in Rails is designed to remove all HTML tags from a string. By using specially crafted values, an attacker can confuse the parser and cause HTML tags to be injected into the response. This can be exploited to inject arbitrary JavaScript into the rendered page."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cve_2011_2931_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2011_2932_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a vulnerability in the escaping code used by Ruby on Rails, using specially crafted malformed unicode strings an attacker can bypass the escaping code. Rails has provided a high performance replacement for ERB::Util.h since version 2.0.0. Due to a bug in the Ruby 1.8 regular expression code this replacement version will fail to escape certain malformed unicode strings. This malformed output will then be interpreted as HTML by some browsers on some operating systems."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cve_2011_2932_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2011_3186_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Response splitting"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a vulnerability in the content type handling in this version of Ruby on Rails that could allow an attacker to inject arbitrary HTTP headers into a response.\n\nThe code in Rails 2.3 that sets the response content type performs insufficient sanitization of the values provided. This means that applications which let the user provide an arbitrary Content-Type header for the response are vulnerable to response splitting attacks."
      },
      "local_effect" : {
        "en" : "An attacker may be able to set important HTTP headers and disable security protections or fix the session ID. The severity of the defect depends on which headers can be manipulated and if the attacker is able to directly or indirectly control the header value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 113,
        "impact" : "Medium",
        "subcategory" : "cve_2011_3186_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 7
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2012_2660_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Official description of vulnerability: Due to the way Active Record interprets parameters in combination with the way that Rack parses query parameters, it is possible for an attacker to issue unexpected database queries with \"IS NULL\" where clauses. This issue does not let an attacker insert arbitrary values into an SQL query, however they can cause the query to check for NULL where most users wouldn't expect it."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "cve_2012_2660_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2012_2661_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a SQL injection vulnerability in Active Record, version 3.0 and later.\n\nDue to the way Active Record handles nested query parameters, an attacker can use a specially crafted request to inject some forms of SQL into your application's SQL queries which use the where method."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "cve_2012_2661_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2012_2695_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Official description of vulnerability: Due to the way Active Record handles nested query parameters, an attacker can use a specially crafted request to inject some forms of SQL into your application's SQL queries."
      },
      "local_effect" : {
        "en" : "A user can change the intent of SQL queries, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "cve_2012_2695_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2012_3424_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Denial of service"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a denial of service vulnerability in Action Pack digest authentication handling in Rails. Impacted code uses any of the with_http_digest controller helper methods."
      },
      "local_effect" : {
        "en" : "A known vulnerability can cause a denial of service vulnerability."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 400,
        "impact" : "High",
        "subcategory" : "cve_2012_3424_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2012_3424_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Denial of service"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a denial of service vulnerability in Action Pack digest authentication handling in Rails. Impacted code uses any of the with_http_digest controller helper methods."
      },
      "local_effect" : {
        "en" : "A known vulnerability can cause a denial of service vulnerability."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 400,
        "impact" : "Low",
        "subcategory" : "cve_2012_3424_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2012_3463_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This application is using a vulnerable version of select_tag in an unsafe manner.\n\nOfficial description of vulnerability: When a \"prompt\" value is supplied to the select_tag helper, the \"prompt\" value is not escaped. If untrusted data is not escaped, and is supplied as the prompt value, there is a potential for cross-site scripting attacks."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cve_2012_3463_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2012_3465_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This application relies on a vulnerable version of strip_tags.\n\nOfficial description of vulnerability: There is a vulnerability in the strip_tags helper in Rails, using specially crafted output an attacker can successfully inject HTML into the document. The strip_tags helper in Rails is designed to remove all HTML tags from a string. By using specially crafted values an attacker can confuse the parser and cause HTML tags to be injected into the response. This can be exploited to inject arbitrary JavaScript into the rendered page."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cve_2012_3465_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2012_5664_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Official description of vulnerability: Due to the way dynamic finders in Active Record extract options from method parameters, a method parameter can mistakenly be used as a scope. Carefully crafted requests can use the scope to inject arbitrary SQL."
      },
      "local_effect" : {
        "en" : "A user can change the intent of SQL queries, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "cve_2012_5664_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_0155_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a vulnerability when Active Record is used in conjunction with JSON parameter parsing. Due to the way Active Record interprets parameters in combination with the way that JSON parameters are parsed, it is possible for an attacker to issue unexpected database queries with \"IS NULL\" or empty where clauses. This issue does not let an attacker insert arbitrary values into an SQL query, however they can cause the query to check for NULL or eliminate a WHERE clause when most users wouldn't expect it."
      },
      "local_effect" : {
        "en" : "A user can change the intent of SQL queries, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "cve_2013_0155_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_0156_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Remote code execution"
      },
      "description" : {
        "en" : "Official description of vulnerability: There are multiple weaknesses in the parameter parsing code for Ruby on Rails that allows attackers to bypass authentication systems, inject arbitrary SQL, inject and execute arbitrary code, or perform a DoS attack on a Rails application. The parameter parsing code of Ruby on Rails allows applications to automatically cast values from strings to certain data types. Unfortunately the type casting code supported certain conversions which were not suitable for performing on user-provided data including creating Symbols and parsing YAML. These unsuitable conversions can be used by an attacker to compromise a Rails application."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 502,
        "impact" : "High",
        "subcategory" : "cve_2013_0156_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_0269_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Remote code execution"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a denial of service and unsafe object creation vulnerability in the json gem.\n\nWhen parsing certain JSON documents, the JSON gem can be coerced in to creating Ruby symbols in a target system. Since Ruby symbols are not garbage collected, this can result in a denial of service attack. The same technique can be used to create objects in a target system that act like internal objects. These \"act alike\" objects can be used to bypass certain security mechanisms and can be used as a spring board for SQL injection attacks in Rails."
      },
      "local_effect" : {
        "en" : "Unsafe object creation in JSON parsing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 502,
        "impact" : "High",
        "subcategory" : "cve_2013_0269_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_0269_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Denial of service"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a denial of service and unsafe object creation vulnerability in the json gem.\n\nWhen parsing certain JSON documents, the JSON gem can be coerced in to creating Ruby symbols in a target system. Since Ruby symbols are not garbage collected, this can result in a denial of service attack. The same technique can be used to create objects in a target system that act like internal objects. These \"act alike\" objects can be used to bypass certain security mechanisms and can be used as a spring board for SQL injection attacks in Rails."
      },
      "local_effect" : {
        "en" : "Unsafe object creation in JSON parsing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 502,
        "impact" : "Low",
        "subcategory" : "cve_2013_0269_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_0269_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Denial of service"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a denial of service and unsafe object creation vulnerability in the json gem.\n\nWhen parsing certain JSON documents, the JSON gem can be coerced in to creating Ruby symbols in a target system. Since Ruby symbols are not garbage collected, this can result in a denial of service attack. The same technique can be used to create objects in a target system that act like internal objects. These \"act alike\" objects can be used to bypass certain security mechanisms and can be used as a spring board for SQL injection attacks in Rails."
      },
      "local_effect" : {
        "en" : "Unsafe object creation in JSON parsing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 502,
        "impact" : "Medium",
        "subcategory" : "cve_2013_0269_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_0277_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Remote code execution"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a vulnerability in the serialized attribute handling code in Ruby on Rails 2.3 and 3.0, applications that allow users to directly assign to the serialized fields in their models are at risk of Denial of Service or Remote Code Execution vulnerabilities. The serialize helper in Active Record allows developers to store various objects serialized to a BLOB column in the database. The objects are serialized and deserialized using YAML. If developers allow their users to directly provide values for this attribute, an attacker could use a specially crafted request to cause the application to deserialize arbitrary YAML."
      },
      "local_effect" : {
        "en" : "An attacker can instantiate arbitrary classes, possibly resulting in a denial of service or potentially unintended code execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 502,
        "impact" : "High",
        "subcategory" : "cve_2013_0277_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_0277_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Remote code execution"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a vulnerability in the serialized attribute handling code in Ruby on Rails 2.3 and 3.0, applications that allow users to directly assign to the serialized fields in their models are at risk of Denial of Service or Remote Code Execution vulnerabilities. The serialize helper in Active Record allows developers to store various objects serialized to a BLOB column in the database. The objects are serialized and deserialized using YAML. If developers allow their users to directly provide values for this attribute, an attacker could use a specially crafted request to cause the application to deserialize arbitrary YAML."
      },
      "local_effect" : {
        "en" : "An attacker can instantiate arbitrary classes, possibly resulting in a denial of service or potentially unintended code execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 502,
        "impact" : "Medium",
        "subcategory" : "cve_2013_0277_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_0333_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Remote code execution"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a vulnerability in the JSON code for Ruby on Rails which allows attackers to bypass authentication systems, inject arbitrary SQL, inject and execute arbitrary code, or perform a DoS attack on a Rails application. The JSON Parsing code in Rails 2.3 and 3.0 support multiple parsing backends. One of the backends involves transforming the JSON into YAML, and passing that through the YAML parser. Using a specially crafted payload attackers can trick the backend into decoding a subset of YAML."
      },
      "local_effect" : {
        "en" : "An attacker can instantiate arbitrary classes, possibly resulting in a denial of service or potentially unintended code execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 502,
        "impact" : "High",
        "subcategory" : "cve_2013_0333_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_1854_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Denial of service"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a symbol denial of service vulnerability in Active Record.\n\nWhen a hash is provided as the find value for a query, the keys of the hash might be converted to symbols, which are not garbage collected."
      },
      "local_effect" : {
        "en" : "Creation of symbols might lead to memory exhaustion."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 400,
        "impact" : "Medium",
        "subcategory" : "cve_2013_1854_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_1855_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This application is using a vulnerable version of the sanitize_css method.\n\nOfficial description of vulnerability: Carefully crafted text can bypass the sanitization provided in the sanitize_css method in Action Pack."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cve_2013_1855_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_1856_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "File access"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a vulnerability in the JDOM backend to ActiveSupport's XML parser. This could allow an attacker to perform a denial of service attack or gain access to files stored on the application server. The ActiveSupport XML parsing functionality supports multiple pluggable backends. One backend supported for JRuby users is ActiveSupport::XmlMini_JDOM which makes use of the javax.xml.parsers.DocumentBuilder class. In some JVM configurations the default settings of that class can allow an attacker to construct XML which, when parsed, will contain the contents of arbitrary URLs including files from the application server. They might also allow for various denial of service attacks."
      },
      "local_effect" : {
        "en" : "An attacker-controlled DTD can be used to specify an external URL, making the impact of processing the DTD analogous to a server-side request forgery. Processing an arbitrary DTD might also result in parsing a large number of entities, causing denial of service."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 661,
        "impact" : "High",
        "subcategory" : "cve_2013_1856_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_1857_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This application is using a vulnerable version of the sanitize method.\n\nOfficial description of vulnerability: The sanitize helper in Ruby on Rails is designed to filter HTML and remove all tags and attributes that could be malicious. The code that ensured that URLs only contain supported protocols contained several bugs that could allow an attacker to embed a tag containing a URL that executes arbitrary JavaScript code."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cve_2013_1857_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_4491_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a vulnerability in the internationalization component of Ruby on Rails. Under certain common configurations, an attacker can provide specially crafted input that will execute a reflective cross-site scripting attack. When the i18n gem is unable to provide a translation for a given string, it creates a fallback HTML string. Under certain common configurations, this string can contain user input that would allow an attacker to execute a reflective XSS attack."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "cve_2013_4491_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_6414_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Denial of service"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a denial of service vulnerability in the header handling component of Action View. Strings sent in specially crafted headers will be cached indefinitely. This can cause the cache to grow infinitely, which will eventually consume all memory on the target machine, causing a denial of service."
      },
      "local_effect" : {
        "en" : "Denial of service."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 400,
        "impact" : "Medium",
        "subcategory" : "cve_2013_6414_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_6416_call_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This application relies on a vulnerable version of the simple_format method. The simple_format helper converts user supplied text into html text that is intended to be safe for display. A change made to the implementation of this helper means that any user provided HTML attributes will not be escaped correctly. As a result of this error, applications that pass user-controlled data to be included as html attributes will be vulnerable to a cross-site scripting attack."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cve_2013_6416_call_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_6416_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "The simple_format helper converts user supplied text into html text that is intended to be safe for display. A change made to the implementation of this helper means that any user provided HTML attributes will not be escaped correctly. As a result of this error, applications that pass user-controlled data to be included as html attributes will be vulnerable to a cross-site scripting attack."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "cve_2013_6416_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2013_6417_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Official description of vulnerability: Due to the way that Rack::Request and Rails::Request interact, it is possible for a 3rd party or custom rack middleware to parse the parameters insecurely and store them in the same key that Rails uses for its own parameters. This version of Ruby on Rails does not properly consider differences in parameter handling between the Active Record component and the JSON implementation, which allows remote attackers to bypass intended database-query restrictions and perform NULL checks or trigger missing WHERE clauses via a crafted request."
      },
      "local_effect" : {
        "en" : "A user can change the intent of SQL queries, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "cve_2013_6417_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2014_0080_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a data injection vulnerability in Active Record. Specially crafted strings can be used to save data in PostgreSQL array columns that might not be intended. Specially crafted strings may be used to save data to array columns in PostgreSQL databases. This vulnerability cannot be used to delete data or execute arbitrary SQL statements, but *can* be used to add data that could have an impact on the application (such as setting an admin flag). Only array type columns in PostgreSQL are impacted."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "cve_2014_0080_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2014_0081_call_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This application relies on a vulnerable version of the number_to_currency helper.\n\nOfficial description of vulnerability: The number_to_currency helper allows users to nicely format a numeric value. One of the parameters to the helper (unit) is not escaped correctly. Applications that pass user controlled data as the unit parameter are vulnerable to a cross-site scripting attack."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cve_2014_0081_call_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2014_0081_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Official description of vulnerability: The number_to_currency helper allows users to nicely format a numeric value. One of the parameters to the helper (unit) is not escaped correctly. Applications that pass user controlled data as the unit parameter are vulnerable to a cross-site scripting attack."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "cve_2014_0081_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2014_0082_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Denial of service"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a denial of service vulnerability in the text rendering component of Action View. Strings sent in specially crafted headers will be converted to symbols. This can cause a denial of service since symbols are not removed by the garbage collector."
      },
      "local_effect" : {
        "en" : "Unlimited symbol creation might cause memory exhaustion."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 400,
        "impact" : "High",
        "subcategory" : "cve_2014_0082_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2014_3482_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Official description of vulnerability: PostgreSQL supports a number of unique data types that are not present in other supported databases. A bug in the SQL quoting code in ActiveRecord can allow an attacker to inject arbitrary SQL using carefully crafted values. Only applications that query against bitstring types are vulnerable."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "cve_2014_3482_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2014_3483_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Official description of vulnerability: PostgreSQL supports a number of unique data types that are not present in other supported databases. A bug in the SQL quoting code in ActiveRecord can allow an attacker to inject arbitrary SQL using carefully crafted values. Only applications that query against range types are vulnerable."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "cve_2014_3483_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2014_3514_call_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mass assignment"
      },
      "description" : {
        "en" : "This application relies on a vulnerable version of the create_with method. Official description of vulnerability: The create_with functionality in Active Record was implemented incorrectly and completely bypasses the strong parameters protection. Applications that pass user-controlled values to create_with could allow attackers to set arbitrary attributes on models."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "cve_2014_3514_call_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2014_3514_call_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mass assignment"
      },
      "description" : {
        "en" : "This application relies on a vulnerable version of the create_with method. Official description of vulnerability: The create_with functionality in Active Record was implemented incorrectly and completely bypasses the strong parameters protection. Applications that pass user-controlled values to create_with could allow attackers to set arbitrary attributes on models."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "cve_2014_3514_call_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2014_3514_call_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mass assignment"
      },
      "description" : {
        "en" : "This application relies on a vulnerable version of the create_with method. Official description of vulnerability: The create_with functionality in Active Record was implemented incorrectly and completely bypasses the strong parameters protection. Applications that pass user-controlled values to create_with could allow attackers to set arbitrary attributes on models."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "cve_2014_3514_call_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2014_3514_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mass assignment"
      },
      "description" : {
        "en" : "Official description of vulnerability: The create_with functionality in Active Record was implemented incorrectly and completely bypasses the strong parameters protection. Applications that pass user-controlled values to create_with could allow attackers to set arbitrary attributes on models."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "cve_2014_3514_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2014_7829_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "File access"
      },
      "description" : {
        "en" : "This application serves static assets in production and is vulnerable to file existence disclosure.\n\nOfficial description of vulnerability: There is an information leak vulnerability in Action Pack. Specially crafted requests can be used to determine whether a file exists on the filesystem that is outside the Rails application's root directory. The files will not be served, but attackers can determine whether or not the file exists."
      },
      "local_effect" : {
        "en" : "Existence of a file on the server might be disclosed."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 73,
        "impact" : "High",
        "subcategory" : "cve_2014_7829_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2015_3226_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a cross-site scripting vulnerability in the ActiveSupport::JSON.encode method in Ruby on Rails. When a Hash containing user-controlled data is encoded as JSON (either through Hash#to_json or ActiveSupport::JSON.encode), Rails does not perform adequate escaping that matches the guarantee implied by the escape_html_entities_in_json option (which is enabled by default). If this resulting JSON string is subsequently inserted directly into an HTML page, the page will be vulnerable to XSS attacks."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cve_2015_3226_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2015_3226_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a cross-site scripting vulnerability in the ActiveSupport::JSON.encode method in Ruby on Rails. When a Hash containing user-controlled data is encoded as JSON (either through Hash#to_json or ActiveSupport::JSON.encode), Rails does not perform adequate escaping that matches the guarantee implied by the escape_html_entities_in_json option (which is enabled by default). If this resulting JSON string is subsequently inserted directly into an HTML page, the page will be vulnerable to XSS attacks."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "cve_2015_3226_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2015_3227_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Denial of service"
      },
      "description" : {
        "en" : "Official description of vulnerability: Specially crafted XML documents can cause applications to raise a SystemStackError and potentially cause a denial of service attack. This only impacts applications using REXML or JDOM as their XML processor. Other XML processors that Rails supports are not impacted."
      },
      "local_effect" : {
        "en" : "Stack overflow vulnerability might cause denial of service."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 400,
        "impact" : "Medium",
        "subcategory" : "cve_2015_3227_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2015_7576_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Timing attack"
      },
      "description" : {
        "en" : "In this version of Rails on Rails, the Basic Auth code does not use constant-time comparison when checking credentials. This allows an attacker to use a timing attack to determine login credentials. This application uses the http_basic_authenticate_with method which is vulnerable.\n\nOfficial description of vulnerability: Due to the way that Action Controller compares user names and passwords in basic authentication authorization code, it is possible for an attacker to analyze the time taken by a response and intuit the password. Attackers can use this information to attempt to guess the username and password used in the basic authentication system."
      },
      "local_effect" : {
        "en" : "Authentication bypass via timing attack."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 289,
        "impact" : "High",
        "subcategory" : "cve_2015_7576_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2015_7577_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Nested attributes"
      },
      "description" : {
        "en" : "This specific combination of allow_destroy and reject_if can cause the reject_if filter to not be invoked, which might cause unexpected behavior.\n\nOfficial description of vulnerability: When using the nested attributes feature in Active Record you can prevent the destruction of associated records by passing the allow_destroy: false option to the accepts_nested_attributes_for method. However due to a change in code, the _destroy flag prevents the :reject_if proc from being called because it assumes that the record will be destroyed anyway. However this isn't true if :allow_destroy is false so this leads to changes that would have been rejected being applied to the record. Attackers could use this to do things like set attributes to invalid values and to clear all of the attributes amongst other things. The severity will be dependent on how the application has used this feature."
      },
      "local_effect" : {
        "en" : "An attacker could modify sensitive values in the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "cve_2015_7577_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2015_7578_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a possible cross-site scripting vulnerability in rails-html-sanitizer. Certain attributes are not removed from tags when they are sanitized, and these attributes can lead to a cross-site scripting attack on target applications."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cve_2015_7578_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2015_7578_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Official description of vulnerability: There is a possible cross-site scripting vulnerability in rails-html-sanitizer. Certain attributes are not removed from tags when they are sanitized, and these attributes can lead to a cross-site scripting attack on target applications."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "cve_2015_7578_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2015_7579_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Official description of vulnerability: Due to the way that Rails::Html::FullSanitizer is implemented, if an attacker passes an already escaped HTML entity to the input of Action View's strip_tags these entities will be unescaped which might cause a XSS attack if used in combination with raw or html_safe."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cve_2015_7579_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2015_7579_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Official description of vulnerability: Due to the way that Rails::Html::FullSanitizer is implemented, if an attacker passes an already escaped HTML entity to the input of Action View's strip_tags these entities will be unescaped which might cause a XSS attack if used in combination with raw or html_safe."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "cve_2015_7579_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2015_7580_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Official description of vulnerability: Carefully crafted strings can cause user input to bypass the sanitization in the white list sanitizer which can lead to a cross-site scripting attack."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cve_2015_7580_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2015_7580_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Official description of vulnerability: Carefully crafted strings can cause user input to bypass the sanitization in the white list sanitizer which can lead to a cross-site scripting attack."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "cve_2015_7580_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2015_7581_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Denial of service"
      },
      "description" : {
        "en" : "Official description of vulnerability: Users who have a route that contains the string :controller are susceptible to objects being leaked globally, which can lead to unbounded memory growth. To identify whether your application is vulnerable, look for routes that contain :controller. Internally, Action Pack keeps a map of \"url controller name\" to \"controller class name\".  This map is cached globally, and is populated even if the controller class doesn't actually exist."
      },
      "local_effect" : {
        "en" : "Denial of service via memory exhaustion."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 400,
        "impact" : "Medium",
        "subcategory" : "cve_2015_7581_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2016_0751_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Denial of service"
      },
      "description" : {
        "en" : "In this version of Ruby on Rails, mime types in requests are cached by the server. An attacker can send requests with many different mime types to use up memory on the server and cause a denial of service.\n\nOfficial description of vulnerability: A carefully crafted accept header can cause a global cache of mime types to grow indefinitely which can lead to a possible denial of service attack in Action Pack."
      },
      "local_effect" : {
        "en" : "Denial of service via memory exhaustion."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 400,
        "impact" : "Medium",
        "subcategory" : "cve_2016_0751_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 150
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2016_6317_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Official description: Due to the way Active Record interprets parameters in combination with the way that JSON parameters are parsed, it is possible for an attacker to issue unexpected database queries with \"IS NULL\" or empty where clauses.  This issue does *not* let an attacker insert arbitrary values into an SQL query, however they can cause the query to check for NULL or eliminate a WHERE clause when most users wouldn't expect it."
      },
      "local_effect" : {
        "en" : "A user can change the intent of SQL queries, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "cve_2016_6317_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2018_3741_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This version of the rails-html-sanitizer gem allows non-allow-listed attributes to be present in sanitized output when input with specially-crafted HTML fragments, leading to a potential cross-site scripting vulnerability."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cve_2018_3741_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2018_3741_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This version of the rails-html-sanitizer gem allows non-allow-listed attributes to be present in sanitized output when input with specially-crafted HTML fragments, leading to a potential cross-site scripting vulnerability."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "cve_2018_3741_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2018_3760_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Path traversal"
      },
      "description" : {
        "en" : "This version of the sprockets gem has a known path traversal vulnerability when config.assets.compile = true is set. Besides potentially reading arbitrary files it might also be possible to execute code, for example in ERB templates."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended files or cause unexpected code to execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "cve_2018_3760_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 738
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2018_3760_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Path traversal"
      },
      "description" : {
        "en" : "This version of the sprockets gem has a known path traversal vulnerability when config.assets.compile = true is set. Besides potentially reading arbitrary files it might also be possible to execute code, for example in ERB templates."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended files or cause unexpected code to execute."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 22,
        "impact" : "Low",
        "subcategory" : "cve_2018_3760_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 738
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2018_8048_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This version of the loofah gem permits non-allow-listed attributes to be present in sanitized output when input with specially-crafted HTML fragments."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cve_2018_8048_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2018_8048_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This version of the loofah gem permits non-allow-listed attributes to be present in sanitized output when input with specially-crafted HTML fragments."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "cve_2018_8048_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2020_8159_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Directory traversal"
      },
      "description" : {
        "en" : "This version of the actionpack_page-caching gem allows an attacker to write arbitrary files to a web server."
      },
      "local_effect" : {
        "en" : "Remote code execution is possible if the attacker can write unescaped ERB to a view."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 22,
        "impact" : "High",
        "subcategory" : "cve_2020_8159_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2020_8159_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Directory traversal"
      },
      "description" : {
        "en" : "This version of the actionpack_page-caching gem allows an attacker to write arbitrary files to a web server."
      },
      "local_effect" : {
        "en" : "Remote code execution is possible if the attacker can write unescaped ERB to a view."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 22,
        "impact" : "Low",
        "subcategory" : "cve_2020_8159_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 59
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "cve_2020_8166_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site request forgery"
      },
      "description" : {
        "en" : "This version of Rails has a vulnerability that may allow CSRF token forgery."
      },
      "local_effect" : {
        "en" : "Controller actions might be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 352,
        "impact" : "Medium",
        "subcategory" : "cve_2020_8166_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 14
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "safe_buffer_vuln_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Official description of vulnerability: Due to side effects of some optimizations in the String class, code that directly manipulates SafeBuffer objects via [] and other methods that return new instances of SafeBuffer might cause strings be inadvertently marked as HTML safe.  All users running an affected release should either upgrade or use one of the workarounds immediately."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "safe_buffer_vuln_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "select_options_vuln_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This version of Ruby on Rails does not escape the HTML option tags passed to the select() helper.\n\nOfficial description of vulnerability: When developers generate html options tags manually, user input concatenated with manually built tags might not be escaped and an attacker can inject arbitrary HTML into the document. Only manually generated select tag options are impacted, but all users running an affected release should either upgrade or use one of the workarounds immediately."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 79,
        "impact" : "Low",
        "subcategory" : "select_options_vuln_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "select_options_vuln_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This version of Ruby on Rails does not escape the HTML option tags passed to the select() helper.\n\nOfficial description of vulnerability: When developers generate html options tags manually, user input concatenated with manually built tags might not be escaped and an attacker can inject arbitrary HTML into the document. Only manually generated select tag options are impacted, but all users running an affected release should either upgrade or use one of the workarounds immediately."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "select_options_vuln_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "translate_vuln_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Official description of vulnerability: Rails has a helper method for i18n translations. This function has a convention whereby translations strings with a name ending in 'html' are considered HTML safe. There is also a mechanism for interpolation. It has been discovered that these 'html' strings allow arbitrary values to be contained in the interpolated input, and these values are not escaped.\nAll users using the translate helper method with 'html safe' translations that use variable interpolation should either upgrade or use one of the workarounds immediately."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "translate_vuln_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "ruby_vulnerable_library",
      "subtype" : "translate_vuln_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Official description of vulnerability: Rails has a helper method for i18n translations. This function has a convention whereby translations strings with a name ending in 'html' are considered HTML safe. There is also a mechanism for interpolation. It has been discovered that these 'html' strings allow arbitrary values to be contained in the interpolated input, and these values are not escaped.\nAll users using the translate helper method with 'html safe' translations that use variable interpolation should either upgrade or use one of the workarounds immediately."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "translate_vuln_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "script_code_injection",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Script code injection"
      },
      "description" : {
        "en" : "Script code interpreted or executed on the server is constructed from user-controllable data."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 95,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 291
      }
    },
    {
      "type" : "script_code_injection",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Script code injection"
      },
      "description" : {
        "en" : "Script code interpreted or executed on the server is constructed from user-controllable data."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 95,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 291
      }
    },
    {
      "type" : "script_code_injection",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Script code injection"
      },
      "description" : {
        "en" : "Script code interpreted or executed on the server is constructed from user-controllable data."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 95,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 291
      }
    },
    {
      "type" : "script_code_injection",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Script code injection"
      },
      "description" : {
        "en" : "Script code interpreted or executed on the server is constructed from user-controllable data."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 95,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 291
      }
    },
    {
      "type" : "script_code_injection",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Script code injection"
      },
      "description" : {
        "en" : "Script code interpreted or executed on the server is constructed from user-controllable data."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 95,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 291
      }
    },
    {
      "type" : "script_code_injection",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Script code injection"
      },
      "description" : {
        "en" : "Script code interpreted or executed on the server is constructed from user-controllable data."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 95,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 291
      }
    },
    {
      "type" : "script_code_injection",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Script code injection"
      },
      "description" : {
        "en" : "Script code interpreted or executed on the server is constructed from user-controllable data."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 95,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 291
      }
    },
    {
      "type" : "script_code_injection",
      "subtype" : "code_eval_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Dangerous eval"
      },
      "description" : {
        "en" : "Script code interpreted or executed on the server may be constructed from user-controllable data."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 95,
        "impact" : "High",
        "subcategory" : "code_eval_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 291
      }
    },
    {
      "type" : "script_code_injection",
      "subtype" : "code_eval_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Dangerous eval"
      },
      "description" : {
        "en" : "Script code interpreted or executed on the server may be constructed from user-controllable data."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 95,
        "impact" : "Low",
        "subcategory" : "code_eval_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 291
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Leak of sensitive data"
      },
      "description" : {
        "en" : "Sensitive data is stored or transmitted without encrypting it."
      },
      "local_effect" : {
        "en" : "An attacker can read the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Leak of sensitive data"
      },
      "description" : {
        "en" : "Sensitive data is stored or transmitted without encrypting it."
      },
      "local_effect" : {
        "en" : "An attacker can read the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Leak of sensitive data"
      },
      "description" : {
        "en" : "Sensitive data is stored or transmitted without encrypting it."
      },
      "local_effect" : {
        "en" : "An attacker can read the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "Leak of sensitive data"
      },
      "description" : {
        "en" : "Sensitive data is stored or transmitted without encrypting it."
      },
      "local_effect" : {
        "en" : "An attacker can read the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Leak of sensitive data"
      },
      "description" : {
        "en" : "Sensitive data is stored or transmitted without encrypting it."
      },
      "local_effect" : {
        "en" : "An attacker can read the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Leak of sensitive data"
      },
      "description" : {
        "en" : "Sensitive data is stored or transmitted without encrypting it."
      },
      "local_effect" : {
        "en" : "An attacker can read the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Leak of sensitive data"
      },
      "description" : {
        "en" : "Sensitive data is stored or transmitted without encrypting it."
      },
      "local_effect" : {
        "en" : "An attacker can read the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Leak of sensitive data"
      },
      "description" : {
        "en" : "Sensitive data is stored or transmitted without encrypting it."
      },
      "local_effect" : {
        "en" : "An attacker can read the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Leak of sensitive data"
      },
      "description" : {
        "en" : "Sensitive data is stored or transmitted without encrypting it."
      },
      "local_effect" : {
        "en" : "An attacker can read the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Leak of sensitive data"
      },
      "description" : {
        "en" : "Sensitive data is stored or transmitted without encrypting it."
      },
      "local_effect" : {
        "en" : "An attacker can read the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Leak of sensitive data"
      },
      "description" : {
        "en" : "Sensitive data is stored or transmitted without encrypting it."
      },
      "local_effect" : {
        "en" : "An attacker can read the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Leak of sensitive data"
      },
      "description" : {
        "en" : "Sensitive data is stored or transmitted without encrypting it."
      },
      "local_effect" : {
        "en" : "An attacker can read the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : null
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_exception_in_gui",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Exception leaked to user interface"
      },
      "description" : {
        "en" : "Displaying an exception message or stack trace in the user interface."
      },
      "local_effect" : {
        "en" : "Exception error messages and stack traces may leak information useful for attacking the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 209,
        "impact" : "Medium",
        "subcategory" : "cleartext_exception_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 231
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_exception_in_gui",
      "code-language" : "c#",
      "name" : {
        "en" : "Exception leaked to user interface"
      },
      "description" : {
        "en" : "Displaying an exception message or stack trace in the user interface."
      },
      "local_effect" : {
        "en" : "Exception error messages and stack traces may leak information useful for attacking the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 209,
        "impact" : "Medium",
        "subcategory" : "cleartext_exception_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 231
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_exception_in_gui",
      "code-language" : "cuda",
      "name" : {
        "en" : "Exception leaked to user interface"
      },
      "description" : {
        "en" : "Displaying an exception message or stack trace in the user interface."
      },
      "local_effect" : {
        "en" : "Exception error messages and stack traces may leak information useful for attacking the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 209,
        "impact" : "Medium",
        "subcategory" : "cleartext_exception_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 231
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_exception_in_gui",
      "code-language" : "go",
      "name" : {
        "en" : "Exception leaked to user interface"
      },
      "description" : {
        "en" : "Displaying an exception message or stack trace in the user interface."
      },
      "local_effect" : {
        "en" : "Exception error messages and stack traces may leak information useful for attacking the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 209,
        "impact" : "Medium",
        "subcategory" : "cleartext_exception_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 231
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_exception_in_gui",
      "code-language" : "java",
      "name" : {
        "en" : "Exception leaked to user interface"
      },
      "description" : {
        "en" : "Displaying an exception message or stack trace in the user interface."
      },
      "local_effect" : {
        "en" : "Exception error messages and stack traces may leak information useful for attacking the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 209,
        "impact" : "Medium",
        "subcategory" : "cleartext_exception_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 231
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_exception_in_gui",
      "code-language" : "javascript",
      "name" : {
        "en" : "Exception leaked to user interface"
      },
      "description" : {
        "en" : "Displaying an exception message or stack trace in the user interface."
      },
      "local_effect" : {
        "en" : "Exception error messages and stack traces may leak information useful for attacking the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 209,
        "impact" : "Medium",
        "subcategory" : "cleartext_exception_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 231
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_exception_in_gui",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Exception leaked to user interface"
      },
      "description" : {
        "en" : "Displaying an exception message or stack trace in the user interface."
      },
      "local_effect" : {
        "en" : "Exception error messages and stack traces may leak information useful for attacking the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 209,
        "impact" : "Medium",
        "subcategory" : "cleartext_exception_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 231
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_exception_in_gui",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Exception leaked to user interface"
      },
      "description" : {
        "en" : "Displaying an exception message or stack trace in the user interface."
      },
      "local_effect" : {
        "en" : "Exception error messages and stack traces may leak information useful for attacking the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 209,
        "impact" : "Medium",
        "subcategory" : "cleartext_exception_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 231
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_exception_in_gui",
      "code-language" : "php",
      "name" : {
        "en" : "Exception leaked to user interface"
      },
      "description" : {
        "en" : "Displaying an exception message or stack trace in the user interface."
      },
      "local_effect" : {
        "en" : "Exception error messages and stack traces may leak information useful for attacking the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 209,
        "impact" : "Medium",
        "subcategory" : "cleartext_exception_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 231
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_exception_in_gui",
      "code-language" : "python",
      "name" : {
        "en" : "Exception leaked to user interface"
      },
      "description" : {
        "en" : "Displaying an exception message or stack trace in the user interface."
      },
      "local_effect" : {
        "en" : "Exception error messages and stack traces may leak information useful for attacking the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 209,
        "impact" : "Medium",
        "subcategory" : "cleartext_exception_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 231
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_exception_in_gui",
      "code-language" : "typescript",
      "name" : {
        "en" : "Exception leaked to user interface"
      },
      "description" : {
        "en" : "Displaying an exception message or stack trace in the user interface."
      },
      "local_effect" : {
        "en" : "Exception error messages and stack traces may leak information useful for attacking the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 209,
        "impact" : "Medium",
        "subcategory" : "cleartext_exception_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 231
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_exception_in_gui",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Exception leaked to user interface"
      },
      "description" : {
        "en" : "Displaying an exception message or stack trace in the user interface."
      },
      "local_effect" : {
        "en" : "Exception error messages and stack traces may leak information useful for attacking the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 209,
        "impact" : "Medium",
        "subcategory" : "cleartext_exception_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 231
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_clipboard",
      "code-language" : "java",
      "name" : {
        "en" : "Cleartext sensitive data in the clipboard"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in the system clipboard."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the system clipboard with widely available tools. Even if the information is not human-readable, it may be possible to determine the encoding and to decode the content."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 200,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_clipboard",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 721
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_clipboard",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Cleartext sensitive data in the clipboard"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in the system clipboard."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the system clipboard with widely available tools. Even if the information is not human-readable, it may be possible to determine the encoding and to decode the content."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 200,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_clipboard",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 721
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_content_provider",
      "code-language" : "java",
      "name" : {
        "en" : "Cleartext sensitive data in external content provider"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in external content provider."
      },
      "local_effect" : {
        "en" : "Attackers can get the sensitive data from the external content provider."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 359,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_content_provider",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 862
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_content_provider",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Cleartext sensitive data in external content provider"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in external content provider."
      },
      "local_effect" : {
        "en" : "Attackers can get the sensitive data from the external content provider."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 359,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_content_provider",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 862
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "c#",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "cuda",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "go",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "java",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "javascript",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "php",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "python",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "typescript",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_database",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_database",
      "code-language" : "c#",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_database",
      "code-language" : "cuda",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_database",
      "code-language" : "go",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_database",
      "code-language" : "java",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_database",
      "code-language" : "javascript",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_database",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_database",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_database",
      "code-language" : "php",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_database",
      "code-language" : "python",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_database",
      "code-language" : "typescript",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_database",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_file",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_file",
      "code-language" : "c#",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_file",
      "code-language" : "cuda",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_file",
      "code-language" : "go",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_file",
      "code-language" : "java",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_file",
      "code-language" : "javascript",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_file",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_file",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_file",
      "code-language" : "php",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_file",
      "code-language" : "python",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_file",
      "code-language" : "typescript",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_file",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data to a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_gui",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Display of sensitive data in the user interface"
      },
      "description" : {
        "en" : "Displaying sensitive data in the user interface."
      },
      "local_effect" : {
        "en" : "Sensitive data within the GUI may be accidentally displayed to unauthorized individuals."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 317,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 825
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_gui",
      "code-language" : "c#",
      "name" : {
        "en" : "Display of sensitive data in the user interface"
      },
      "description" : {
        "en" : "Displaying sensitive data in the user interface."
      },
      "local_effect" : {
        "en" : "Sensitive data within the GUI may be accidentally displayed to unauthorized individuals."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 317,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 825
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_gui",
      "code-language" : "cuda",
      "name" : {
        "en" : "Display of sensitive data in the user interface"
      },
      "description" : {
        "en" : "Displaying sensitive data in the user interface."
      },
      "local_effect" : {
        "en" : "Sensitive data within the GUI may be accidentally displayed to unauthorized individuals."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 317,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 825
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_gui",
      "code-language" : "go",
      "name" : {
        "en" : "Display of sensitive data in the user interface"
      },
      "description" : {
        "en" : "Displaying sensitive data in the user interface."
      },
      "local_effect" : {
        "en" : "Sensitive data within the GUI may be accidentally displayed to unauthorized individuals."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 317,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 825
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_gui",
      "code-language" : "java",
      "name" : {
        "en" : "Display of sensitive data in the user interface"
      },
      "description" : {
        "en" : "Displaying sensitive data in the user interface."
      },
      "local_effect" : {
        "en" : "Sensitive data within the GUI may be accidentally displayed to unauthorized individuals."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 317,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 825
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_gui",
      "code-language" : "javascript",
      "name" : {
        "en" : "Display of sensitive data in the user interface"
      },
      "description" : {
        "en" : "Displaying sensitive data in the user interface."
      },
      "local_effect" : {
        "en" : "Sensitive data within the GUI may be accidentally displayed to unauthorized individuals."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 317,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 825
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_gui",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Display of sensitive data in the user interface"
      },
      "description" : {
        "en" : "Displaying sensitive data in the user interface."
      },
      "local_effect" : {
        "en" : "Sensitive data within the GUI may be accidentally displayed to unauthorized individuals."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 317,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 825
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_gui",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Display of sensitive data in the user interface"
      },
      "description" : {
        "en" : "Displaying sensitive data in the user interface."
      },
      "local_effect" : {
        "en" : "Sensitive data within the GUI may be accidentally displayed to unauthorized individuals."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 317,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 825
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_gui",
      "code-language" : "php",
      "name" : {
        "en" : "Display of sensitive data in the user interface"
      },
      "description" : {
        "en" : "Displaying sensitive data in the user interface."
      },
      "local_effect" : {
        "en" : "Sensitive data within the GUI may be accidentally displayed to unauthorized individuals."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 317,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 825
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_gui",
      "code-language" : "python",
      "name" : {
        "en" : "Display of sensitive data in the user interface"
      },
      "description" : {
        "en" : "Displaying sensitive data in the user interface."
      },
      "local_effect" : {
        "en" : "Sensitive data within the GUI may be accidentally displayed to unauthorized individuals."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 317,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 825
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_gui",
      "code-language" : "typescript",
      "name" : {
        "en" : "Display of sensitive data in the user interface"
      },
      "description" : {
        "en" : "Displaying sensitive data in the user interface."
      },
      "local_effect" : {
        "en" : "Sensitive data within the GUI may be accidentally displayed to unauthorized individuals."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 317,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 825
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_gui",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Display of sensitive data in the user interface"
      },
      "description" : {
        "en" : "Displaying sensitive data in the user interface."
      },
      "local_effect" : {
        "en" : "Sensitive data within the GUI may be accidentally displayed to unauthorized individuals."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 317,
        "impact" : "High",
        "subcategory" : "cleartext_storage_in_gui",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 825
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_intent",
      "code-language" : "java",
      "name" : {
        "en" : "Cleartext sensitive data in intent"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in intent."
      },
      "local_effect" : {
        "en" : "Attackers can get the sensitive data from the received intent."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 927,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_intent",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 333
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_intent",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Cleartext sensitive data in intent"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in intent."
      },
      "local_effect" : {
        "en" : "Attackers can get the sensitive data from the received intent."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 927,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_intent",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 333
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_log",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Information exposure to log file"
      },
      "description" : {
        "en" : "Logging sensitive data."
      },
      "local_effect" : {
        "en" : "Having access to the log gives access to the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 532,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_log",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1008
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_log",
      "code-language" : "c#",
      "name" : {
        "en" : "Information exposure to log file"
      },
      "description" : {
        "en" : "Logging sensitive data."
      },
      "local_effect" : {
        "en" : "Having access to the log gives access to the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 532,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_log",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1008
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_log",
      "code-language" : "cuda",
      "name" : {
        "en" : "Information exposure to log file"
      },
      "description" : {
        "en" : "Logging sensitive data."
      },
      "local_effect" : {
        "en" : "Having access to the log gives access to the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 532,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_log",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1008
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_log",
      "code-language" : "go",
      "name" : {
        "en" : "Information exposure to log file"
      },
      "description" : {
        "en" : "Logging sensitive data."
      },
      "local_effect" : {
        "en" : "Having access to the log gives access to the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 532,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_log",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1008
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_log",
      "code-language" : "java",
      "name" : {
        "en" : "Information exposure to log file"
      },
      "description" : {
        "en" : "Logging sensitive data."
      },
      "local_effect" : {
        "en" : "Having access to the log gives access to the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 532,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_log",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1008
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_log",
      "code-language" : "javascript",
      "name" : {
        "en" : "Information exposure to log file"
      },
      "description" : {
        "en" : "Logging sensitive data."
      },
      "local_effect" : {
        "en" : "Having access to the log gives access to the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 532,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_log",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1008
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_log",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Information exposure to log file"
      },
      "description" : {
        "en" : "Logging sensitive data."
      },
      "local_effect" : {
        "en" : "Having access to the log gives access to the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 532,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_log",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1008
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_log",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Information exposure to log file"
      },
      "description" : {
        "en" : "Logging sensitive data."
      },
      "local_effect" : {
        "en" : "Having access to the log gives access to the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 532,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_log",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1008
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_log",
      "code-language" : "php",
      "name" : {
        "en" : "Information exposure to log file"
      },
      "description" : {
        "en" : "Logging sensitive data."
      },
      "local_effect" : {
        "en" : "Having access to the log gives access to the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 532,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_log",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1008
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_log",
      "code-language" : "python",
      "name" : {
        "en" : "Information exposure to log file"
      },
      "description" : {
        "en" : "Logging sensitive data."
      },
      "local_effect" : {
        "en" : "Having access to the log gives access to the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 532,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_log",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1008
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_log",
      "code-language" : "typescript",
      "name" : {
        "en" : "Information exposure to log file"
      },
      "description" : {
        "en" : "Logging sensitive data."
      },
      "local_effect" : {
        "en" : "Having access to the log gives access to the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 532,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_log",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1008
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_log",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Information exposure to log file"
      },
      "description" : {
        "en" : "Logging sensitive data."
      },
      "local_effect" : {
        "en" : "Having access to the log gives access to the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 532,
        "impact" : "Low",
        "subcategory" : "cleartext_storage_in_log",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1008
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_registry",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Cleartext sensitive data in the registry"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in the system registry."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the system registry with widely available tools. Even if the information is not human-readable, it may be possible to determine the encoding and to decode the content."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 314,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_registry",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 823
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_registry",
      "code-language" : "c#",
      "name" : {
        "en" : "Cleartext sensitive data in the registry"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in the system registry."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the system registry with widely available tools. Even if the information is not human-readable, it may be possible to determine the encoding and to decode the content."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 314,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_registry",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 823
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_registry",
      "code-language" : "cuda",
      "name" : {
        "en" : "Cleartext sensitive data in the registry"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in the system registry."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the system registry with widely available tools. Even if the information is not human-readable, it may be possible to determine the encoding and to decode the content."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 314,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_registry",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 823
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_registry",
      "code-language" : "go",
      "name" : {
        "en" : "Cleartext sensitive data in the registry"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in the system registry."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the system registry with widely available tools. Even if the information is not human-readable, it may be possible to determine the encoding and to decode the content."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 314,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_registry",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 823
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_registry",
      "code-language" : "java",
      "name" : {
        "en" : "Cleartext sensitive data in the registry"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in the system registry."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the system registry with widely available tools. Even if the information is not human-readable, it may be possible to determine the encoding and to decode the content."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 314,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_registry",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 823
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_registry",
      "code-language" : "javascript",
      "name" : {
        "en" : "Cleartext sensitive data in the registry"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in the system registry."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the system registry with widely available tools. Even if the information is not human-readable, it may be possible to determine the encoding and to decode the content."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 314,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_registry",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 823
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_registry",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Cleartext sensitive data in the registry"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in the system registry."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the system registry with widely available tools. Even if the information is not human-readable, it may be possible to determine the encoding and to decode the content."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 314,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_registry",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 823
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_registry",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Cleartext sensitive data in the registry"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in the system registry."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the system registry with widely available tools. Even if the information is not human-readable, it may be possible to determine the encoding and to decode the content."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 314,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_registry",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 823
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_registry",
      "code-language" : "php",
      "name" : {
        "en" : "Cleartext sensitive data in the registry"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in the system registry."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the system registry with widely available tools. Even if the information is not human-readable, it may be possible to determine the encoding and to decode the content."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 314,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_registry",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 823
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_registry",
      "code-language" : "python",
      "name" : {
        "en" : "Cleartext sensitive data in the registry"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in the system registry."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the system registry with widely available tools. Even if the information is not human-readable, it may be possible to determine the encoding and to decode the content."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 314,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_registry",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 823
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_registry",
      "code-language" : "typescript",
      "name" : {
        "en" : "Cleartext sensitive data in the registry"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in the system registry."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the system registry with widely available tools. Even if the information is not human-readable, it may be possible to determine the encoding and to decode the content."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 314,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_registry",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 823
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_in_registry",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Cleartext sensitive data in the registry"
      },
      "description" : {
        "en" : "Storing unencrypted sensitive data in the system registry."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the system registry with widely available tools. Even if the information is not human-readable, it may be possible to determine the encoding and to decode the content."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 314,
        "impact" : "Medium",
        "subcategory" : "cleartext_storage_in_registry",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 823
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_transmission",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Transmitting sensitive data in cleartext."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_transmission",
      "code-language" : "c#",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Transmitting sensitive data in cleartext."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_transmission",
      "code-language" : "cuda",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Transmitting sensitive data in cleartext."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_transmission",
      "code-language" : "go",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Transmitting sensitive data in cleartext."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_transmission",
      "code-language" : "java",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Transmitting sensitive data in cleartext."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_transmission",
      "code-language" : "javascript",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Transmitting sensitive data in cleartext."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_transmission",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Transmitting sensitive data in cleartext."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_transmission",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Transmitting sensitive data in cleartext."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_transmission",
      "code-language" : "php",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Transmitting sensitive data in cleartext."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_transmission",
      "code-language" : "python",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Transmitting sensitive data in cleartext."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_transmission",
      "code-language" : "typescript",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Transmitting sensitive data in cleartext."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "cleartext_transmission",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Transmitting sensitive data in cleartext."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "detailed_exceptions_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Information disclosure"
      },
      "description" : {
        "en" : "This method controls whether to consider all requests as if they were local, and should be reviewed carefully. Detailed information is shown in the event of an exception for local requests. The disclosure of this information might provide valuable information to an attacker."
      },
      "local_effect" : {
        "en" : "The application discloses sensitive debugging and logging information to potentially unauthorized users."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 209,
        "impact" : "High",
        "subcategory" : "detailed_exceptions_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 3
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "detailed_exceptions_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Information disclosure"
      },
      "description" : {
        "en" : "This method controls whether to consider all requests as if they were local, and should be reviewed carefully. Detailed information is shown in the event of an exception for local requests. The disclosure of this information might provide valuable information to an attacker."
      },
      "local_effect" : {
        "en" : "The application discloses sensitive debugging and logging information to potentially unauthorized users."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 209,
        "impact" : "Medium",
        "subcategory" : "detailed_exceptions_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 3
      }
    },
    {
      "type" : "sensitive_data_leak",
      "subtype" : "local_request_config_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Information disclosure"
      },
      "description" : {
        "en" : "The production configuration has been set to consider all requests as if they were local. This causes detailed information to be shown in the event of an exception. The disclosure of this information might provide valuable information to an attacker."
      },
      "local_effect" : {
        "en" : "The application discloses sensitive debugging and logging information to potentially unauthorized users."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 209,
        "impact" : "High",
        "subcategory" : "local_request_config_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 3
      }
    },
    {
      "type" : "servlet_atomicity",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Value not atomically updated"
      },
      "description" : {
        "en" : "Non-atomic update of a concurrently shared value"
      },
      "local_effect" : {
        "en" : "This can result in the program displaying unpredictable behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 567,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1037
      }
    },
    {
      "type" : "servlet_atomicity",
      "subtype" : "attribute_init_race",
      "code-language" : "java",
      "name" : {
        "en" : "Value not atomically updated"
      },
      "description" : {
        "en" : "Non-atomic update of a concurrently shared value when initializing the attribute."
      },
      "local_effect" : {
        "en" : "This can resulting in the program displaying unpredictable behavior when the attribute is not present initially."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 567,
        "impact" : "Medium",
        "subcategory" : "attribute_init_race",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1037
      }
    },
    {
      "type" : "servlet_atomicity",
      "subtype" : "violation_on_session_object",
      "code-language" : "java",
      "name" : {
        "en" : "Value not atomically updated"
      },
      "description" : {
        "en" : "Non-atomic update of a concurrently shared value"
      },
      "local_effect" : {
        "en" : "This can result in the program displaying unpredictable behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 567,
        "impact" : "Medium",
        "subcategory" : "violation_on_session_object",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1037
      }
    },
    {
      "type" : "session_fixation",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Session fixation"
      },
      "description" : {
        "en" : "A user-controllable string is used as a session identifier."
      },
      "local_effect" : {
        "en" : "An attacker can force a user to authenticate onto an attacker-known identifier and subsequently hijack the now-authenticated session."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 384,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 88
      }
    },
    {
      "type" : "session_manipulation",
      "subtype" : "session_key_manipulation_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Session manipulation"
      },
      "description" : {
        "en" : "Using user-supplied values as a session key might enable an attacker to set whatever session key they wish. Since sessions are typically trusted, this might lead to privilege escalation or other vulnerabilities."
      },
      "local_effect" : {
        "en" : "Session keys set to arbitrary values."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 642,
        "impact" : "High",
        "subcategory" : "session_key_manipulation_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 88
      }
    },
    {
      "type" : "session_manipulation",
      "subtype" : "session_key_manipulation_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Session manipulation"
      },
      "description" : {
        "en" : "Using user-supplied values as a session key might enable an attacker to set whatever session key they wish. Since sessions are typically trusted, this might lead to privilege escalation or other vulnerabilities."
      },
      "local_effect" : {
        "en" : "Session keys set to arbitrary values."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 642,
        "impact" : "Medium",
        "subcategory" : "session_key_manipulation_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 88
      }
    },
    {
      "type" : "sessionstorage_manipulation",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "sessionStorage manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct a key in sessionStorage."
      },
      "local_effect" : {
        "en" : "An attacker may be able to affect the behavior of the application by overwriting sensitive keys in sessionStorage."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 99,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1334
      }
    },
    {
      "type" : "sessionstorage_manipulation",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "sessionStorage manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used to construct a key in sessionStorage."
      },
      "local_effect" : {
        "en" : "An attacker may be able to affect the behavior of the application by overwriting sensitive keys in sessionStorage."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 99,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1334
      }
    },
    {
      "type" : "side_effect_in_assert",
      "subtype" : "definite",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Side effect in assertion"
      },
      "description" : {
        "en" : "Assertion contains an operation with a side effect"
      },
      "local_effect" : {
        "en" : "If the assertion is turned off, the side-effect may be lost."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1316
      }
    },
    {
      "type" : "side_effect_in_assert",
      "subtype" : "definite",
      "code-language" : "cuda",
      "name" : {
        "en" : "Side effect in assertion"
      },
      "description" : {
        "en" : "Assertion contains an operation with a side effect"
      },
      "local_effect" : {
        "en" : "If the assertion is turned off, the side-effect may be lost."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1316
      }
    },
    {
      "type" : "side_effect_in_assert",
      "subtype" : "definite",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Side effect in assertion"
      },
      "description" : {
        "en" : "Assertion contains an operation with a side effect"
      },
      "local_effect" : {
        "en" : "If the assertion is turned off, the side-effect may be lost."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1316
      }
    },
    {
      "type" : "side_effect_in_assert",
      "subtype" : "function_call",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Function in assertion"
      },
      "description" : {
        "en" : "Assertion contains a function call which may have a side effect"
      },
      "local_effect" : {
        "en" : "If the assertion is turned off, the function call could be skipped and any side-effects lost."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "side_effect_is_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1316
      }
    },
    {
      "type" : "side_effect_in_assert",
      "subtype" : "function_call",
      "code-language" : "cuda",
      "name" : {
        "en" : "Function in assertion"
      },
      "description" : {
        "en" : "Assertion contains a function call which may have a side effect"
      },
      "local_effect" : {
        "en" : "If the assertion is turned off, the function call could be skipped and any side-effects lost."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "side_effect_is_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1316
      }
    },
    {
      "type" : "side_effect_in_assert",
      "subtype" : "function_call",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Function in assertion"
      },
      "description" : {
        "en" : "Assertion contains a function call which may have a side effect"
      },
      "local_effect" : {
        "en" : "If the assertion is turned off, the function call could be skipped and any side-effects lost."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "side_effect_is_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1316
      }
    },
    {
      "type" : "sign_extension",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unintended sign extension"
      },
      "description" : {
        "en" : "Value may be sign extended unintentionally"
      },
      "local_effect" : {
        "en" : "The sign-extended value may be interpreted as a very large number."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 194,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 715
      }
    },
    {
      "type" : "sign_extension",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Unintended sign extension"
      },
      "description" : {
        "en" : "Value may be sign extended unintentionally"
      },
      "local_effect" : {
        "en" : "The sign-extended value may be interpreted as a very large number."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 194,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 715
      }
    },
    {
      "type" : "sign_extension",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Unintended sign extension"
      },
      "description" : {
        "en" : "Value may be sign extended unintentionally"
      },
      "local_effect" : {
        "en" : "The sign-extended value may be interpreted as a very large number."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Integer handling issues",
        "cweCategory" : 194,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 715
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "extra_sizeof",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Extra sizeof expression"
      },
      "description" : {
        "en" : "The sizeof operator is not required in the expression"
      },
      "local_effect" : {
        "en" : "The extraneous sizeof may cause an incorrect expression. Pointer arithmetic increments or decrements the pointer by multiples of the number of bytes in the target of the pointer."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "extra_sizeof",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1137
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "extra_sizeof",
      "code-language" : "cuda",
      "name" : {
        "en" : "Extra sizeof expression"
      },
      "description" : {
        "en" : "The sizeof operator is not required in the expression"
      },
      "local_effect" : {
        "en" : "The extraneous sizeof may cause an incorrect expression. Pointer arithmetic increments or decrements the pointer by multiples of the number of bytes in the target of the pointer."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "extra_sizeof",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1137
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "extra_sizeof",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Extra sizeof expression"
      },
      "description" : {
        "en" : "The sizeof operator is not required in the expression"
      },
      "local_effect" : {
        "en" : "The extraneous sizeof may cause an incorrect expression. Pointer arithmetic increments or decrements the pointer by multiples of the number of bytes in the target of the pointer."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "extra_sizeof",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1137
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "logic_error",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Misused sizeof"
      },
      "description" : {
        "en" : "The sizeof operator is used erroneously in an expression or is invoked on the wrong argument"
      },
      "local_effect" : {
        "en" : "The misuse of the sizeof operator is caused by invoking sizeof on a pointer instead of its target, operator precedence issues, or incorrect pointer arithmetic. The result is an incorrectly computed expression that may cause unexpected program behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1137
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "logic_error",
      "code-language" : "cuda",
      "name" : {
        "en" : "Misused sizeof"
      },
      "description" : {
        "en" : "The sizeof operator is used erroneously in an expression or is invoked on the wrong argument"
      },
      "local_effect" : {
        "en" : "The misuse of the sizeof operator is caused by invoking sizeof on a pointer instead of its target, operator precedence issues, or incorrect pointer arithmetic. The result is an incorrectly computed expression that may cause unexpected program behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1137
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "logic_error",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Misused sizeof"
      },
      "description" : {
        "en" : "The sizeof operator is used erroneously in an expression or is invoked on the wrong argument"
      },
      "local_effect" : {
        "en" : "The misuse of the sizeof operator is caused by invoking sizeof on a pointer instead of its target, operator precedence issues, or incorrect pointer arithmetic. The result is an incorrectly computed expression that may cause unexpected program behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1137
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "missing_parentheses",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence of casting before the pointer arithmetic"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence; the incorrect expression can result in a pointer pointing to illegal memory locations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 783,
        "impact" : "High",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "missing_parentheses",
      "code-language" : "cuda",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence of casting before the pointer arithmetic"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence; the incorrect expression can result in a pointer pointing to illegal memory locations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 783,
        "impact" : "High",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "missing_parentheses",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Missing parentheses"
      },
      "description" : {
        "en" : "Missing parentheses caused unintended operator precedence of casting before the pointer arithmetic"
      },
      "local_effect" : {
        "en" : "This is a result of a common misunderstanding of operator precedence; the incorrect expression can result in a pointer pointing to illegal memory locations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 783,
        "impact" : "High",
        "subcategory" : "missing_parentheses",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1189
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "sizeof_punning",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Sizeof not portable"
      },
      "description" : {
        "en" : "The sizeof operator is used on a wrong argument that incidentally has the same size"
      },
      "local_effect" : {
        "en" : "While the program behaves correctly on the current processor architecture, it relies on potentially non-portable assumptions about type sizes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 467,
        "impact" : "Low",
        "subcategory" : "sizeof_punning",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1379
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "sizeof_punning",
      "code-language" : "cuda",
      "name" : {
        "en" : "Sizeof not portable"
      },
      "description" : {
        "en" : "The sizeof operator is used on a wrong argument that incidentally has the same size"
      },
      "local_effect" : {
        "en" : "While the program behaves correctly on the current processor architecture, it relies on potentially non-portable assumptions about type sizes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 467,
        "impact" : "Low",
        "subcategory" : "sizeof_punning",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1379
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "sizeof_punning",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Sizeof not portable"
      },
      "description" : {
        "en" : "The sizeof operator is used on a wrong argument that incidentally has the same size"
      },
      "local_effect" : {
        "en" : "While the program behaves correctly on the current processor architecture, it relies on potentially non-portable assumptions about type sizes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 467,
        "impact" : "Low",
        "subcategory" : "sizeof_punning",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1379
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "wrong_size_value",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Wrong size argument"
      },
      "description" : {
        "en" : "The wrong size value is passed to a function"
      },
      "local_effect" : {
        "en" : "The wrong size value is used as an argument to a function. This may cause unexpected program behaviors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "wrong_size_value",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1137
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "wrong_size_value",
      "code-language" : "cuda",
      "name" : {
        "en" : "Wrong size argument"
      },
      "description" : {
        "en" : "The wrong size value is passed to a function"
      },
      "local_effect" : {
        "en" : "The wrong size value is used as an argument to a function. This may cause unexpected program behaviors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "wrong_size_value",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1137
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "wrong_size_value",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Wrong size argument"
      },
      "description" : {
        "en" : "The wrong size value is passed to a function"
      },
      "local_effect" : {
        "en" : "The wrong size value is used as an argument to a function. This may cause unexpected program behaviors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "wrong_size_value",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1137
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "wrong_sizeof",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Wrong sizeof argument"
      },
      "description" : {
        "en" : "The sizeof operator is invoked on the wrong argument"
      },
      "local_effect" : {
        "en" : "The wrong sizeof value is used in an expression or as argument to a function. The result is an incorrect value that may cause unexpected program behaviors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "wrong_sizeof",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1137
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "wrong_sizeof",
      "code-language" : "cuda",
      "name" : {
        "en" : "Wrong sizeof argument"
      },
      "description" : {
        "en" : "The sizeof operator is invoked on the wrong argument"
      },
      "local_effect" : {
        "en" : "The wrong sizeof value is used in an expression or as argument to a function. The result is an incorrect value that may cause unexpected program behaviors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "wrong_sizeof",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1137
      }
    },
    {
      "type" : "sizeof_mismatch",
      "subtype" : "wrong_sizeof",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Wrong sizeof argument"
      },
      "description" : {
        "en" : "The sizeof operator is invoked on the wrong argument"
      },
      "local_effect" : {
        "en" : "The wrong sizeof value is used in an expression or as argument to a function. The result is an incorrect value that may cause unexpected program behaviors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 569,
        "impact" : "Medium",
        "subcategory" : "wrong_sizeof",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1137
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "jsp",
      "code-language" : "java",
      "name" : {
        "en" : "JSP SQL tag Injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into a SQL query, via the JSTL SQL tag (e.g. <sql:query>)."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "non_constant_concat",
      "code-language" : "c#",
      "name" : {
        "en" : "Non-constant SQL"
      },
      "description" : {
        "en" : "An SQL statement is constructed by concatenating a non-constant string."
      },
      "local_effect" : {
        "en" : "Malicious or rogue values may alter the intent of the SQL query or command and cause incorrect behavior, leaked sensitive information, or a loss of data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 89,
        "impact" : "Audit",
        "subcategory" : "concat",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "non_constant_concat",
      "code-language" : "java",
      "name" : {
        "en" : "Non-constant SQL"
      },
      "description" : {
        "en" : "An SQL statement is constructed by concatenating a non-constant string."
      },
      "local_effect" : {
        "en" : "Malicious or rogue values may alter the intent of the SQL query or command and cause incorrect behavior, leaked sensitive information, or a loss of data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 89,
        "impact" : "Audit",
        "subcategory" : "concat",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "non_constant_concat",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Non-constant SQL"
      },
      "description" : {
        "en" : "An SQL statement is constructed by concatenating a non-constant string."
      },
      "local_effect" : {
        "en" : "Malicious or rogue values may alter the intent of the SQL query or command and cause incorrect behavior, leaked sensitive information, or a loss of data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 89,
        "impact" : "Audit",
        "subcategory" : "concat",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "non_constant_sink",
      "code-language" : "c#",
      "name" : {
        "en" : "Non-constant SQL"
      },
      "description" : {
        "en" : "An SQL query or command is executed that is not a constant string."
      },
      "local_effect" : {
        "en" : "Malicious or rogue values may alter the intent of the SQL query or command and cause incorrect behavior, leaked sensitive information, or a loss of data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 89,
        "impact" : "Audit",
        "subcategory" : "sink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "non_constant_sink",
      "code-language" : "java",
      "name" : {
        "en" : "Non-constant SQL"
      },
      "description" : {
        "en" : "An SQL query or command is executed that is not a constant string."
      },
      "local_effect" : {
        "en" : "Malicious or rogue values may alter the intent of the SQL query or command and cause incorrect behavior, leaked sensitive information, or a loss of data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 89,
        "impact" : "Audit",
        "subcategory" : "sink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "non_constant_sink",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Non-constant SQL"
      },
      "description" : {
        "en" : "An SQL query or command is executed that is not a constant string."
      },
      "local_effect" : {
        "en" : "Malicious or rogue values may alter the intent of the SQL query or command and cause incorrect behavior, leaked sensitive information, or a loss of data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 89,
        "impact" : "Audit",
        "subcategory" : "sink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "nosink",
      "code-language" : "c#",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an apparent SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "If the string is a SQL query, a user can change its intent, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "nosink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "nosink",
      "code-language" : "go",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an apparent SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "If the string is a SQL query, a user can change its intent, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "nosink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "nosink",
      "code-language" : "java",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an apparent SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "If the string is a SQL query, a user can change its intent, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "nosink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "nosink",
      "code-language" : "javascript",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an apparent SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "If the string is a SQL query, a user can change its intent, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "nosink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "nosink",
      "code-language" : "kotlin",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an apparent SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "If the string is a SQL query, a user can change its intent, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "nosink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "nosink",
      "code-language" : "php",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an apparent SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "If the string is a SQL query, a user can change its intent, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "nosink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "nosink",
      "code-language" : "python",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an apparent SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "If the string is a SQL query, a user can change its intent, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "nosink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "nosink",
      "code-language" : "typescript",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an apparent SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "If the string is a SQL query, a user can change its intent, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "nosink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "nosink",
      "code-language" : "vb.net",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into an apparent SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "If the string is a SQL query, a user can change its intent, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "nosink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "sink",
      "code-language" : "c#",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "sink",
      "code-language" : "go",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "sink",
      "code-language" : "java",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "sink",
      "code-language" : "javascript",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "sink",
      "code-language" : "kotlin",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "sink",
      "code-language" : "php",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "sink",
      "code-language" : "python",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "sink",
      "code-language" : "typescript",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sql_injection",
      "subtype" : "sink",
      "code-language" : "vb.net",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sink",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_calculate_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The calculation methods do not restrict column names to actual columns. Allow-list or avoid passing user input to these methods."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sql_injection_calculate_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_calculate_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The calculation methods do not restrict column names to actual columns. Allow-list or avoid passing user input to these methods."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "sql_injection_calculate_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_calculate_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The calculation methods do not restrict column names to actual columns. Allow-list or avoid passing user input to these methods."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_calculate_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_connection_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Use of the database connection directly executes the given SQL query without any escaping. When possible, avoid building SQL strings directly. Use ActiveRecord's ORM and query parameterization features instead."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sql_injection_connection_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_connection_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Use of the database connection directly executes the given SQL query without any escaping. When possible, avoid building SQL strings directly. Use ActiveRecord's ORM and query parameterization features instead."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "sql_injection_connection_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_connection_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Use of the database connection directly executes the given SQL query without any escaping. When possible, avoid building SQL strings directly. Use ActiveRecord's ORM and query parameterization features instead."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_connection_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_delete_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The delete_all/destroy_all/update_all methods do not escape their arguments and should never be passed user input directly."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sql_injection_delete_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_delete_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The delete_all/destroy_all/update_all methods do not escape their arguments and should never be passed user input directly."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "sql_injection_delete_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_delete_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The delete_all/destroy_all/update_all methods do not escape their arguments and should never be passed user input directly."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_delete_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_dynamic_finder_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "In MySQL, if a string is compared to an integer, the string will be converted to an integer and then compared. In many cases this will result in a value being converted to 0. If an attacker can generate a query with a 0 value, the WHERE clause will contain 0=0 and match many rows. Most Rails applications will accept JSON queries and convert input values to integers. Dynamic finders that might be matching input to sensitive columns are vulnerable to this attack."
      },
      "local_effect" : {
        "en" : "A user can change the intent of SQL queries, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 704,
        "impact" : "Medium",
        "subcategory" : "sql_injection_dynamic_finder_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_exists_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The exists? method will escape String arguments, but not Hash or Array arguments. Since it is possible for attackers to force query parameters to be cast as Arrays or Hashes, do not pass user input directly to exists?."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sql_injection_exists_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_find_by_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The find_by/find_by! methods will use String arguments as WHERE clauses without any escaping. Pass in arguments as a Hash table specifying columns as keys instead."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sql_injection_find_by_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_find_by_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The find_by/find_by! methods will use String arguments as WHERE clauses without any escaping. Pass in arguments as a Hash table specifying columns as keys instead."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_find_by_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_find_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The find method has many unsafe options which allow for arbitrary SQL injection. Use the :conditions option to pass in parameterized values."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sql_injection_find_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_find_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The find method has many unsafe options which allow for arbitrary SQL injection. Use the :conditions option to pass in parameterized values."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "sql_injection_find_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_find_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The find method has many unsafe options which allow for arbitrary SQL injection. Use the :conditions option to pass in parameterized values."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_find_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_from_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The from method accepts arbitrary SQL. Allow-list columns explicitly instead."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sql_injection_from_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_from_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The from method accepts arbitrary SQL. Allow-list columns explicitly instead."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "sql_injection_from_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_from_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The from method accepts arbitrary SQL. Allow-list columns explicitly instead."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_from_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_group_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The group method accepts arbitrary SQL. Allow-list columns explicitly instead."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "sql_injection_group_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_group_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The group method accepts arbitrary SQL. Allow-list columns explicitly instead."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_group_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_having_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The having method does not escape its input and is easy to exploit via SQL injection since the HAVING clause tends to be at the end of a query."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "sql_injection_having_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_having_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The having method does not escape its input and is easy to exploit via SQL injection since the HAVING clause tends to be at the end of a query."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_having_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sql_injection_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_interp_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "When possible, avoid building SQL strings directly. Use ActiveRecord's ORM and query parameterization features instead."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sql_injection_interp_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_interp_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "When possible, avoid building SQL strings directly. Use ActiveRecord's ORM and query parameterization features instead."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "sql_injection_interp_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_interp_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "When possible, avoid building SQL strings directly. Use ActiveRecord's ORM and query parameterization features instead."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_interp_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_joins_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Do not pass user input directly to joins. Instead, specify or allow-list table names explicitly."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sql_injection_joins_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_joins_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Do not pass user input directly to joins. Instead, specify or allow-list table names explicitly."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "sql_injection_joins_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_joins_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Do not pass user input directly to joins. Instead, specify or allow-list table names explicitly."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_joins_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_limit_offset_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "In versions of Ruby on Rails prior to 2.1.2, the limit and offset options were not properly escaped."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sql_injection_limit_offset_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_limit_offset_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "In versions of Ruby on Rails prior to 2.1.2, the limit and offset options were not properly escaped."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "sql_injection_limit_offset_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "sql_injection_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_not_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The where method does not escape String arguments. Use a Hash or query parameterization to safely pass in user input."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "sql_injection_not_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_not_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The where method does not escape String arguments. Use a Hash or query parameterization to safely pass in user input."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_not_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_order_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The order method allows arbitrary SQL and does not have a safe version. Instead, allow-list possible inputs. For example, only allow ASC and DESC."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sql_injection_order_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_order_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The order method allows arbitrary SQL and does not have a safe version. Instead, allow-list possible inputs. For example, only allow ASC and DESC."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "sql_injection_order_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_order_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The order method allows arbitrary SQL and does not have a safe version. Instead, allow-list possible inputs. For example, only allow ASC and DESC."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_order_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_pluck_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The pluck method accepts arbitrary SQL for the SELECT clause. Allow-list columns explicitly instead."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sql_injection_pluck_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_pluck_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The pluck method accepts arbitrary SQL for the SELECT clause. Allow-list columns explicitly instead."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "sql_injection_pluck_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_pluck_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The pluck method accepts arbitrary SQL for the SELECT clause. Allow-list columns explicitly instead."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_pluck_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_reorder_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The reorder method allows arbitrary SQL and does not have a safe version. Instead, allow-list possible inputs. For example, only allow ASC and DESC."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sql_injection_reorder_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_reorder_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The reorder method allows arbitrary SQL and does not have a safe version. Instead, allow-list possible inputs. For example, only allow ASC and DESC."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "sql_injection_reorder_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_reorder_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The reorder method allows arbitrary SQL and does not have a safe version. Instead, allow-list possible inputs. For example, only allow ASC and DESC."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_reorder_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_select_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The select method allows complete control over the SELECT clause of the query. Specify or allow-list column names explicitly."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sql_injection_select_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_select_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The select method allows complete control over the SELECT clause of the query. Specify or allow-list column names explicitly."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_select_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_where_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The where method does not escape String arguments. Use a Hash or query parameterization to safely pass in user input."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 89,
        "impact" : "High",
        "subcategory" : "sql_injection_where_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_where_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The where method does not escape String arguments. Use a Hash or query parameterization to safely pass in user input."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 89,
        "impact" : "Low",
        "subcategory" : "sql_injection_where_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "sqli",
      "subtype" : "sql_injection_where_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "SQL injection"
      },
      "description" : {
        "en" : "The where method does not escape String arguments. Use a Hash or query parameterization to safely pass in user input."
      },
      "local_effect" : {
        "en" : "A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 89,
        "impact" : "Medium",
        "subcategory" : "sql_injection_where_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 27
      }
    },
    {
      "type" : "stray_semicolon",
      "subtype" : "logic_error",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Stray semicolon"
      },
      "description" : {
        "en" : "The code contains a semicolon where it is probably not intended, such as between a 'for', 'while', or 'if' and a code block."
      },
      "local_effect" : {
        "en" : "A misplaced semicolon is a common typo that can cause unexpected changes to the flow of control in the program that results in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 670,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1123
      }
    },
    {
      "type" : "stray_semicolon",
      "subtype" : "logic_error",
      "code-language" : "c#",
      "name" : {
        "en" : "Stray semicolon"
      },
      "description" : {
        "en" : "The code contains a semicolon where it is probably not intended, such as between a 'for', 'while', 'if', or 'lock' and a code block."
      },
      "local_effect" : {
        "en" : "A misplaced semicolon is a common typo that can cause unexpected changes to the flow of control in the program that results in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 670,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1123
      }
    },
    {
      "type" : "stray_semicolon",
      "subtype" : "logic_error",
      "code-language" : "cuda",
      "name" : {
        "en" : "Stray semicolon"
      },
      "description" : {
        "en" : "The code contains a semicolon where it is probably not intended, such as between a 'for', 'while', or 'if' and a code block."
      },
      "local_effect" : {
        "en" : "A misplaced semicolon is a common typo that can cause unexpected changes to the flow of control in the program that results in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 670,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1123
      }
    },
    {
      "type" : "stray_semicolon",
      "subtype" : "logic_error",
      "code-language" : "java",
      "name" : {
        "en" : "Stray semicolon"
      },
      "description" : {
        "en" : "The code contains a semicolon where it is probably not intended, such as between a 'for', 'while', or 'if' and a code block."
      },
      "local_effect" : {
        "en" : "A misplaced semicolon is a common typo that can cause unexpected changes to the flow of control in the program that results in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 670,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1123
      }
    },
    {
      "type" : "stray_semicolon",
      "subtype" : "logic_error",
      "code-language" : "javascript",
      "name" : {
        "en" : "Stray semicolon"
      },
      "description" : {
        "en" : "The code contains a semicolon where it is probably not intended, such as between a 'for', 'while', or 'if' and a code block."
      },
      "local_effect" : {
        "en" : "A misplaced semicolon is a common typo that can cause unexpected changes to the flow of control in the program that results in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 670,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1123
      }
    },
    {
      "type" : "stray_semicolon",
      "subtype" : "logic_error",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Stray semicolon"
      },
      "description" : {
        "en" : "The code contains a semicolon where it is probably not intended, such as between a 'for', 'while', or 'if' and a code block."
      },
      "local_effect" : {
        "en" : "A misplaced semicolon is a common typo that can cause unexpected changes to the flow of control in the program that results in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 670,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1123
      }
    },
    {
      "type" : "stray_semicolon",
      "subtype" : "logic_error",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Stray semicolon"
      },
      "description" : {
        "en" : "The code contains a semicolon where it is probably not intended, such as between a 'for', 'while', or 'if' and a code block."
      },
      "local_effect" : {
        "en" : "A misplaced semicolon is a common typo that can cause unexpected changes to the flow of control in the program that results in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 670,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1123
      }
    },
    {
      "type" : "stray_semicolon",
      "subtype" : "logic_error",
      "code-language" : "php",
      "name" : {
        "en" : "Stray semicolon"
      },
      "description" : {
        "en" : "The code contains a semicolon where it is probably not intended, such as between a 'for', 'while', or 'if' and a code block."
      },
      "local_effect" : {
        "en" : "A misplaced semicolon is a common typo that can cause unexpected changes to the flow of control in the program that results in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 670,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1123
      }
    },
    {
      "type" : "stray_semicolon",
      "subtype" : "logic_error",
      "code-language" : "typescript",
      "name" : {
        "en" : "Stray semicolon"
      },
      "description" : {
        "en" : "The code contains a semicolon where it is probably not intended, such as between a 'for', 'while', or 'if' and a code block."
      },
      "local_effect" : {
        "en" : "A misplaced semicolon is a common typo that can cause unexpected changes to the flow of control in the program that results in logical errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 670,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1123
      }
    },
    {
      "type" : "stream_format_state",
      "subtype" : "not_restored",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Not restoring ostream format"
      },
      "description" : {
        "en" : "Not restoring the stream format state of an ostream"
      },
      "local_effect" : {
        "en" : "The next output operation may not expect the stream format state being altered, resulting in incorrectly formatted output."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1431
      }
    },
    {
      "type" : "stream_format_state",
      "subtype" : "not_restored",
      "code-language" : "cuda",
      "name" : {
        "en" : "Not restoring ostream format"
      },
      "description" : {
        "en" : "Not restoring the stream format state of an ostream"
      },
      "local_effect" : {
        "en" : "The next output operation may not expect the stream format state being altered, resulting in incorrectly formatted output."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1431
      }
    },
    {
      "type" : "stream_format_state",
      "subtype" : "not_restored",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Not restoring ostream format"
      },
      "description" : {
        "en" : "Not restoring the stream format state of an ostream"
      },
      "local_effect" : {
        "en" : "The next output operation may not expect the stream format state being altered, resulting in incorrectly formatted output."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1431
      }
    },
    {
      "type" : "stream_format_state",
      "subtype" : "suspicious_setf_mask",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unknown mask in setf"
      },
      "description" : {
        "en" : "setf (or a similar) was called, but the argument was not recognized as being composed of valid format state bits"
      },
      "local_effect" : {
        "en" : "Usually this error is caused by an analysis imprecision, but a true bug may indicate an incorrect mask."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "suspicious_setf_mask",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1431
      }
    },
    {
      "type" : "stream_format_state",
      "subtype" : "suspicious_setf_mask",
      "code-language" : "cuda",
      "name" : {
        "en" : "Unknown mask in setf"
      },
      "description" : {
        "en" : "setf (or a similar) was called, but the argument was not recognized as being composed of valid format state bits"
      },
      "local_effect" : {
        "en" : "Usually this error is caused by an analysis imprecision, but a true bug may indicate an incorrect mask."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "suspicious_setf_mask",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1431
      }
    },
    {
      "type" : "stream_format_state",
      "subtype" : "suspicious_setf_mask",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Unknown mask in setf"
      },
      "description" : {
        "en" : "setf (or a similar) was called, but the argument was not recognized as being composed of valid format state bits"
      },
      "local_effect" : {
        "en" : "Usually this error is caused by an analysis imprecision, but a true bug may indicate an incorrect mask."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "suspicious_setf_mask",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1431
      }
    },
    {
      "type" : "strict_transport_security",
      "subtype" : "force_ssl_disabled_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Missing encryption"
      },
      "description" : {
        "en" : "The Ruby on Rails force_ssl configuration option can be enabled to force use of HTTPS."
      },
      "local_effect" : {
        "en" : "Sensitive data sent to or received from the application may be read or manipulated by unintended actors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 319,
        "impact" : "Medium",
        "subcategory" : "force_ssl_disabled_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "string_overflow",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Buffer overflow"
      },
      "description" : {
        "en" : "Size of destination buffer is smaller than the size of the source buffer or size of the source buffer is unknown"
      },
      "local_effect" : {
        "en" : "The source buffer may be a string larger than the destination buffer, causing buffer overflow."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 120,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "string_overflow",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Buffer overflow"
      },
      "description" : {
        "en" : "Size of destination buffer is smaller than the size of the source buffer or size of the source buffer is unknown"
      },
      "local_effect" : {
        "en" : "The source buffer may be a string larger than the destination buffer, causing buffer overflow."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 120,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "string_overflow",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Buffer overflow"
      },
      "description" : {
        "en" : "Size of destination buffer is smaller than the size of the source buffer or size of the source buffer is unknown"
      },
      "local_effect" : {
        "en" : "The source buffer may be a string larger than the destination buffer, causing buffer overflow."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 120,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "string_overflow",
      "subtype" : "fixed_size_dest",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Copy into fixed size buffer"
      },
      "description" : {
        "en" : "A source buffer of statically unknown size is copied into a fixed-size destination buffer"
      },
      "local_effect" : {
        "en" : "The string operation will write past the end of the fixed-size destination buffer if the source buffer is too large."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 120,
        "impact" : "Low",
        "subcategory" : "fixed_size_dest",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "string_overflow",
      "subtype" : "fixed_size_dest",
      "code-language" : "cuda",
      "name" : {
        "en" : "Copy into fixed size buffer"
      },
      "description" : {
        "en" : "A source buffer of statically unknown size is copied into a fixed-size destination buffer"
      },
      "local_effect" : {
        "en" : "The string operation will write past the end of the fixed-size destination buffer if the source buffer is too large."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 120,
        "impact" : "Low",
        "subcategory" : "fixed_size_dest",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "string_overflow",
      "subtype" : "fixed_size_dest",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Copy into fixed size buffer"
      },
      "description" : {
        "en" : "A source buffer of statically unknown size is copied into a fixed-size destination buffer"
      },
      "local_effect" : {
        "en" : "The string operation will write past the end of the fixed-size destination buffer if the source buffer is too large."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 120,
        "impact" : "Low",
        "subcategory" : "fixed_size_dest",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "string_overflow",
      "subtype" : "likely_overflow",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Destination buffer too small"
      },
      "description" : {
        "en" : "Size of destination buffer is smaller than the size of the source buffer"
      },
      "local_effect" : {
        "en" : "The source buffer may be a string larger than the destination buffer, causing buffer overflow."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 120,
        "impact" : "High",
        "subcategory" : "likely_overflow",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "string_overflow",
      "subtype" : "likely_overflow",
      "code-language" : "cuda",
      "name" : {
        "en" : "Destination buffer too small"
      },
      "description" : {
        "en" : "Size of destination buffer is smaller than the size of the source buffer"
      },
      "local_effect" : {
        "en" : "The source buffer may be a string larger than the destination buffer, causing buffer overflow."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 120,
        "impact" : "High",
        "subcategory" : "likely_overflow",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "string_overflow",
      "subtype" : "likely_overflow",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Destination buffer too small"
      },
      "description" : {
        "en" : "Size of destination buffer is smaller than the size of the source buffer"
      },
      "local_effect" : {
        "en" : "The source buffer may be a string larger than the destination buffer, causing buffer overflow."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 120,
        "impact" : "High",
        "subcategory" : "likely_overflow",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "string_size",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unbounded source buffer"
      },
      "description" : {
        "en" : "A source buffer of arbitrarily large size is used where a fixed-size destination buffer is expected"
      },
      "local_effect" : {
        "en" : "The string operation can write past the end of the fixed-size destination buffer if the source buffer is too large."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 120,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "string_size",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Unbounded source buffer"
      },
      "description" : {
        "en" : "A source buffer of arbitrarily large size is used where a fixed-size destination buffer is expected"
      },
      "local_effect" : {
        "en" : "The string operation can write past the end of the fixed-size destination buffer if the source buffer is too large."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 120,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "string_size",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Unbounded source buffer"
      },
      "description" : {
        "en" : "A source buffer of arbitrarily large size is used where a fixed-size destination buffer is expected"
      },
      "local_effect" : {
        "en" : "The string operation can write past the end of the fixed-size destination buffer if the source buffer is too large."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 120,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 540
      }
    },
    {
      "type" : "swapped_arguments",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "swapped_arguments",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "swapped_arguments",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "swapped_arguments",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "swapped_arguments",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "swapped_arguments",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "swapped_arguments",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Arguments in wrong order"
      },
      "description" : {
        "en" : "The arguments to a function call are provided in the wrong order."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 683,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1133
      }
    },
    {
      "type" : "symfony_el_injection",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Symfony EL injection"
      },
      "description" : {
        "en" : "Executing a tainted string as a Symfony Expression Language expression."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 917,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 269
      }
    },
    {
      "type" : "taint_assert",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Untainted assertion violation"
      },
      "description" : {
        "en" : "A user assertion is present that states a value is not tainted.  However, the tool taint computation indicates that this value is tainted.  The validity of the assertion should be reviewed and removed if incorrect. If the assertion is valid, review how tainted data is inserted into the value and remove the taint source as appropriate."
      },
      "local_effect" : {
        "en" : "The computed taint is overridden.  Unsafe uses of this value will not be reported as further security defects."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1432
      }
    },
    {
      "type" : "taint_assert",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Untainted assertion violation"
      },
      "description" : {
        "en" : "A user assertion is present that states a value is not tainted.  However, the tool taint computation indicates that this value is tainted.  The validity of the assertion should be reviewed and removed if incorrect. If the assertion is valid, review how tainted data is inserted into the value and remove the taint source as appropriate."
      },
      "local_effect" : {
        "en" : "The computed taint is overridden.  Unsafe uses of this value will not be reported as further security defects."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : null,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1432
      }
    },
    {
      "type" : "tainted_environment_with_execution",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "Tainted environment variable for subprocess"
      },
      "description" : {
        "en" : "A user-controllable string is passed into the environment of a process that is executed."
      },
      "local_effect" : {
        "en" : "An attacker may be able to change what the process does, which could bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 78,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1326
      }
    },
    {
      "type" : "tainted_environment_with_execution",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Tainted environment variable for subprocess"
      },
      "description" : {
        "en" : "A user-controllable string is passed into the environment of a process that is executed."
      },
      "local_effect" : {
        "en" : "An attacker may be able to change what the process does, which could bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 78,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1326
      }
    },
    {
      "type" : "tainted_environment_with_execution",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Tainted environment variable for subprocess"
      },
      "description" : {
        "en" : "A user-controllable string is passed into the environment of a process that is executed."
      },
      "local_effect" : {
        "en" : "An attacker may be able to change what the process does, which could bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 78,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1326
      }
    },
    {
      "type" : "tainted_environment_with_execution",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Tainted environment variable for subprocess"
      },
      "description" : {
        "en" : "A user-controllable string is passed into the environment of a process that is executed."
      },
      "local_effect" : {
        "en" : "An attacker may be able to change what the process does, which could bypass security controls or disclose unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 78,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1326
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Use of untrusted scalar value"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source used in a trusted context"
      },
      "local_effect" : {
        "en" : "The unscrutinized value may be incorrectly assumed to be within a certain range by later operations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 20,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Use of untrusted scalar value"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source used in a trusted context"
      },
      "local_effect" : {
        "en" : "The unscrutinized value may be incorrectly assumed to be within a certain range by later operations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 20,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Use of untrusted scalar value"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source used in a trusted context"
      },
      "local_effect" : {
        "en" : "The unscrutinized value may be incorrectly assumed to be within a certain range by later operations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 20,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "allocation",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Untrusted allocation size"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source is used as allocation size"
      },
      "local_effect" : {
        "en" : "The allocation size could be controlled by an attacker."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 789,
        "impact" : "Medium",
        "subcategory" : "allocation",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1195
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "allocation",
      "code-language" : "cuda",
      "name" : {
        "en" : "Untrusted allocation size"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source is used as allocation size"
      },
      "local_effect" : {
        "en" : "The allocation size could be controlled by an attacker."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 789,
        "impact" : "Medium",
        "subcategory" : "allocation",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1195
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "allocation",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Untrusted allocation size"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source is used as allocation size"
      },
      "local_effect" : {
        "en" : "The allocation size could be controlled by an attacker."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 789,
        "impact" : "Medium",
        "subcategory" : "allocation",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1195
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "array_index_read",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Untrusted array index read"
      },
      "description" : {
        "en" : "Read from array at index computed using an unscrutinized value from an untrusted source"
      },
      "local_effect" : {
        "en" : "The array index could be controlled by an attacker, leading to reads outside the bounds of the array."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 129,
        "impact" : "Medium",
        "subcategory" : "array_index_read",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "array_index_read",
      "code-language" : "cuda",
      "name" : {
        "en" : "Untrusted array index read"
      },
      "description" : {
        "en" : "Read from array at index computed using an unscrutinized value from an untrusted source"
      },
      "local_effect" : {
        "en" : "The array index could be controlled by an attacker, leading to reads outside the bounds of the array."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 129,
        "impact" : "Medium",
        "subcategory" : "array_index_read",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "array_index_read",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Untrusted array index read"
      },
      "description" : {
        "en" : "Read from array at index computed using an unscrutinized value from an untrusted source"
      },
      "local_effect" : {
        "en" : "The array index could be controlled by an attacker, leading to reads outside the bounds of the array."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 129,
        "impact" : "Medium",
        "subcategory" : "array_index_read",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "array_index_write",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Untrusted array index write"
      },
      "description" : {
        "en" : "Write to array at index computed using an unscrutinized value from an untrusted source"
      },
      "local_effect" : {
        "en" : "The array index could be controlled by an attacker, leading to writes outside the bounds of the array."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 129,
        "impact" : "Medium",
        "subcategory" : "array_index_write",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "array_index_write",
      "code-language" : "cuda",
      "name" : {
        "en" : "Untrusted array index write"
      },
      "description" : {
        "en" : "Write to array at index computed using an unscrutinized value from an untrusted source"
      },
      "local_effect" : {
        "en" : "The array index could be controlled by an attacker, leading to writes outside the bounds of the array."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 129,
        "impact" : "Medium",
        "subcategory" : "array_index_write",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "array_index_write",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Untrusted array index write"
      },
      "description" : {
        "en" : "Write to array at index computed using an unscrutinized value from an untrusted source"
      },
      "local_effect" : {
        "en" : "The array index could be controlled by an attacker, leading to writes outside the bounds of the array."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 129,
        "impact" : "Medium",
        "subcategory" : "array_index_write",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "critical_argument",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Untrusted value as argument"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source used as argument to a function (for example, a buffer size)"
      },
      "local_effect" : {
        "en" : "The argument could be controlled by an attacker, who could invoke the function with arbitrary values (for example, a very high or negative buffer size)."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 20,
        "impact" : "Medium",
        "subcategory" : "critical_argument",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "critical_argument",
      "code-language" : "cuda",
      "name" : {
        "en" : "Untrusted value as argument"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source used as argument to a function (for example, a buffer size)"
      },
      "local_effect" : {
        "en" : "The argument could be controlled by an attacker, who could invoke the function with arbitrary values (for example, a very high or negative buffer size)."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 20,
        "impact" : "Medium",
        "subcategory" : "critical_argument",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "critical_argument",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Untrusted value as argument"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source used as argument to a function (for example, a buffer size)"
      },
      "local_effect" : {
        "en" : "The argument could be controlled by an attacker, who could invoke the function with arbitrary values (for example, a very high or negative buffer size)."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 20,
        "impact" : "Medium",
        "subcategory" : "critical_argument",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "divisor",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Untrusted divisor"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source used as a divisor"
      },
      "local_effect" : {
        "en" : "The divisor could be controlled by an attacker, who could cause a division by zero."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "divisor",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "divisor",
      "code-language" : "cuda",
      "name" : {
        "en" : "Untrusted divisor"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source used as a divisor"
      },
      "local_effect" : {
        "en" : "The divisor could be controlled by an attacker, who could cause a division by zero."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "divisor",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "divisor",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Untrusted divisor"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source used as a divisor"
      },
      "local_effect" : {
        "en" : "The divisor could be controlled by an attacker, who could cause a division by zero."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 369,
        "impact" : "Medium",
        "subcategory" : "divisor",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 871
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "loop_bound",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Untrusted loop bound"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source used as a loop bound"
      },
      "local_effect" : {
        "en" : "An attacker could control the number of times the loop iterates."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 606,
        "impact" : "Medium",
        "subcategory" : "loop_bound",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1073
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "loop_bound",
      "code-language" : "cuda",
      "name" : {
        "en" : "Untrusted loop bound"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source used as a loop bound"
      },
      "local_effect" : {
        "en" : "An attacker could control the number of times the loop iterates."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 606,
        "impact" : "Medium",
        "subcategory" : "loop_bound",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1073
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "loop_bound",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Untrusted loop bound"
      },
      "description" : {
        "en" : "An unscrutinized value from an untrusted source used as a loop bound"
      },
      "local_effect" : {
        "en" : "An attacker could control the number of times the loop iterates."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 606,
        "impact" : "Medium",
        "subcategory" : "loop_bound",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1073
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "pointer_deref_read",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Untrusted pointer read"
      },
      "description" : {
        "en" : "Reads target of a pointer computed using an unscrutinized value from an untrusted source"
      },
      "local_effect" : {
        "en" : "The pointer value could be controlled by an attacker, leading to reads from arbitrary memory locations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 129,
        "impact" : "Medium",
        "subcategory" : "pointer_deref_read",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "pointer_deref_read",
      "code-language" : "cuda",
      "name" : {
        "en" : "Untrusted pointer read"
      },
      "description" : {
        "en" : "Reads target of a pointer computed using an unscrutinized value from an untrusted source"
      },
      "local_effect" : {
        "en" : "The pointer value could be controlled by an attacker, leading to reads from arbitrary memory locations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 129,
        "impact" : "Medium",
        "subcategory" : "pointer_deref_read",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "pointer_deref_read",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Untrusted pointer read"
      },
      "description" : {
        "en" : "Reads target of a pointer computed using an unscrutinized value from an untrusted source"
      },
      "local_effect" : {
        "en" : "The pointer value could be controlled by an attacker, leading to reads from arbitrary memory locations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 129,
        "impact" : "Medium",
        "subcategory" : "pointer_deref_read",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "pointer_deref_write",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Untrusted pointer write"
      },
      "description" : {
        "en" : "Write to target of pointer computed using an unscrutinized value from an untrusted source"
      },
      "local_effect" : {
        "en" : "The pointer value could be controlled by an attacker, leading to writes to arbitrary memory."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 129,
        "impact" : "Medium",
        "subcategory" : "pointer_deref_write",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "pointer_deref_write",
      "code-language" : "cuda",
      "name" : {
        "en" : "Untrusted pointer write"
      },
      "description" : {
        "en" : "Write to target of pointer computed using an unscrutinized value from an untrusted source"
      },
      "local_effect" : {
        "en" : "The pointer value could be controlled by an attacker, leading to writes to arbitrary memory."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 129,
        "impact" : "Medium",
        "subcategory" : "pointer_deref_write",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_scalar",
      "subtype" : "pointer_deref_write",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Untrusted pointer write"
      },
      "description" : {
        "en" : "Write to target of pointer computed using an unscrutinized value from an untrusted source"
      },
      "local_effect" : {
        "en" : "The pointer value could be controlled by an attacker, leading to writes to arbitrary memory."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 129,
        "impact" : "Medium",
        "subcategory" : "pointer_deref_write",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 611
      }
    },
    {
      "type" : "tainted_string",
      "subtype" : "sensitive",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Use of untrusted string value"
      },
      "description" : {
        "en" : "An unscrutinized string from an untrusted source used in a trusted context"
      },
      "local_effect" : {
        "en" : "The string may be incorrectly assumed to not contain certain metacharacters or element names in later operations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 20,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 216
      }
    },
    {
      "type" : "tainted_string",
      "subtype" : "sensitive",
      "code-language" : "cuda",
      "name" : {
        "en" : "Use of untrusted string value"
      },
      "description" : {
        "en" : "An unscrutinized string from an untrusted source used in a trusted context"
      },
      "local_effect" : {
        "en" : "The string may be incorrectly assumed to not contain certain metacharacters or element names in later operations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 20,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 216
      }
    },
    {
      "type" : "tainted_string",
      "subtype" : "sensitive",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Use of untrusted string value"
      },
      "description" : {
        "en" : "An unscrutinized string from an untrusted source used in a trusted context"
      },
      "local_effect" : {
        "en" : "The string may be incorrectly assumed to not contain certain metacharacters or element names in later operations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Insecure data handling",
        "cweCategory" : 20,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 216
      }
    },
    {
      "type" : "template_injection",
      "subtype" : "erb_template_injection_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Template injection"
      },
      "description" : {
        "en" : "User input is used directly in an ERB template."
      },
      "local_effect" : {
        "en" : "Remote code execution is possible if the attacker can inject strings into an ERB template."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "erb_template_injection_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "toctou",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Time of check time of use"
      },
      "description" : {
        "en" : "A check occurs on a file's attributes before the file is used in a privileged operation, but things may have changed"
      },
      "local_effect" : {
        "en" : "An attacker could change the filename's file association or other attributes between the check and use."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 367,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 869
      }
    },
    {
      "type" : "toctou",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Time of check time of use"
      },
      "description" : {
        "en" : "A check occurs on a file's attributes before the file is used in a privileged operation, but things may have changed"
      },
      "local_effect" : {
        "en" : "An attacker could change the filename's file association or other attributes between the check and use."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 367,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 869
      }
    },
    {
      "type" : "toctou",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Time of check time of use"
      },
      "description" : {
        "en" : "A check occurs on a file's attributes before the file is used in a privileged operation, but things may have changed"
      },
      "local_effect" : {
        "en" : "An attacker could change the filename's file association or other attributes between the check and use."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 367,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 869
      }
    },
    {
      "type" : "trust_boundary_violation",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Trust boundary violation"
      },
      "description" : {
        "en" : "A user-controllable string is stored in a trusted data structure."
      },
      "local_effect" : {
        "en" : "The tainted data can be mixed with trustworthy data and can be mistakenly used in an insecure manner."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 501,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 225
      }
    },
    {
      "type" : "uncaught_exception",
      "subtype" : "policy",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Uncaught exception"
      },
      "description" : {
        "en" : "A C++ exception is thrown but never caught"
      },
      "local_effect" : {
        "en" : "If the exception is ever thrown, the program will crash."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 248,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 767
      }
    },
    {
      "type" : "uncaught_exception",
      "subtype" : "policy",
      "code-language" : "cuda",
      "name" : {
        "en" : "Uncaught exception"
      },
      "description" : {
        "en" : "A C++ exception is thrown but never caught"
      },
      "local_effect" : {
        "en" : "If the exception is ever thrown, the program will crash."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 248,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 767
      }
    },
    {
      "type" : "uncaught_exception",
      "subtype" : "policy",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Uncaught exception"
      },
      "description" : {
        "en" : "A C++ exception is thrown but never caught"
      },
      "local_effect" : {
        "en" : "If the exception is ever thrown, the program will crash."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 248,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 767
      }
    },
    {
      "type" : "unchecked_origin_of_message_event",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Unchecked origin of message event"
      },
      "description" : {
        "en" : "A 'message' handler does not check the origin of its received message event."
      },
      "local_effect" : {
        "en" : "An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 346,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 413
      }
    },
    {
      "type" : "unchecked_origin_of_message_event",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Unchecked origin of message event"
      },
      "description" : {
        "en" : "A 'message' handler does not check the origin of its received message event."
      },
      "local_effect" : {
        "en" : "An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 346,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 413
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "argument",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unchecked return value as arg"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors, and passed directly to another function as an argument."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, it may be assumed to be a non-error value by the outer function call."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "unchecked_arg",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "argument",
      "code-language" : "c#",
      "name" : {
        "en" : "Unchecked return value as arg"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors, and passed directly to another function as an argument."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, it may be assumed to be a non-error value by the outer function call."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "unchecked_arg",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "argument",
      "code-language" : "cuda",
      "name" : {
        "en" : "Unchecked return value as arg"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors, and passed directly to another function as an argument."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, it may be assumed to be a non-error value by the outer function call."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "unchecked_arg",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "argument",
      "code-language" : "go",
      "name" : {
        "en" : "Unchecked return value as arg"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors, and passed directly to another function as an argument."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, it may be assumed to be a non-error value by the outer function call."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "unchecked_arg",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "argument",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Unchecked return value as arg"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors, and passed directly to another function as an argument."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, it may be assumed to be a non-error value by the outer function call."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "unchecked_arg",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "inferred",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "inferred",
      "code-language" : "c#",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "inferred",
      "code-language" : "cuda",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "inferred",
      "code-language" : "go",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "inferred",
      "code-language" : "java",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "inferred",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "inferred",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Unchecked return value"
      },
      "description" : {
        "en" : "Value returned from a function is not checked for errors before being used."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "library_function",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unchecked return value from library"
      },
      "description" : {
        "en" : "Value returned from a library function is not checked for errors before being used. This value may indicate an error condition."
      },
      "local_effect" : {
        "en" : "The function returns a value that indicates an error condition. If this is not checked, the error condition may not be handled correctly."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "library_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "library_function",
      "code-language" : "c#",
      "name" : {
        "en" : "Unchecked return value from library"
      },
      "description" : {
        "en" : "Value returned from a library function is not checked for errors before being used. This value may indicate an error condition."
      },
      "local_effect" : {
        "en" : "The function returns a value that indicates an error condition. If this is not checked, the error condition may not be handled correctly."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "library_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "library_function",
      "code-language" : "cuda",
      "name" : {
        "en" : "Unchecked return value from library"
      },
      "description" : {
        "en" : "Value returned from a library function is not checked for errors before being used. This value may indicate an error condition."
      },
      "local_effect" : {
        "en" : "The function returns a value that indicates an error condition. If this is not checked, the error condition may not be handled correctly."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "library_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "library_function",
      "code-language" : "java",
      "name" : {
        "en" : "Unchecked return value from library"
      },
      "description" : {
        "en" : "Value returned from a library function is not checked for errors before being used. This value may indicate an error condition."
      },
      "local_effect" : {
        "en" : "The function returns a value that indicates an error condition. If this is not checked, the error condition may not be handled correctly."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "library_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "library_function",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unchecked return value from library"
      },
      "description" : {
        "en" : "Value returned from a library function is not checked for errors before being used. This value may indicate an error condition."
      },
      "local_effect" : {
        "en" : "The function returns a value that indicates an error condition. If this is not checked, the error condition may not be handled correctly."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "library_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "library_function",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Unchecked return value from library"
      },
      "description" : {
        "en" : "Value returned from a library function is not checked for errors before being used. This value may indicate an error condition."
      },
      "local_effect" : {
        "en" : "The function returns a value that indicates an error condition. If this is not checked, the error condition may not be handled correctly."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "library_function",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "returns_error_info",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unchecked error in return value"
      },
      "description" : {
        "en" : "Function may return error code, but value returned from this function is not checked for error condition."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "returns_error_info",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "returns_error_info",
      "code-language" : "cuda",
      "name" : {
        "en" : "Unchecked error in return value"
      },
      "description" : {
        "en" : "Function may return error code, but value returned from this function is not checked for error condition."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "returns_error_info",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "short_read",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Ignoring number of bytes read"
      },
      "description" : {
        "en" : "Value returned from a function and indicating the number of bytes read is ignored."
      },
      "local_effect" : {
        "en" : "The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "short_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "short_read",
      "code-language" : "c#",
      "name" : {
        "en" : "Ignoring number of bytes read"
      },
      "description" : {
        "en" : "Value returned from a function and indicating the number of bytes read is ignored."
      },
      "local_effect" : {
        "en" : "The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "short_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "short_read",
      "code-language" : "cuda",
      "name" : {
        "en" : "Ignoring number of bytes read"
      },
      "description" : {
        "en" : "Value returned from a function and indicating the number of bytes read is ignored."
      },
      "local_effect" : {
        "en" : "The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "short_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "short_read",
      "code-language" : "java",
      "name" : {
        "en" : "Ignoring number of bytes read"
      },
      "description" : {
        "en" : "Value returned from a function and indicating the number of bytes read is ignored."
      },
      "local_effect" : {
        "en" : "The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "short_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "short_read",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Ignoring number of bytes read"
      },
      "description" : {
        "en" : "Value returned from a function and indicating the number of bytes read is ignored."
      },
      "local_effect" : {
        "en" : "The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "short_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "short_read",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Ignoring number of bytes read"
      },
      "description" : {
        "en" : "Value returned from a function and indicating the number of bytes read is ignored."
      },
      "local_effect" : {
        "en" : "The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "short_read",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "user_required",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unchecked return value from user code"
      },
      "description" : {
        "en" : "Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "user_required",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "user_required",
      "code-language" : "c#",
      "name" : {
        "en" : "Unchecked return value from user code"
      },
      "description" : {
        "en" : "Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "user_required",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "user_required",
      "code-language" : "cuda",
      "name" : {
        "en" : "Unchecked return value from user code"
      },
      "description" : {
        "en" : "Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "user_required",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "user_required",
      "code-language" : "java",
      "name" : {
        "en" : "Unchecked return value from user code"
      },
      "description" : {
        "en" : "Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "user_required",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "user_required",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unchecked return value from user code"
      },
      "description" : {
        "en" : "Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "user_required",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unchecked_return_value",
      "subtype" : "user_required",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Unchecked return value from user code"
      },
      "description" : {
        "en" : "Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked."
      },
      "local_effect" : {
        "en" : "If the function returns an error value, the error value may be mistaken for a normal value."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Error handling issues",
        "cweCategory" : 252,
        "impact" : "Medium",
        "subcategory" : "user_required",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 770
      }
    },
    {
      "type" : "unclassified_parse_warning",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Parse warning"
      },
      "description" : {
        "en" : "A parse warning from the Coverity parser may indicate a bug, or poor coding practice"
      },
      "local_effect" : {
        "en" : "A parse warning may reduce maintainability of the code, or it may indicate a serious error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Parse warnings",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "unclassified_parse_warning",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Parse warning"
      },
      "description" : {
        "en" : "A parse warning from the Coverity parser may indicate a bug, or poor coding practice"
      },
      "local_effect" : {
        "en" : "A parse warning may reduce maintainability of the code, or it may indicate a serious error."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Parse warnings",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "unclassified_recovery_warning",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Parse recovery warning"
      },
      "description" : {
        "en" : "A parse error caused a function to be skipped by Coverity Static Analysis"
      },
      "local_effect" : {
        "en" : "The function will not be analyzed for other defects; any callers of the function will not have access to its function summary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Parse warnings",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "unclassified_recovery_warning",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Parse recovery warning"
      },
      "description" : {
        "en" : "A parse error caused a function to be skipped by Coverity Static Analysis"
      },
      "local_effect" : {
        "en" : "The function will not be analyzed for other defects; any callers of the function will not have access to its function summary."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Parse warnings",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "unclassified_semantic_warning",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Parse semantic warning"
      },
      "description" : {
        "en" : "The function contains a non-portable or non-standard construct forcing the Coverity parser to guess the meaning"
      },
      "local_effect" : {
        "en" : "There may be a loss of precision if the Coverity parser misinterpreted the code in the function."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Parse warnings",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "unclassified_semantic_warning",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Parse semantic warning"
      },
      "description" : {
        "en" : "The function contains a non-portable or non-standard construct forcing the Coverity parser to guess the meaning"
      },
      "local_effect" : {
        "en" : "There may be a loss of precision if the Coverity parser misinterpreted the code in the function."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Parse warnings",
        "cweCategory" : null,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1156
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Missing encryption of sensitive data"
      },
      "description" : {
        "en" : "Retrieving or receiving unencrypted sensitive data."
      },
      "local_effect" : {
        "en" : "An attacker can read this data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Missing encryption of sensitive data"
      },
      "description" : {
        "en" : "Retrieving or receiving unencrypted sensitive data."
      },
      "local_effect" : {
        "en" : "An attacker can read this data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Missing encryption of sensitive data"
      },
      "description" : {
        "en" : "Retrieving or receiving unencrypted sensitive data."
      },
      "local_effect" : {
        "en" : "An attacker can read this data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Missing encryption of sensitive data"
      },
      "description" : {
        "en" : "Retrieving or receiving unencrypted sensitive data."
      },
      "local_effect" : {
        "en" : "An attacker can read this data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Missing encryption of sensitive data"
      },
      "description" : {
        "en" : "Retrieving or receiving unencrypted sensitive data."
      },
      "local_effect" : {
        "en" : "An attacker can read this data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Missing encryption of sensitive data"
      },
      "description" : {
        "en" : "Retrieving or receiving unencrypted sensitive data."
      },
      "local_effect" : {
        "en" : "An attacker can read this data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Missing encryption of sensitive data"
      },
      "description" : {
        "en" : "Retrieving or receiving unencrypted sensitive data."
      },
      "local_effect" : {
        "en" : "An attacker can read this data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 311,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_audit",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Missing encryption of sensitive data"
      },
      "description" : {
        "en" : "Use of sensitive data."
      },
      "local_effect" : {
        "en" : "An attacker can read this data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 311,
        "impact" : "Audit",
        "subcategory" : "cleartext_audit",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_audit",
      "code-language" : "c#",
      "name" : {
        "en" : "Missing encryption of sensitive data"
      },
      "description" : {
        "en" : "Use of sensitive data."
      },
      "local_effect" : {
        "en" : "An attacker can read this data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 311,
        "impact" : "Audit",
        "subcategory" : "cleartext_audit",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_audit",
      "code-language" : "cuda",
      "name" : {
        "en" : "Missing encryption of sensitive data"
      },
      "description" : {
        "en" : "Use of sensitive data."
      },
      "local_effect" : {
        "en" : "An attacker can read this data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 311,
        "impact" : "Audit",
        "subcategory" : "cleartext_audit",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_audit",
      "code-language" : "java",
      "name" : {
        "en" : "Missing encryption of sensitive data"
      },
      "description" : {
        "en" : "Use of sensitive data."
      },
      "local_effect" : {
        "en" : "An attacker can read this data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 311,
        "impact" : "Audit",
        "subcategory" : "cleartext_audit",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_audit",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Missing encryption of sensitive data"
      },
      "description" : {
        "en" : "Use of sensitive data."
      },
      "local_effect" : {
        "en" : "An attacker can read this data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 311,
        "impact" : "Audit",
        "subcategory" : "cleartext_audit",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_audit",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Missing encryption of sensitive data"
      },
      "description" : {
        "en" : "Use of sensitive data."
      },
      "local_effect" : {
        "en" : "An attacker can read this data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 311,
        "impact" : "Audit",
        "subcategory" : "cleartext_audit",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_audit",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Missing encryption of sensitive data"
      },
      "description" : {
        "en" : "Use of sensitive data."
      },
      "local_effect" : {
        "en" : "An attacker can read this data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 311,
        "impact" : "Audit",
        "subcategory" : "cleartext_audit",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "c#",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "cuda",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "java",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_cookie",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Cleartext sensitive data in a cookie"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a cookie."
      },
      "local_effect" : {
        "en" : "Attackers can read the sensitive data from the cookie with widely available tools."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 315,
        "impact" : "High",
        "subcategory" : "cleartext_in_cookie",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 824
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_database",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_database",
      "code-language" : "c#",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_database",
      "code-language" : "cuda",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_database",
      "code-language" : "java",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_database",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_database",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_database",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Cleartext sensitive data in a database"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a database."
      },
      "local_effect" : {
        "en" : "An attacker with access to the database can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 313,
        "impact" : "Medium",
        "subcategory" : "cleartext_in_database",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_file",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_file",
      "code-language" : "c#",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_file",
      "code-language" : "cuda",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_file",
      "code-language" : "java",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_file",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_file",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_in_file",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Cleartext sensitive data in a file"
      },
      "description" : {
        "en" : "Reading unencrypted sensitive data from a file."
      },
      "local_effect" : {
        "en" : "An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 313,
        "impact" : "Low",
        "subcategory" : "cleartext_in_file",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 822
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_transmission",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Receiving sensitive data in cleartext from the network."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_transmission",
      "code-language" : "c#",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Receiving sensitive data in cleartext from the network."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_transmission",
      "code-language" : "cuda",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Receiving sensitive data in cleartext from the network."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_transmission",
      "code-language" : "java",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Receiving sensitive data in cleartext from the network."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_transmission",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Receiving sensitive data in cleartext from the network."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_transmission",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Receiving sensitive data in cleartext from the network."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "unencrypted_sensitive_data",
      "subtype" : "cleartext_transmission",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Cleartext transmission of sensitive data"
      },
      "description" : {
        "en" : "Receiving sensitive data in cleartext from the network."
      },
      "local_effect" : {
        "en" : "An attacker that can intercept network traffic can recover the sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 319,
        "impact" : "High",
        "subcategory" : "cleartext_transmission",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 827
      }
    },
    {
      "type" : "unexpected_control_flow",
      "subtype" : "continue_in_do_while_false",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unexpected control flow"
      },
      "description" : {
        "en" : "Loop body does not re-execute on 'continue' statement"
      },
      "local_effect" : {
        "en" : "Execution jumps out of the loop rather than continuing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "continue_in_do_while_false",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1433
      }
    },
    {
      "type" : "unexpected_control_flow",
      "subtype" : "continue_in_do_while_false",
      "code-language" : "c#",
      "name" : {
        "en" : "Unexpected control flow"
      },
      "description" : {
        "en" : "Loop body does not re-execute on 'continue' statement"
      },
      "local_effect" : {
        "en" : "Execution jumps out of the loop rather than continuing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "continue_in_do_while_false",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1433
      }
    },
    {
      "type" : "unexpected_control_flow",
      "subtype" : "continue_in_do_while_false",
      "code-language" : "cuda",
      "name" : {
        "en" : "Unexpected control flow"
      },
      "description" : {
        "en" : "Loop body does not re-execute on 'continue' statement"
      },
      "local_effect" : {
        "en" : "Execution jumps out of the loop rather than continuing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "continue_in_do_while_false",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1433
      }
    },
    {
      "type" : "unexpected_control_flow",
      "subtype" : "continue_in_do_while_false",
      "code-language" : "java",
      "name" : {
        "en" : "Unexpected control flow"
      },
      "description" : {
        "en" : "Loop body does not re-execute on 'continue' statement"
      },
      "local_effect" : {
        "en" : "Execution jumps out of the loop rather than continuing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "continue_in_do_while_false",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1433
      }
    },
    {
      "type" : "unexpected_control_flow",
      "subtype" : "continue_in_do_while_false",
      "code-language" : "javascript",
      "name" : {
        "en" : "Unexpected control flow"
      },
      "description" : {
        "en" : "Loop body does not re-execute on 'continue' statement"
      },
      "local_effect" : {
        "en" : "Execution jumps out of the loop rather than continuing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "continue_in_do_while_false",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1433
      }
    },
    {
      "type" : "unexpected_control_flow",
      "subtype" : "continue_in_do_while_false",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unexpected control flow"
      },
      "description" : {
        "en" : "Loop body does not re-execute on 'continue' statement"
      },
      "local_effect" : {
        "en" : "Execution jumps out of the loop rather than continuing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "continue_in_do_while_false",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1433
      }
    },
    {
      "type" : "unexpected_control_flow",
      "subtype" : "continue_in_do_while_false",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Unexpected control flow"
      },
      "description" : {
        "en" : "Loop body does not re-execute on 'continue' statement"
      },
      "local_effect" : {
        "en" : "Execution jumps out of the loop rather than continuing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "continue_in_do_while_false",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1433
      }
    },
    {
      "type" : "unexpected_control_flow",
      "subtype" : "continue_in_do_while_false",
      "code-language" : "php",
      "name" : {
        "en" : "Unexpected control flow"
      },
      "description" : {
        "en" : "Loop body does not re-execute on 'continue' statement"
      },
      "local_effect" : {
        "en" : "Execution jumps out of the loop rather than continuing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "continue_in_do_while_false",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1433
      }
    },
    {
      "type" : "unexpected_control_flow",
      "subtype" : "continue_in_do_while_false",
      "code-language" : "ruby",
      "name" : {
        "en" : "Unexpected control flow"
      },
      "description" : {
        "en" : "Loop body does not re-execute on 'continue' statement"
      },
      "local_effect" : {
        "en" : "Execution jumps out of the loop rather than continuing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "continue_in_do_while_false",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1433
      }
    },
    {
      "type" : "unexpected_control_flow",
      "subtype" : "continue_in_do_while_false",
      "code-language" : "typescript",
      "name" : {
        "en" : "Unexpected control flow"
      },
      "description" : {
        "en" : "Loop body does not re-execute on 'continue' statement"
      },
      "local_effect" : {
        "en" : "Execution jumps out of the loop rather than continuing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "continue_in_do_while_false",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1433
      }
    },
    {
      "type" : "unexpected_control_flow",
      "subtype" : "continue_in_do_while_false",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Unexpected control flow"
      },
      "description" : {
        "en" : "Loop body does not re-execute on 'Continue' statement"
      },
      "local_effect" : {
        "en" : "Execution jumps out of the loop rather than continuing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 398,
        "impact" : "Medium",
        "subcategory" : "continue_in_do_while_false",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1433
      }
    },
    {
      "type" : "uninit",
      "subtype" : "array_index_read",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Uninitialized array index read"
      },
      "description" : {
        "en" : "Read from array at uninitialized index"
      },
      "local_effect" : {
        "en" : "Incorrect values will be read from an arbitrary memory location, causing incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "array_index_read",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "array_index_read",
      "code-language" : "cuda",
      "name" : {
        "en" : "Uninitialized array index read"
      },
      "description" : {
        "en" : "Read from array at uninitialized index"
      },
      "local_effect" : {
        "en" : "Incorrect values will be read from an arbitrary memory location, causing incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "array_index_read",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "array_index_read",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Uninitialized array index read"
      },
      "description" : {
        "en" : "Read from array at uninitialized index"
      },
      "local_effect" : {
        "en" : "Incorrect values will be read from an arbitrary memory location, causing incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "array_index_read",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "array_index_write",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Uninitialized array index write"
      },
      "description" : {
        "en" : "Write to array at uninitialized index"
      },
      "local_effect" : {
        "en" : "Some arbitrary memory location is overwritten. Incorrect values may subsequently be read."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "array_index_write",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "array_index_write",
      "code-language" : "cuda",
      "name" : {
        "en" : "Uninitialized array index write"
      },
      "description" : {
        "en" : "Write to array at uninitialized index"
      },
      "local_effect" : {
        "en" : "Some arbitrary memory location is overwritten. Incorrect values may subsequently be read."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "array_index_write",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "array_index_write",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Uninitialized array index write"
      },
      "description" : {
        "en" : "Write to array at uninitialized index"
      },
      "local_effect" : {
        "en" : "Some arbitrary memory location is overwritten. Incorrect values may subsequently be read."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "array_index_write",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "pointer_deref_read",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Uninitialized pointer read"
      },
      "description" : {
        "en" : "Reads an uninitialized pointer or its target"
      },
      "local_effect" : {
        "en" : "Incorrect values could be read from, or even written to, an arbitrary memory location, causing incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "pointer_deref_read",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "pointer_deref_read",
      "code-language" : "cuda",
      "name" : {
        "en" : "Uninitialized pointer read"
      },
      "description" : {
        "en" : "Reads an uninitialized pointer or its target"
      },
      "local_effect" : {
        "en" : "Incorrect values could be read from, or even written to, an arbitrary memory location, causing incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "pointer_deref_read",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "pointer_deref_read",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Uninitialized pointer read"
      },
      "description" : {
        "en" : "Reads an uninitialized pointer or its target"
      },
      "local_effect" : {
        "en" : "Incorrect values could be read from, or even written to, an arbitrary memory location, causing incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "pointer_deref_read",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "pointer_deref_write",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Uninitialized pointer write"
      },
      "description" : {
        "en" : "Write to target of an uninitialized pointer"
      },
      "local_effect" : {
        "en" : "This could cause an immediate crash or incorrect values might be read subsequently resulting in incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "pointer_deref_write",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "pointer_deref_write",
      "code-language" : "cuda",
      "name" : {
        "en" : "Uninitialized pointer write"
      },
      "description" : {
        "en" : "Write to target of an uninitialized pointer"
      },
      "local_effect" : {
        "en" : "This could cause an immediate crash or incorrect values might be read subsequently resulting in incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "pointer_deref_write",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "pointer_deref_write",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Uninitialized pointer write"
      },
      "description" : {
        "en" : "Write to target of an uninitialized pointer"
      },
      "local_effect" : {
        "en" : "This could cause an immediate crash or incorrect values might be read subsequently resulting in incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "pointer_deref_write",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "pointer_field",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Uninitialized pointer field"
      },
      "description" : {
        "en" : "A pointer field is not initialized in the constructor"
      },
      "local_effect" : {
        "en" : "The pointer field will point to an arbitrary memory location, any attempt to write may cause corruption."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Uninitialized members",
        "cweCategory" : 457,
        "impact" : "Medium",
        "subcategory" : "pointer",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "pointer_field",
      "code-language" : "cuda",
      "name" : {
        "en" : "Uninitialized pointer field"
      },
      "description" : {
        "en" : "A pointer field is not initialized in the constructor"
      },
      "local_effect" : {
        "en" : "The pointer field will point to an arbitrary memory location, any attempt to write may cause corruption."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Uninitialized members",
        "cweCategory" : 457,
        "impact" : "Medium",
        "subcategory" : "pointer",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "pointer_field",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Uninitialized pointer field"
      },
      "description" : {
        "en" : "A pointer field is not initialized in the constructor"
      },
      "local_effect" : {
        "en" : "The pointer field will point to an arbitrary memory location, any attempt to write may cause corruption."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Uninitialized members",
        "cweCategory" : 457,
        "impact" : "Medium",
        "subcategory" : "pointer",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "scalar",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Uninitialized scalar variable"
      },
      "description" : {
        "en" : "Use of an uninitialized variable"
      },
      "local_effect" : {
        "en" : "The variable will contain an arbitrary value left from earlier computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Uninitialized variables",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "scalar",
      "code-language" : "cuda",
      "name" : {
        "en" : "Uninitialized scalar variable"
      },
      "description" : {
        "en" : "Use of an uninitialized variable"
      },
      "local_effect" : {
        "en" : "The variable will contain an arbitrary value left from earlier computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Uninitialized variables",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "scalar",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Uninitialized scalar variable"
      },
      "description" : {
        "en" : "Use of an uninitialized variable"
      },
      "local_effect" : {
        "en" : "The variable will contain an arbitrary value left from earlier computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Uninitialized variables",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "scalar_field",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Uninitialized scalar field"
      },
      "description" : {
        "en" : "A scalar field is not initialized by the constructor"
      },
      "local_effect" : {
        "en" : "The field will contain an arbitrary value left over from earlier computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Uninitialized members",
        "cweCategory" : 457,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "scalar_field",
      "code-language" : "cuda",
      "name" : {
        "en" : "Uninitialized scalar field"
      },
      "description" : {
        "en" : "A scalar field is not initialized by the constructor"
      },
      "local_effect" : {
        "en" : "The field will contain an arbitrary value left over from earlier computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Uninitialized members",
        "cweCategory" : 457,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "uninit",
      "subtype" : "scalar_field",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Uninitialized scalar field"
      },
      "description" : {
        "en" : "A scalar field is not initialized by the constructor"
      },
      "local_effect" : {
        "en" : "The field will contain an arbitrary value left over from earlier computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Uninitialized members",
        "cweCategory" : 457,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 942
      }
    },
    {
      "type" : "unintended_global",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Unintended assign to global"
      },
      "description" : {
        "en" : "An implicitly created global is assigned a value, but it looks like a new local declaration was meant instead."
      },
      "local_effect" : {
        "en" : "The assignment will implicitly create a global variable."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1386
      }
    },
    {
      "type" : "unintended_global",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Unintended assign to global"
      },
      "description" : {
        "en" : "An implicitly created global is assigned a value, but it looks like a new local declaration was meant instead."
      },
      "local_effect" : {
        "en" : "The assignment will implicitly create a global variable."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1386
      }
    },
    {
      "type" : "unintended_integer_division",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "unintended_integer_division",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "unintended_integer_division",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "unintended_integer_division",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "unintended_integer_division",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "unintended_integer_division",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "unintended_integer_division",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "unintended_integer_division",
      "subtype" : null,
      "code-language" : "scala",
      "name" : {
        "en" : "Result is not floating-point"
      },
      "description" : {
        "en" : "When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended."
      },
      "local_effect" : {
        "en" : "The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 713
      }
    },
    {
      "type" : "unknown_language_injection",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Unknown language injection"
      },
      "description" : {
        "en" : "A user-controllable string is parsed using a parser generator that is used to create new languages or grammars."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the parsing, which may alter how the data is interpreted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 94,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 291
      }
    },
    {
      "type" : "unknown_language_injection",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Unknown language injection"
      },
      "description" : {
        "en" : "A user-controllable string is parsed using a parser generator that is used to create new languages or grammars."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the parsing, which may alter how the data is interpreted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 94,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 291
      }
    },
    {
      "type" : "unlocked_access",
      "subtype" : "unlocked_write",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unlocked write"
      },
      "description" : {
        "en" : "Attempt to write a shared variable without holding a lock."
      },
      "local_effect" : {
        "en" : "May result in data corruption."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 820,
        "impact" : "High",
        "subcategory" : "unlocked_write",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1213
      }
    },
    {
      "type" : "unlocked_access",
      "subtype" : "unlocked_write",
      "code-language" : "c#",
      "name" : {
        "en" : "Unlocked write"
      },
      "description" : {
        "en" : "Attempt to write a shared variable without holding a lock."
      },
      "local_effect" : {
        "en" : "May result in data corruption."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 820,
        "impact" : "High",
        "subcategory" : "unlocked_write",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1213
      }
    },
    {
      "type" : "unlocked_access",
      "subtype" : "unlocked_write",
      "code-language" : "cuda",
      "name" : {
        "en" : "Unlocked write"
      },
      "description" : {
        "en" : "Attempt to write a shared variable without holding a lock."
      },
      "local_effect" : {
        "en" : "May result in data corruption."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 820,
        "impact" : "High",
        "subcategory" : "unlocked_write",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1213
      }
    },
    {
      "type" : "unlocked_access",
      "subtype" : "unlocked_write",
      "code-language" : "java",
      "name" : {
        "en" : "Unlocked write"
      },
      "description" : {
        "en" : "Attempt to write a shared variable without holding a lock."
      },
      "local_effect" : {
        "en" : "May result in data corruption."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 820,
        "impact" : "High",
        "subcategory" : "unlocked_write",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1213
      }
    },
    {
      "type" : "unlocked_access",
      "subtype" : "unlocked_write",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Unlocked write"
      },
      "description" : {
        "en" : "Attempt to write a shared variable without holding a lock."
      },
      "local_effect" : {
        "en" : "May result in data corruption."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 820,
        "impact" : "High",
        "subcategory" : "unlocked_write",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1213
      }
    },
    {
      "type" : "unlogged_security_exception",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Unlogged security exception"
      },
      "description" : {
        "en" : "A security exception is caught but not logged."
      },
      "local_effect" : {
        "en" : "Each security exception must be logged properly to provide a notification about and a history of security events. This aids in a timely response to limit the severity and scale of attacks. It also provides information to analyze their origins and consequences."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 778,
        "impact" : "Medium",
        "subcategory" : "unlogged_security_exception",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1185
      }
    },
    {
      "type" : "unlogged_security_exception",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Unlogged security exception"
      },
      "description" : {
        "en" : "A security exception is caught but not logged."
      },
      "local_effect" : {
        "en" : "Each security exception must be logged properly to provide a notification about and a history of security events. This aids in a timely response to limit the severity and scale of attacks. It also provides information to analyze their origins and consequences."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 778,
        "impact" : "Medium",
        "subcategory" : "unlogged_security_exception",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1185
      }
    },
    {
      "type" : "unlogged_security_exception",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unlogged security exception"
      },
      "description" : {
        "en" : "A security exception is caught but not logged."
      },
      "local_effect" : {
        "en" : "Each security exception must be logged properly to provide a notification about and a history of security events. This aids in a timely response to limit the severity and scale of attacks. It also provides information to analyze their origins and consequences."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 778,
        "impact" : "Medium",
        "subcategory" : "unlogged_security_exception",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1185
      }
    },
    {
      "type" : "unlogged_security_exception",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Unlogged security exception"
      },
      "description" : {
        "en" : "A security exception is caught but not logged."
      },
      "local_effect" : {
        "en" : "Each security exception must be logged properly to provide a notification about and a history of security events. This aids in a timely response to limit the severity and scale of attacks. It also provides information to analyze their origins and consequences."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 778,
        "impact" : "Medium",
        "subcategory" : "unlogged_security_exception",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1185
      }
    },
    {
      "type" : "unreachable",
      "subtype" : "logic_error",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Structurally dead code"
      },
      "description" : {
        "en" : "Code block is unreachable because of the syntactic structure of the code"
      },
      "local_effect" : {
        "en" : "Actions intended to be performed by the unreachable code will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "unreachable",
      "subtype" : "logic_error",
      "code-language" : "c#",
      "name" : {
        "en" : "Structurally dead code"
      },
      "description" : {
        "en" : "Code block is unreachable because of the syntactic structure of the code"
      },
      "local_effect" : {
        "en" : "Actions intended to be performed by the unreachable code will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "unreachable",
      "subtype" : "logic_error",
      "code-language" : "cuda",
      "name" : {
        "en" : "Structurally dead code"
      },
      "description" : {
        "en" : "Code block is unreachable because of the syntactic structure of the code"
      },
      "local_effect" : {
        "en" : "Actions intended to be performed by the unreachable code will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "unreachable",
      "subtype" : "logic_error",
      "code-language" : "java",
      "name" : {
        "en" : "Structurally dead code"
      },
      "description" : {
        "en" : "Code block is unreachable because of the syntactic structure of the code"
      },
      "local_effect" : {
        "en" : "Actions intended to be performed by the unreachable code will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "unreachable",
      "subtype" : "logic_error",
      "code-language" : "javascript",
      "name" : {
        "en" : "Structurally dead code"
      },
      "description" : {
        "en" : "Code block is unreachable because of the syntactic structure of the code"
      },
      "local_effect" : {
        "en" : "Actions intended to be performed by the unreachable code will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "unreachable",
      "subtype" : "logic_error",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Structurally dead code"
      },
      "description" : {
        "en" : "Code block is unreachable because of the syntactic structure of the code"
      },
      "local_effect" : {
        "en" : "Actions intended to be performed by the unreachable code will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "unreachable",
      "subtype" : "logic_error",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Structurally dead code"
      },
      "description" : {
        "en" : "Code block is unreachable because of the syntactic structure of the code"
      },
      "local_effect" : {
        "en" : "Actions intended to be performed by the unreachable code will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "unreachable",
      "subtype" : "logic_error",
      "code-language" : "php",
      "name" : {
        "en" : "Structurally dead code"
      },
      "description" : {
        "en" : "Code block is unreachable because of the syntactic structure of the code"
      },
      "local_effect" : {
        "en" : "Actions intended to be performed by the unreachable code will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "unreachable",
      "subtype" : "logic_error",
      "code-language" : "python",
      "name" : {
        "en" : "Structurally dead code"
      },
      "description" : {
        "en" : "Code block is unreachable because of the syntactic structure of the code"
      },
      "local_effect" : {
        "en" : "Actions intended to be performed by the unreachable code will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "unreachable",
      "subtype" : "logic_error",
      "code-language" : "ruby",
      "name" : {
        "en" : "Structurally dead code"
      },
      "description" : {
        "en" : "Code block is unreachable because of the syntactic structure of the code"
      },
      "local_effect" : {
        "en" : "Actions intended to be performed by the unreachable code will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "unreachable",
      "subtype" : "logic_error",
      "code-language" : "scala",
      "name" : {
        "en" : "Structurally dead code"
      },
      "description" : {
        "en" : "Code block is unreachable because of the syntactic structure of the code"
      },
      "local_effect" : {
        "en" : "Actions intended to be performed by the unreachable code will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "unreachable",
      "subtype" : "logic_error",
      "code-language" : "typescript",
      "name" : {
        "en" : "Structurally dead code"
      },
      "description" : {
        "en" : "Code block is unreachable because of the syntactic structure of the code"
      },
      "local_effect" : {
        "en" : "Actions intended to be performed by the unreachable code will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "unreachable",
      "subtype" : "logic_error",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Structurally dead code"
      },
      "description" : {
        "en" : "Code block is unreachable because of the syntactic structure of the code"
      },
      "local_effect" : {
        "en" : "Actions intended to be performed by the unreachable code will never occur."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Control flow issues",
        "cweCategory" : 561,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 208
      }
    },
    {
      "type" : "unrestricted_cross_origin_message_target_event",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Unrestricted target for cross-origin message"
      },
      "description" : {
        "en" : "Sending a cross-origin message without restricting the origin that can receive it."
      },
      "local_effect" : {
        "en" : "A malicious site can intercept the message by changing the location of the window."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 668,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 412
      }
    },
    {
      "type" : "unrestricted_cross_origin_message_target_event",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Unrestricted target for cross-origin message"
      },
      "description" : {
        "en" : "Sending a cross-origin message without restricting the origin that can receive it."
      },
      "local_effect" : {
        "en" : "A malicious site can intercept the message by changing the location of the window."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 668,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 412
      }
    },
    {
      "type" : "unrestricted_dispatch",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Unrestricted dispatch"
      },
      "description" : {
        "en" : "A user-controllable string is used as a servlet dispatch path."
      },
      "local_effect" : {
        "en" : "An attacker can manipulate the dispatch path to access unintended servlets or views, allowing them to bypass security checks or obtain unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 73,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1325
      }
    },
    {
      "type" : "unrestricted_dispatch",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Unrestricted dispatch"
      },
      "description" : {
        "en" : "A user-controllable string is used as a servlet dispatch path."
      },
      "local_effect" : {
        "en" : "An attacker can manipulate the dispatch path to access unintended servlets or views, allowing them to bypass security checks or obtain unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 73,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1325
      }
    },
    {
      "type" : "unrestricted_dispatch",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Unrestricted dispatch"
      },
      "description" : {
        "en" : "A user-controllable string is used as a servlet dispatch path."
      },
      "local_effect" : {
        "en" : "An attacker can manipulate the dispatch path to access unintended servlets or views, allowing them to bypass security checks or obtain unauthorized data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 73,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1325
      }
    },
    {
      "type" : "unsafe_basic_auth",
      "subtype" : "basic_auth_password_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Basic auth"
      },
      "description" : {
        "en" : "The password used for authentication is hardcoded in the source."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use this password to access production services or data. Changing this password requires changing the code and re-deploying the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 798,
        "impact" : "High",
        "subcategory" : "basic_auth_password_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 410
      }
    },
    {
      "type" : "unsafe_basic_auth",
      "subtype" : "basic_auth_timing_attack_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Basic auth"
      },
      "description" : {
        "en" : "Using the standard == comparison operator leaks information about the values being compared, due to short-circuiting as soon as there is a character mismatch. With enough samples, the password might be determined due to statistical differences in response times."
      },
      "local_effect" : {
        "en" : "Authentication bypass via timing attack."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 208,
        "impact" : "Low",
        "subcategory" : "basic_auth_timing_attack_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 408
      }
    },
    {
      "type" : "unsafe_basic_auth",
      "subtype" : "basic_auth_usage_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Basic auth"
      },
      "description" : {
        "en" : "Use of basic authentication is discouraged. It requires credentials to be sent with each request and does not provide a method for detecting and preventing brute force attacks. Additionally, there is no way to 'log out' a user with basic authentication. The credentials are cached by the browser with different policies for each browser."
      },
      "local_effect" : {
        "en" : "Use of Basic Authentication."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 522,
        "impact" : "Low",
        "subcategory" : "basic_auth_usage_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 62
      }
    },
    {
      "type" : "unsafe_deserialization",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Unsafe deserialization"
      },
      "description" : {
        "en" : "A user-controllable string is deserialized."
      },
      "local_effect" : {
        "en" : "An attacker can instantiate arbitrary classes, possibly resulting in a denial of service or potentially unintended code execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 502,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 241
      }
    },
    {
      "type" : "unsafe_deserialization",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Unsafe deserialization"
      },
      "description" : {
        "en" : "A user-controllable string is deserialized."
      },
      "local_effect" : {
        "en" : "An attacker can instantiate arbitrary classes, possibly resulting in a denial of service or potentially unintended code execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 502,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 241
      }
    },
    {
      "type" : "unsafe_deserialization",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Unsafe deserialization"
      },
      "description" : {
        "en" : "A user-controllable string is deserialized."
      },
      "local_effect" : {
        "en" : "An attacker can instantiate arbitrary classes, possibly resulting in a denial of service or potentially unintended code execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 502,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 241
      }
    },
    {
      "type" : "unsafe_deserialization",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unsafe deserialization"
      },
      "description" : {
        "en" : "A user-controllable string is deserialized."
      },
      "local_effect" : {
        "en" : "An attacker can instantiate arbitrary classes, possibly resulting in a denial of service or potentially unintended code execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 502,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 241
      }
    },
    {
      "type" : "unsafe_deserialization",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Unsafe deserialization"
      },
      "description" : {
        "en" : "A user-controllable string is deserialized."
      },
      "local_effect" : {
        "en" : "An attacker can instantiate arbitrary classes, possibly resulting in a denial of service or potentially unintended code execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 502,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 241
      }
    },
    {
      "type" : "unsafe_deserialization",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Unsafe deserialization"
      },
      "description" : {
        "en" : "A user-controllable string is deserialized."
      },
      "local_effect" : {
        "en" : "An attacker can instantiate arbitrary classes, possibly resulting in a denial of service or potentially unintended code execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 502,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 241
      }
    },
    {
      "type" : "unsafe_deserialization",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Unsafe deserialization"
      },
      "description" : {
        "en" : "A user-controllable string is deserialized."
      },
      "local_effect" : {
        "en" : "An attacker can instantiate arbitrary classes, possibly resulting in a denial of service or potentially unintended code execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 502,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 241
      }
    },
    {
      "type" : "unsafe_deserialization",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Unsafe deserialization"
      },
      "description" : {
        "en" : "A user-controllable string is deserialized."
      },
      "local_effect" : {
        "en" : "An attacker can instantiate arbitrary classes, possibly resulting in a denial of service or potentially unintended code execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 502,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 241
      }
    },
    {
      "type" : "unsafe_deserialization",
      "subtype" : "unsafe_deserialize_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Remote code execution"
      },
      "description" : {
        "en" : "Deserializing code allows instantiation of arbitrary objects. Since some classes also execute custom code when deserialized, this can lead to remote code execution."
      },
      "local_effect" : {
        "en" : "An attacker can instantiate arbitrary classes, possibly resulting in unintended code execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 502,
        "impact" : "High",
        "subcategory" : "unsafe_deserialize_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 241
      }
    },
    {
      "type" : "unsafe_deserialization",
      "subtype" : "unsafe_deserialize_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Remote code execution"
      },
      "description" : {
        "en" : "Deserializing code allows instantiation of arbitrary objects. Since some classes also execute custom code when deserialized, this can lead to remote code execution."
      },
      "local_effect" : {
        "en" : "An attacker can instantiate arbitrary classes, possibly resulting in unintended code execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 502,
        "impact" : "Medium",
        "subcategory" : "unsafe_deserialize_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 241
      }
    },
    {
      "type" : "unsafe_deserialization",
      "subtype" : "untrusted_data",
      "code-language" : "go",
      "name" : {
        "en" : "Deserialization of untrusted data"
      },
      "description" : {
        "en" : "Data that is untrusted should not be assumed to be well-formed."
      },
      "local_effect" : {
        "en" : "An attacker may be able to control unintended content or structure to subvert the application's logic."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 502,
        "impact" : "Audit",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 241
      }
    },
    {
      "type" : "unsafe_jni",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Unsafe dynamic library loading"
      },
      "description" : {
        "en" : "A user-controllable string is used in a dynamic library path."
      },
      "local_effect" : {
        "en" : "An attacker can load a dynamic library that executes arbitrary code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 427,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1376
      }
    },
    {
      "type" : "unsafe_jni",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unsafe dynamic library loading"
      },
      "description" : {
        "en" : "A user-controllable string is used in a dynamic library path."
      },
      "local_effect" : {
        "en" : "An attacker can load a dynamic library that executes arbitrary code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 427,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1376
      }
    },
    {
      "type" : "unsafe_named_query",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Unsafe named query"
      },
      "description" : {
        "en" : "A user-controllable string is used to select a named database query."
      },
      "local_effect" : {
        "en" : "An attacker can subvert program functionality or expose sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 470,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1380
      }
    },
    {
      "type" : "unsafe_named_query",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Unsafe named query"
      },
      "description" : {
        "en" : "A user-controllable string is used to select a named database query."
      },
      "local_effect" : {
        "en" : "An attacker can subvert program functionality or expose sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 470,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1380
      }
    },
    {
      "type" : "unsafe_named_query",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Unsafe named query"
      },
      "description" : {
        "en" : "A user-controllable string is used to select a named database query."
      },
      "local_effect" : {
        "en" : "An attacker can subvert program functionality or expose sensitive data."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 470,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1380
      }
    },
    {
      "type" : "unsafe_reflection",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Unsafe reflection"
      },
      "description" : {
        "en" : "A user-controllable string is passed to a reflection API."
      },
      "local_effect" : {
        "en" : "An attacker can instantiate new classes or methods, possibly resulting in a denial of service or potentially unintended code execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 470,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 955
      }
    },
    {
      "type" : "unsafe_reflection",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Unsafe reflection"
      },
      "description" : {
        "en" : "A user-controllable string is passed to a reflection API."
      },
      "local_effect" : {
        "en" : "An attacker can instantiate new classes or methods, possibly resulting in a denial of service or potentially unintended code execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 470,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 955
      }
    },
    {
      "type" : "unsafe_reflection",
      "subtype" : "dangerous_send_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Dangerous send"
      },
      "description" : {
        "en" : "Passing user-supplied values as the first argument to a method like send allows an attacker to control which method is called, introducing a remote code execution vulnerability."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 470,
        "impact" : "High",
        "subcategory" : "dangerous_send_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 955
      }
    },
    {
      "type" : "unsafe_reflection",
      "subtype" : "unsafe_constantize_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Remote code execution"
      },
      "description" : {
        "en" : "Converting user-supplied values to a constant might allow an attacker to control what classes are used and alter the behavior of the application."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 470,
        "impact" : "High",
        "subcategory" : "unsafe_constantize_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 955
      }
    },
    {
      "type" : "unsafe_reflection",
      "subtype" : "unsafe_constantize_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Remote code execution"
      },
      "description" : {
        "en" : "Converting user-supplied values to a constant might allow an attacker to control what classes are used and alter the behavior of the application."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 470,
        "impact" : "Medium",
        "subcategory" : "unsafe_constantize_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 955
      }
    },
    {
      "type" : "unsafe_reflection",
      "subtype" : "unsafe_method_reflection_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Remote code execution"
      },
      "description" : {
        "en" : "Calling a method that allows unsafe reflection."
      },
      "local_effect" : {
        "en" : "An attacker may be able to alter the behavior of the program or run malicious code."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 470,
        "impact" : "Medium",
        "subcategory" : "unsafe_method_reflection_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 955
      }
    },
    {
      "type" : "unsafe_session_setting",
      "subtype" : "http_cookies_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Session setting"
      },
      "description" : {
        "en" : "When session cookies are not set to http-only, it is possible to read the values via JavaScript. Any cross-site scripting vulnerabilities would be able to steal sessions. There is typically no reason to read Ruby on Rails session cookies via JavaScript."
      },
      "local_effect" : {
        "en" : "The HttpOnly flag is not enabled for the session cookies."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 1004,
        "impact" : "High",
        "subcategory" : "http_cookies_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1
      }
    },
    {
      "type" : "unsafe_session_setting",
      "subtype" : "secure_cookies_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Session setting"
      },
      "description" : {
        "en" : "The 'Secure' attribute is not set for the cookie."
      },
      "local_effect" : {
        "en" : "While web browsers send cookies with the 'Secure' attribute only over HTTPS, they do send cookies without it over HTTP.  If an attacker can fool the victim's browser into sending an HTTP request to the vulnerable site (for example, with JavaScript code on a malicious page or with a phishing link), the victim's browser will send the vulnerable cookie in the clear.  If the attacker can also intercept this network traffic, then they can steal the victim's session cookie and impersonate the victim."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 614,
        "impact" : "High",
        "subcategory" : "secure_cookies_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 2
      }
    },
    {
      "type" : "unsafe_session_setting",
      "subtype" : "session_secret_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Session setting"
      },
      "description" : {
        "en" : "A cryptographic key is stored directly in the source code."
      },
      "local_effect" : {
        "en" : "Users with access to this source code can use the session secret to generate arbitrary session cookies and impersonate any user."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 321,
        "impact" : "High",
        "subcategory" : "session_secret_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 829
      }
    },
    {
      "type" : "unsafe_session_timeout",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Unsafe session timeout"
      },
      "description" : {
        "en" : "The session timeout is set to be infinite."
      },
      "local_effect" : {
        "en" : "The session-timeout tag value is -1, which means that a session will never expire.  Session-based attacks require an active session, and insufficient expiration unnecessarily prolongs the time window where an attacker can hijack a session."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 613,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1081
      }
    },
    {
      "type" : "unused_value",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unused value"
      },
      "description" : {
        "en" : "A value assigned to a variable is never used."
      },
      "local_effect" : {
        "en" : "An assigned value that is never used may represent unnecessary computation, an incorrect algorithm, or possibly the need for cleanup or refactoring."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 563,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1034
      }
    },
    {
      "type" : "unused_value",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Unused value"
      },
      "description" : {
        "en" : "A value assigned to a variable is never used."
      },
      "local_effect" : {
        "en" : "An assigned value that is never used may represent unnecessary computation, an incorrect algorithm, or possibly the need for cleanup or refactoring."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 563,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1034
      }
    },
    {
      "type" : "unused_value",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Unused value"
      },
      "description" : {
        "en" : "A value assigned to a variable is never used."
      },
      "local_effect" : {
        "en" : "An assigned value that is never used may represent unnecessary computation, an incorrect algorithm, or possibly the need for cleanup or refactoring."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 563,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1034
      }
    },
    {
      "type" : "unused_value",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "Unused value"
      },
      "description" : {
        "en" : "A value assigned to a variable is never used."
      },
      "local_effect" : {
        "en" : "An assigned value that is never used may represent unnecessary computation, an incorrect algorithm, or possibly the need for cleanup or refactoring."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 563,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1034
      }
    },
    {
      "type" : "unused_value",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Unused value"
      },
      "description" : {
        "en" : "A value assigned to a variable is never used."
      },
      "local_effect" : {
        "en" : "An assigned value that is never used may represent unnecessary computation, an incorrect algorithm, or possibly the need for cleanup or refactoring."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 563,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1034
      }
    },
    {
      "type" : "unused_value",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Unused value"
      },
      "description" : {
        "en" : "A value assigned to a variable is never used."
      },
      "local_effect" : {
        "en" : "An assigned value that is never used may represent unnecessary computation, an incorrect algorithm, or possibly the need for cleanup or refactoring."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 563,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1034
      }
    },
    {
      "type" : "unused_value",
      "subtype" : "adjacent",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Unused value"
      },
      "description" : {
        "en" : "A value assigned to a variable is never used."
      },
      "local_effect" : {
        "en" : "An assigned value that is never used may represent unnecessary computation, an incorrect algorithm, or possibly the need for cleanup or refactoring."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 563,
        "impact" : "Medium",
        "subcategory" : "adjacent",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1034
      }
    },
    {
      "type" : "unused_value",
      "subtype" : "adjacent",
      "code-language" : "c#",
      "name" : {
        "en" : "Unused value"
      },
      "description" : {
        "en" : "A value assigned to a variable is never used."
      },
      "local_effect" : {
        "en" : "An assigned value that is never used may represent unnecessary computation, an incorrect algorithm, or possibly the need for cleanup or refactoring."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 563,
        "impact" : "Medium",
        "subcategory" : "adjacent",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1034
      }
    },
    {
      "type" : "unused_value",
      "subtype" : "adjacent",
      "code-language" : "cuda",
      "name" : {
        "en" : "Unused value"
      },
      "description" : {
        "en" : "A value assigned to a variable is never used."
      },
      "local_effect" : {
        "en" : "An assigned value that is never used may represent unnecessary computation, an incorrect algorithm, or possibly the need for cleanup or refactoring."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 563,
        "impact" : "Medium",
        "subcategory" : "adjacent",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1034
      }
    },
    {
      "type" : "unused_value",
      "subtype" : "adjacent",
      "code-language" : "go",
      "name" : {
        "en" : "Unused value"
      },
      "description" : {
        "en" : "A value assigned to a variable is never used."
      },
      "local_effect" : {
        "en" : "An assigned value that is never used may represent unnecessary computation, an incorrect algorithm, or possibly the need for cleanup or refactoring."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 563,
        "impact" : "Medium",
        "subcategory" : "adjacent",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1034
      }
    },
    {
      "type" : "unused_value",
      "subtype" : "adjacent",
      "code-language" : "java",
      "name" : {
        "en" : "Unused value"
      },
      "description" : {
        "en" : "A value assigned to a variable is never used."
      },
      "local_effect" : {
        "en" : "An assigned value that is never used may represent unnecessary computation, an incorrect algorithm, or possibly the need for cleanup or refactoring."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 563,
        "impact" : "Medium",
        "subcategory" : "adjacent",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1034
      }
    },
    {
      "type" : "unused_value",
      "subtype" : "adjacent",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Unused value"
      },
      "description" : {
        "en" : "A value assigned to a variable is never used."
      },
      "local_effect" : {
        "en" : "An assigned value that is never used may represent unnecessary computation, an incorrect algorithm, or possibly the need for cleanup or refactoring."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 563,
        "impact" : "Medium",
        "subcategory" : "adjacent",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1034
      }
    },
    {
      "type" : "url_manipulation",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "URL manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended files or make the application access a malicious website."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 918,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 290
      }
    },
    {
      "type" : "url_manipulation",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "URL manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended files or make the application access a malicious website."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 918,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 290
      }
    },
    {
      "type" : "url_manipulation",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "URL manipulation"
      },
      "description" : {
        "en" : "Constructing an HTTP request URL using a user-controllable string."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended server-side functionality or make the application access a malicious website."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 918,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 290
      }
    },
    {
      "type" : "url_manipulation",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "URL manipulation"
      },
      "description" : {
        "en" : "Constructing an HTTP request URL using a user-controllable string."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended server-side functionality or make the application access a malicious website."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 918,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 290
      }
    },
    {
      "type" : "url_manipulation",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "URL manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended files or make the application access a malicious website."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 918,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 290
      }
    },
    {
      "type" : "url_manipulation",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "URL manipulation"
      },
      "description" : {
        "en" : "Constructing an HTTP request URL using a user-controllable string."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended server-side functionality or make the application access a malicious website."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 918,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 290
      }
    },
    {
      "type" : "url_manipulation",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "URL manipulation"
      },
      "description" : {
        "en" : "Constructing an HTTP request URL using a user-controllable string."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended server-side functionality or make the application access a malicious website."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 918,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 290
      }
    },
    {
      "type" : "url_manipulation",
      "subtype" : "bad_content_uri",
      "code-language" : "java",
      "name" : {
        "en" : "URL manipulation"
      },
      "description" : {
        "en" : "A user-controllable Uri is used to resolve which content provider will be accessed or modified by the ContentResolver."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt content that contains sensitive information or is critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 918,
        "impact" : "Low",
        "subcategory" : "bad_content_uri",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 290
      }
    },
    {
      "type" : "url_manipulation",
      "subtype" : "bad_content_uri",
      "code-language" : "kotlin",
      "name" : {
        "en" : "URL manipulation"
      },
      "description" : {
        "en" : "A user-controllable Uri is used to resolve which content provider will be accessed or modified by the ContentResolver."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt content that contains sensitive information or is critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 918,
        "impact" : "Low",
        "subcategory" : "bad_content_uri",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 290
      }
    },
    {
      "type" : "url_manipulation",
      "subtype" : "bad_intent_uri",
      "code-language" : "java",
      "name" : {
        "en" : "URL manipulation"
      },
      "description" : {
        "en" : "A user-controllable Uri is used to create a new Intent."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt data that contains sensitive information or is critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 918,
        "impact" : "Low",
        "subcategory" : "bad_intent_uri",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 290
      }
    },
    {
      "type" : "url_manipulation",
      "subtype" : "bad_intent_uri",
      "code-language" : "kotlin",
      "name" : {
        "en" : "URL manipulation"
      },
      "description" : {
        "en" : "A user-controllable Uri is used to create a new Intent."
      },
      "local_effect" : {
        "en" : "An attacker may access, modify, or corrupt data that contains sensitive information or is critical to the application."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 918,
        "impact" : "Low",
        "subcategory" : "bad_intent_uri",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 290
      }
    },
    {
      "type" : "url_manipulation",
      "subtype" : "bad_web_uri",
      "code-language" : "java",
      "name" : {
        "en" : "URL manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended files or make the application access a malicious website."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 918,
        "impact" : "Medium",
        "subcategory" : "bad_web_uri",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 290
      }
    },
    {
      "type" : "url_manipulation",
      "subtype" : "bad_web_uri",
      "code-language" : "kotlin",
      "name" : {
        "en" : "URL manipulation"
      },
      "description" : {
        "en" : "A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."
      },
      "local_effect" : {
        "en" : "An attacker may access unintended files or make the application access a malicious website."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 918,
        "impact" : "Medium",
        "subcategory" : "bad_web_uri",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 290
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "api",
      "code-language" : "java",
      "name" : {
        "en" : "Use of freed resources"
      },
      "description" : {
        "en" : "Use of an object after its resources have been released"
      },
      "local_effect" : {
        "en" : "Attempting to use previously freed resources might result in data corruption, nonsensical results, or runtime exceptions."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 672,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "deref_read_after_free",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Read from pointer after free"
      },
      "description" : {
        "en" : "Reads target of a freed pointer"
      },
      "local_effect" : {
        "en" : "Incorrect values may be read from freed memory, causing incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "deref_read_after_free",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "deref_read_after_free",
      "code-language" : "cuda",
      "name" : {
        "en" : "Read from pointer after free"
      },
      "description" : {
        "en" : "Reads target of a freed pointer"
      },
      "local_effect" : {
        "en" : "Incorrect values may be read from freed memory, causing incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "deref_read_after_free",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "deref_read_after_free",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Read from pointer after free"
      },
      "description" : {
        "en" : "Reads target of a freed pointer"
      },
      "local_effect" : {
        "en" : "Incorrect values may be read from freed memory, causing incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "deref_read_after_free",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "deref_write_after_free",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Write to pointer after free"
      },
      "description" : {
        "en" : "Write to target of a freed pointer"
      },
      "local_effect" : {
        "en" : "This could cause an immediate crash or incorrect values might be read subsequently; the allocator's own data structures may also be corrupted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "deref_write_after_free",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "deref_write_after_free",
      "code-language" : "cuda",
      "name" : {
        "en" : "Write to pointer after free"
      },
      "description" : {
        "en" : "Write to target of a freed pointer"
      },
      "local_effect" : {
        "en" : "This could cause an immediate crash or incorrect values might be read subsequently; the allocator's own data structures may also be corrupted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "deref_write_after_free",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "deref_write_after_free",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Write to pointer after free"
      },
      "description" : {
        "en" : "Write to target of a freed pointer"
      },
      "local_effect" : {
        "en" : "This could cause an immediate crash or incorrect values might be read subsequently; the allocator's own data structures may also be corrupted."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "deref_write_after_free",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "double_close",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Double close"
      },
      "description" : {
        "en" : "A resource handle or descriptor is closed more than once"
      },
      "local_effect" : {
        "en" : "The second close operation will fail.  This may also be indicative of other earlier failed operations on the same handle."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 672,
        "impact" : "Medium",
        "subcategory" : "double_close",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1125
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "double_close",
      "code-language" : "cuda",
      "name" : {
        "en" : "Double close"
      },
      "description" : {
        "en" : "A resource handle or descriptor is closed more than once"
      },
      "local_effect" : {
        "en" : "The second close operation will fail.  This may also be indicative of other earlier failed operations on the same handle."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 672,
        "impact" : "Medium",
        "subcategory" : "double_close",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1125
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "double_close",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Double close"
      },
      "description" : {
        "en" : "A resource handle or descriptor is closed more than once"
      },
      "local_effect" : {
        "en" : "The second close operation will fail.  This may also be indicative of other earlier failed operations on the same handle."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 672,
        "impact" : "Medium",
        "subcategory" : "double_close",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1125
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "double_free",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Double free"
      },
      "description" : {
        "en" : "Memory is deallocated more than once"
      },
      "local_effect" : {
        "en" : "Depending on the implementation of the deallocator function, the memory may by placed on the free list more than once."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 415,
        "impact" : "High",
        "subcategory" : "double_free",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 907
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "double_free",
      "code-language" : "cuda",
      "name" : {
        "en" : "Double free"
      },
      "description" : {
        "en" : "Memory is deallocated more than once"
      },
      "local_effect" : {
        "en" : "Depending on the implementation of the deallocator function, the memory may by placed on the free list more than once."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 415,
        "impact" : "High",
        "subcategory" : "double_free",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 907
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "double_free",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Double free"
      },
      "description" : {
        "en" : "Memory is deallocated more than once"
      },
      "local_effect" : {
        "en" : "Depending on the implementation of the deallocator function, the memory may by placed on the free list more than once."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 415,
        "impact" : "High",
        "subcategory" : "double_free",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 907
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "pointer",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Use after free"
      },
      "description" : {
        "en" : "A pointer to freed memory is  dereferenced, used as a function argument, or otherwise used"
      },
      "local_effect" : {
        "en" : "This could cause an immediate crash or incorrect values might be read subsequently resulting in incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "pointer",
      "code-language" : "cuda",
      "name" : {
        "en" : "Use after free"
      },
      "description" : {
        "en" : "A pointer to freed memory is  dereferenced, used as a function argument, or otherwise used"
      },
      "local_effect" : {
        "en" : "This could cause an immediate crash or incorrect values might be read subsequently resulting in incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "pointer",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Use after free"
      },
      "description" : {
        "en" : "A pointer to freed memory is  dereferenced, used as a function argument, or otherwise used"
      },
      "local_effect" : {
        "en" : "This could cause an immediate crash or incorrect values might be read subsequently resulting in incorrect computations."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "use_after_close",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Use after close"
      },
      "description" : {
        "en" : "A resource handle or descriptor is used after being closed"
      },
      "local_effect" : {
        "en" : "Operations on closed handles will fail."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 672,
        "impact" : "Medium",
        "subcategory" : "use_after_close",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1125
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "use_after_close",
      "code-language" : "cuda",
      "name" : {
        "en" : "Use after close"
      },
      "description" : {
        "en" : "A resource handle or descriptor is used after being closed"
      },
      "local_effect" : {
        "en" : "Operations on closed handles will fail."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 672,
        "impact" : "Medium",
        "subcategory" : "use_after_close",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1125
      }
    },
    {
      "type" : "use_after_free",
      "subtype" : "use_after_close",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Use after close"
      },
      "description" : {
        "en" : "A resource handle or descriptor is used after being closed"
      },
      "local_effect" : {
        "en" : "Operations on closed handles will fail."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 672,
        "impact" : "Medium",
        "subcategory" : "use_after_close",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1125
      }
    },
    {
      "type" : "use_after_move",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Using a moved object"
      },
      "description" : {
        "en" : "An object is used after it's moved."
      },
      "local_effect" : {
        "en" : "Using a moved object may lead to an unexpected/undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Uninitialized variables",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1125
      }
    },
    {
      "type" : "use_after_move",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Using a moved object"
      },
      "description" : {
        "en" : "An object is used after it's moved."
      },
      "local_effect" : {
        "en" : "Using a moved object may lead to an unexpected/undefined behavior."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Uninitialized variables",
        "cweCategory" : 457,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1125
      }
    },
    {
      "type" : "useless_call",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Useless call"
      },
      "description" : {
        "en" : "A function is called that is only useful for its return value, and this value is ignored."
      },
      "local_effect" : {
        "en" : "A function call that seems to have an intended effect has no actual effect on the logic of the program."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1435
      }
    },
    {
      "type" : "useless_call",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Useless call"
      },
      "description" : {
        "en" : "A function is called that is only useful for its return value, and this value is ignored."
      },
      "local_effect" : {
        "en" : "A function call that seems to have an intended effect has no actual effect on the logic of the program."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1435
      }
    },
    {
      "type" : "useless_call",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Useless call"
      },
      "description" : {
        "en" : "A function is called that is only useful for its return value, and this value is ignored."
      },
      "local_effect" : {
        "en" : "A function call that seems to have an intended effect has no actual effect on the logic of the program."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1435
      }
    },
    {
      "type" : "useless_call",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Useless call"
      },
      "description" : {
        "en" : "A function is called that is only useful for its return value, and this value is ignored."
      },
      "local_effect" : {
        "en" : "A function call that seems to have an intended effect has no actual effect on the logic of the program."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1435
      }
    },
    {
      "type" : "useless_call",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Useless call"
      },
      "description" : {
        "en" : "A function is called that is only useful for its return value, and this value is ignored."
      },
      "local_effect" : {
        "en" : "A function call that seems to have an intended effect has no actual effect on the logic of the program."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1435
      }
    },
    {
      "type" : "useless_call",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Useless call"
      },
      "description" : {
        "en" : "A function is called that is only useful for its return value, and this value is ignored."
      },
      "local_effect" : {
        "en" : "A function call that seems to have an intended effect has no actual effect on the logic of the program."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1435
      }
    },
    {
      "type" : "user_pointer",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "User pointer dereference"
      },
      "description" : {
        "en" : "A user-land pointer is dereferenced without safety checks in the kernel"
      },
      "local_effect" : {
        "en" : "An attacker could craft the pointer to read or write kernel memory and take over the system, or cause a crash."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 20,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1324
      }
    },
    {
      "type" : "user_pointer",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "User pointer dereference"
      },
      "description" : {
        "en" : "A user-land pointer is dereferenced without safety checks in the kernel"
      },
      "local_effect" : {
        "en" : "An attacker could craft the pointer to read or write kernel memory and take over the system, or cause a crash."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 20,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1324
      }
    },
    {
      "type" : "user_pointer",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "User pointer dereference"
      },
      "description" : {
        "en" : "A user-land pointer is dereferenced without safety checks in the kernel"
      },
      "local_effect" : {
        "en" : "An attacker could craft the pointer to read or write kernel memory and take over the system, or cause a crash."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Security best practices violations",
        "cweCategory" : 20,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1324
      }
    },
    {
      "type" : "varargs",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Missing varargs init or cleanup"
      },
      "description" : {
        "en" : "Incorrect usage of variable argument macros; use va_start or va_copy to begin processing and va_end to finish"
      },
      "local_effect" : {
        "en" : "Memory may be corrupted by forgetting to begin and end variable argument processing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1043
      }
    },
    {
      "type" : "varargs",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Missing varargs init or cleanup"
      },
      "description" : {
        "en" : "Incorrect usage of variable argument macros; use va_start or va_copy to begin processing and va_end to finish"
      },
      "local_effect" : {
        "en" : "Memory may be corrupted by forgetting to begin and end variable argument processing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1043
      }
    },
    {
      "type" : "varargs",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Missing varargs init or cleanup"
      },
      "description" : {
        "en" : "Incorrect usage of variable argument macros; use va_start or va_copy to begin processing and va_end to finish"
      },
      "local_effect" : {
        "en" : "Memory may be corrupted by forgetting to begin and end variable argument processing."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 573,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1043
      }
    },
    {
      "type" : "virtual_dtor",
      "subtype" : "empty_dtor",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Empty virtual destructor"
      },
      "description" : {
        "en" : "The correct derived class destructor that happens to be empty is not invoked due to the absence of a virtual destructor in the base class"
      },
      "local_effect" : {
        "en" : "The base class destructor ought to be declared as virtual; however, this case may be benign since the derived class destructor is empty."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "empty_dtor",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1437
      }
    },
    {
      "type" : "virtual_dtor",
      "subtype" : "empty_dtor",
      "code-language" : "cuda",
      "name" : {
        "en" : "Empty virtual destructor"
      },
      "description" : {
        "en" : "The correct derived class destructor that happens to be empty is not invoked due to the absence of a virtual destructor in the base class"
      },
      "local_effect" : {
        "en" : "The base class destructor ought to be declared as virtual; however, this case may be benign since the derived class destructor is empty."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "empty_dtor",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1437
      }
    },
    {
      "type" : "virtual_dtor",
      "subtype" : "empty_dtor",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Empty virtual destructor"
      },
      "description" : {
        "en" : "The correct derived class destructor that happens to be empty is not invoked due to the absence of a virtual destructor in the base class"
      },
      "local_effect" : {
        "en" : "The base class destructor ought to be declared as virtual; however, this case may be benign since the derived class destructor is empty."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Code maintainability issues",
        "cweCategory" : 398,
        "impact" : "Low",
        "subcategory" : "empty_dtor",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1437
      }
    },
    {
      "type" : "virtual_dtor",
      "subtype" : "non_virtual",
      "code-language" : "c/c++",
      "name" : {
        "en" : "No virtual destructor"
      },
      "description" : {
        "en" : "The correct derived class destructor is not invoked due to the absence of a virtual destructor in the base class"
      },
      "local_effect" : {
        "en" : "Invocation of the wrong destructor will likely cause resources in the class to be leaked. The base class destructor ought to be declared as virtual."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 772,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1180
      }
    },
    {
      "type" : "virtual_dtor",
      "subtype" : "non_virtual",
      "code-language" : "cuda",
      "name" : {
        "en" : "No virtual destructor"
      },
      "description" : {
        "en" : "The correct derived class destructor is not invoked due to the absence of a virtual destructor in the base class"
      },
      "local_effect" : {
        "en" : "Invocation of the wrong destructor will likely cause resources in the class to be leaked. The base class destructor ought to be declared as virtual."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 772,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1180
      }
    },
    {
      "type" : "virtual_dtor",
      "subtype" : "non_virtual",
      "code-language" : "objective-c",
      "name" : {
        "en" : "No virtual destructor"
      },
      "description" : {
        "en" : "The correct derived class destructor is not invoked due to the absence of a virtual destructor in the base class"
      },
      "local_effect" : {
        "en" : "Invocation of the wrong destructor will likely cause resources in the class to be leaked. The base class destructor ought to be declared as virtual."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Resource leaks",
        "cweCategory" : 772,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1180
      }
    },
    {
      "type" : "volatile_atomicity",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Volatile not atomically updated"
      },
      "description" : {
        "en" : "A volatile variable is updated in a non-atomic manner"
      },
      "local_effect" : {
        "en" : "Some updates to the volatile variable may be lost, depending on the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "volatile_atomicity",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Volatile not atomically updated"
      },
      "description" : {
        "en" : "A volatile variable is updated in a non-atomic manner"
      },
      "local_effect" : {
        "en" : "Some updates to the volatile variable may be lost, depending on the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "volatile_atomicity",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Volatile not atomically updated"
      },
      "description" : {
        "en" : "A volatile variable is updated in a non-atomic manner"
      },
      "local_effect" : {
        "en" : "Some updates to the volatile variable may be lost, depending on the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "volatile_atomicity",
      "subtype" : "compare",
      "code-language" : "c#",
      "name" : {
        "en" : "Volatile not atomically updated"
      },
      "description" : {
        "en" : "A volatile variable is updated in a non-atomic manner"
      },
      "local_effect" : {
        "en" : "Some updates to the volatile variable may be lost, depending on the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Medium",
        "subcategory" : "compare",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "volatile_atomicity",
      "subtype" : "compare",
      "code-language" : "java",
      "name" : {
        "en" : "Volatile not atomically updated"
      },
      "description" : {
        "en" : "A volatile variable is updated in a non-atomic manner"
      },
      "local_effect" : {
        "en" : "Some updates to the volatile variable may be lost, depending on the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Medium",
        "subcategory" : "compare",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "volatile_atomicity",
      "subtype" : "compare",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Volatile not atomically updated"
      },
      "description" : {
        "en" : "A volatile variable is updated in a non-atomic manner"
      },
      "local_effect" : {
        "en" : "Some updates to the volatile variable may be lost, depending on the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Medium",
        "subcategory" : "compare",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "volatile_atomicity",
      "subtype" : "semantic",
      "code-language" : "c#",
      "name" : {
        "en" : "Volatile not atomically updated"
      },
      "description" : {
        "en" : "A volatile variable is updated in a non-atomic manner"
      },
      "local_effect" : {
        "en" : "Some updates to the volatile variable may be lost, depending on the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "High",
        "subcategory" : "semantic",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "volatile_atomicity",
      "subtype" : "semantic",
      "code-language" : "java",
      "name" : {
        "en" : "Volatile not atomically updated"
      },
      "description" : {
        "en" : "A volatile variable is updated in a non-atomic manner"
      },
      "local_effect" : {
        "en" : "Some updates to the volatile variable may be lost, depending on the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "High",
        "subcategory" : "semantic",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "volatile_atomicity",
      "subtype" : "semantic",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Volatile not atomically updated"
      },
      "description" : {
        "en" : "A volatile variable is updated in a non-atomic manner"
      },
      "local_effect" : {
        "en" : "Some updates to the volatile variable may be lost, depending on the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "High",
        "subcategory" : "semantic",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "volatile_atomicity",
      "subtype" : "threshold",
      "code-language" : "c#",
      "name" : {
        "en" : "Volatile not atomically updated"
      },
      "description" : {
        "en" : "A volatile variable is updated in a non-atomic manner"
      },
      "local_effect" : {
        "en" : "Some updates to the volatile variable may be lost, depending on the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Low",
        "subcategory" : "threshold",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "volatile_atomicity",
      "subtype" : "threshold",
      "code-language" : "java",
      "name" : {
        "en" : "Volatile not atomically updated"
      },
      "description" : {
        "en" : "A volatile variable is updated in a non-atomic manner"
      },
      "local_effect" : {
        "en" : "Some updates to the volatile variable may be lost, depending on the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Low",
        "subcategory" : "threshold",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "volatile_atomicity",
      "subtype" : "threshold",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Volatile not atomically updated"
      },
      "description" : {
        "en" : "A volatile variable is updated in a non-atomic manner"
      },
      "local_effect" : {
        "en" : "Some updates to the volatile variable may be lost, depending on the interleaving of thread execution."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Concurrent data access violations",
        "cweCategory" : 366,
        "impact" : "Low",
        "subcategory" : "threshold",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 868
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Check against unreliable data"
      },
      "description" : {
        "en" : "Performing a check against unreliable data that an attacker can control"
      },
      "local_effect" : {
        "en" : "An attacker can control the values of the data being checked thus bypassing the check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 290,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1294
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Check against unreliable data"
      },
      "description" : {
        "en" : "Performing a check against unreliable data that an attacker can control"
      },
      "local_effect" : {
        "en" : "An attacker can control the values of the data being checked thus bypassing the check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 290,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1294
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Check against unreliable data"
      },
      "description" : {
        "en" : "Performing a check against unreliable data that an attacker can control"
      },
      "local_effect" : {
        "en" : "An attacker can control the values of the data being checked thus bypassing the check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 290,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1294
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Check against unreliable data"
      },
      "description" : {
        "en" : "Performing a check against unreliable data that an attacker can control"
      },
      "local_effect" : {
        "en" : "An attacker can control the values of the data being checked thus bypassing the check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 290,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1294
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "dns",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Check against reverse DNS lookup"
      },
      "description" : {
        "en" : "Comparing the result of a reverse DNS lookup to a hardcoded hostname."
      },
      "local_effect" : {
        "en" : "An attacker that compromises a DNS server or pollutes its cache can bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 350,
        "impact" : "Low",
        "subcategory" : "dns",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 207
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "dns",
      "code-language" : "cuda",
      "name" : {
        "en" : "Check against reverse DNS lookup"
      },
      "description" : {
        "en" : "Comparing the result of a reverse DNS lookup to a hardcoded hostname."
      },
      "local_effect" : {
        "en" : "An attacker that compromises a DNS server or pollutes its cache can bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 350,
        "impact" : "Low",
        "subcategory" : "dns",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 207
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "dns",
      "code-language" : "java",
      "name" : {
        "en" : "Check against reverse DNS lookup"
      },
      "description" : {
        "en" : "Comparing the result of a reverse DNS lookup to a hardcoded hostname."
      },
      "local_effect" : {
        "en" : "An attacker that compromises a DNS server or pollutes its cache can bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 350,
        "impact" : "Low",
        "subcategory" : "dns",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 207
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "dns",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Check against reverse DNS lookup"
      },
      "description" : {
        "en" : "Comparing the result of a reverse DNS lookup to a hardcoded hostname."
      },
      "local_effect" : {
        "en" : "An attacker that compromises a DNS server or pollutes its cache can bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 350,
        "impact" : "Low",
        "subcategory" : "dns",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 207
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "dns_sensitive_op",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Check against reverse DNS lookup"
      },
      "description" : {
        "en" : "Using the results of a reverse DNS lookup to guard a sensitive operation."
      },
      "local_effect" : {
        "en" : "An attacker that compromises a DNS server or pollutes its cache can bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 350,
        "impact" : "High",
        "subcategory" : "dns_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 207
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "dns_sensitive_op",
      "code-language" : "cuda",
      "name" : {
        "en" : "Check against reverse DNS lookup"
      },
      "description" : {
        "en" : "Using the results of a reverse DNS lookup to guard a sensitive operation."
      },
      "local_effect" : {
        "en" : "An attacker that compromises a DNS server or pollutes its cache can bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 350,
        "impact" : "High",
        "subcategory" : "dns_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 207
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "dns_sensitive_op",
      "code-language" : "java",
      "name" : {
        "en" : "Check against reverse DNS lookup"
      },
      "description" : {
        "en" : "Using the results of a reverse DNS lookup to guard a sensitive operation."
      },
      "local_effect" : {
        "en" : "An attacker that compromises a DNS server or pollutes its cache can bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 350,
        "impact" : "High",
        "subcategory" : "dns_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 207
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "dns_sensitive_op",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Check against reverse DNS lookup"
      },
      "description" : {
        "en" : "Using the results of a reverse DNS lookup to guard a sensitive operation."
      },
      "local_effect" : {
        "en" : "An attacker that compromises a DNS server or pollutes its cache can bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 350,
        "impact" : "High",
        "subcategory" : "dns_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 207
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "http_referer",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Comparison of HTTP referer to a constant"
      },
      "description" : {
        "en" : "Comparing the HTTP 'referer' header to a hardcoded value."
      },
      "local_effect" : {
        "en" : "An attacker has full control over the contents of the HTTP 'referer' header and can thus bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 293,
        "impact" : "Low",
        "subcategory" : "http_referer",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 805
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "http_referer",
      "code-language" : "cuda",
      "name" : {
        "en" : "Comparison of HTTP referer to a constant"
      },
      "description" : {
        "en" : "Comparing the HTTP 'referer' header to a hardcoded value."
      },
      "local_effect" : {
        "en" : "An attacker has full control over the contents of the HTTP 'referer' header and can thus bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 293,
        "impact" : "Low",
        "subcategory" : "http_referer",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 805
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "http_referer",
      "code-language" : "java",
      "name" : {
        "en" : "Comparison of HTTP referer to a constant"
      },
      "description" : {
        "en" : "Comparing the HTTP 'referer' header to a hardcoded value."
      },
      "local_effect" : {
        "en" : "An attacker has full control over the contents of the HTTP 'referer' header and can thus bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 293,
        "impact" : "Low",
        "subcategory" : "http_referer",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 805
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "http_referer",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Comparison of HTTP referer to a constant"
      },
      "description" : {
        "en" : "Comparing the HTTP 'referer' header to a hardcoded value."
      },
      "local_effect" : {
        "en" : "An attacker has full control over the contents of the HTTP 'referer' header and can thus bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 293,
        "impact" : "Low",
        "subcategory" : "http_referer",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 805
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "http_referer_sensitive_op",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Comparison of HTTP referer to a constant"
      },
      "description" : {
        "en" : "Using the HTTP 'referer' header value as a security control for a sensitive operation."
      },
      "local_effect" : {
        "en" : "An attacker has full control over the contents of the HTTP 'referer' header and can thus bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 293,
        "impact" : "High",
        "subcategory" : "http_referer_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 805
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "http_referer_sensitive_op",
      "code-language" : "cuda",
      "name" : {
        "en" : "Comparison of HTTP referer to a constant"
      },
      "description" : {
        "en" : "Using the HTTP 'referer' header value as a security control for a sensitive operation."
      },
      "local_effect" : {
        "en" : "An attacker has full control over the contents of the HTTP 'referer' header and can thus bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 293,
        "impact" : "High",
        "subcategory" : "http_referer_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 805
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "http_referer_sensitive_op",
      "code-language" : "java",
      "name" : {
        "en" : "Comparison of HTTP referer to a constant"
      },
      "description" : {
        "en" : "Using the HTTP 'referer' header value as a security control for a sensitive operation."
      },
      "local_effect" : {
        "en" : "An attacker has full control over the contents of the HTTP 'referer' header and can thus bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 293,
        "impact" : "High",
        "subcategory" : "http_referer_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 805
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "http_referer_sensitive_op",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Comparison of HTTP referer to a constant"
      },
      "description" : {
        "en" : "Using the HTTP 'referer' header value as a security control for a sensitive operation."
      },
      "local_effect" : {
        "en" : "An attacker has full control over the contents of the HTTP 'referer' header and can thus bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 293,
        "impact" : "High",
        "subcategory" : "http_referer_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 805
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "ip_address",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Comparison of IP address to a constant"
      },
      "description" : {
        "en" : "Comparing a remote connection's IP address against a hardcoded value."
      },
      "local_effect" : {
        "en" : "Network data that masquerades as being from the trusted IP address may bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 291,
        "impact" : "Low",
        "subcategory" : "ip_address",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 803
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "ip_address",
      "code-language" : "cuda",
      "name" : {
        "en" : "Comparison of IP address to a constant"
      },
      "description" : {
        "en" : "Comparing a remote connection's IP address against a hardcoded value."
      },
      "local_effect" : {
        "en" : "Network data that masquerades as being from the trusted IP address may bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 291,
        "impact" : "Low",
        "subcategory" : "ip_address",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 803
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "ip_address",
      "code-language" : "java",
      "name" : {
        "en" : "Comparison of IP address to a constant"
      },
      "description" : {
        "en" : "Comparing a remote connection's IP address against a hardcoded value."
      },
      "local_effect" : {
        "en" : "Network data that masquerades as being from the trusted IP address may bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 291,
        "impact" : "Low",
        "subcategory" : "ip_address",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 803
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "ip_address",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Comparison of IP address to a constant"
      },
      "description" : {
        "en" : "Comparing a remote connection's IP address against a hardcoded value."
      },
      "local_effect" : {
        "en" : "Network data that masquerades as being from the trusted IP address may bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 291,
        "impact" : "Low",
        "subcategory" : "ip_address",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 803
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "ip_address_sensitive_op",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Comparison of IP address to a constant"
      },
      "description" : {
        "en" : "Using an IP address as a security control for a sensitive operation."
      },
      "local_effect" : {
        "en" : "Network data that masquerades as being from the trusted IP address may bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 291,
        "impact" : "High",
        "subcategory" : "ip_address_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 803
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "ip_address_sensitive_op",
      "code-language" : "cuda",
      "name" : {
        "en" : "Comparison of IP address to a constant"
      },
      "description" : {
        "en" : "Using an IP address as a security control for a sensitive operation."
      },
      "local_effect" : {
        "en" : "Network data that masquerades as being from the trusted IP address may bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 291,
        "impact" : "High",
        "subcategory" : "ip_address_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 803
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "ip_address_sensitive_op",
      "code-language" : "java",
      "name" : {
        "en" : "Comparison of IP address to a constant"
      },
      "description" : {
        "en" : "Using an IP address as a security control for a sensitive operation."
      },
      "local_effect" : {
        "en" : "Network data that masquerades as being from the trusted IP address may bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 291,
        "impact" : "High",
        "subcategory" : "ip_address_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 803
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "ip_address_sensitive_op",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Comparison of IP address to a constant"
      },
      "description" : {
        "en" : "Using an IP address as a security control for a sensitive operation."
      },
      "local_effect" : {
        "en" : "Network data that masquerades as being from the trusted IP address may bypass this check."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 291,
        "impact" : "High",
        "subcategory" : "ip_address_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 803
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "os_login",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Comparison of OS login to a constant"
      },
      "description" : {
        "en" : "Comparing a user's operating system login name to a constant."
      },
      "local_effect" : {
        "en" : "An attacker running this program on a machine they administer can bypass this check by creating a suitably named account"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 290,
        "impact" : "Low",
        "subcategory" : "os_login",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1361
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "os_login",
      "code-language" : "cuda",
      "name" : {
        "en" : "Comparison of OS login to a constant"
      },
      "description" : {
        "en" : "Comparing a user's operating system login name to a constant."
      },
      "local_effect" : {
        "en" : "An attacker running this program on a machine they administer can bypass this check by creating a suitably named account"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 290,
        "impact" : "Low",
        "subcategory" : "os_login",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1361
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "os_login",
      "code-language" : "java",
      "name" : {
        "en" : "Comparison of OS login to a constant"
      },
      "description" : {
        "en" : "Comparing a user's operating system login name to a constant."
      },
      "local_effect" : {
        "en" : "An attacker running this program on a machine they administer can bypass this check by creating a suitably named account"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 290,
        "impact" : "Low",
        "subcategory" : "os_login",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1361
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "os_login",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Comparison of OS login to a constant"
      },
      "description" : {
        "en" : "Comparing a user's operating system login name to a constant."
      },
      "local_effect" : {
        "en" : "An attacker running this program on a machine they administer can bypass this check by creating a suitably named account"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 290,
        "impact" : "Low",
        "subcategory" : "os_login",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1361
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "os_login_sensitive_op",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Comparison of OS login to a constant"
      },
      "description" : {
        "en" : "Comparing a user's operating system login name to a constant to guard a sensitive operation."
      },
      "local_effect" : {
        "en" : "An attacker running this program on a machine they administer can bypass this check by creating a suitably named account"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 290,
        "impact" : "High",
        "subcategory" : "os_login_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1361
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "os_login_sensitive_op",
      "code-language" : "cuda",
      "name" : {
        "en" : "Comparison of OS login to a constant"
      },
      "description" : {
        "en" : "Comparing a user's operating system login name to a constant to guard a sensitive operation."
      },
      "local_effect" : {
        "en" : "An attacker running this program on a machine they administer can bypass this check by creating a suitably named account"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 290,
        "impact" : "High",
        "subcategory" : "os_login_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1361
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "os_login_sensitive_op",
      "code-language" : "java",
      "name" : {
        "en" : "Comparison of OS login to a constant"
      },
      "description" : {
        "en" : "Comparing a user's operating system login name to a constant to guard a sensitive operation."
      },
      "local_effect" : {
        "en" : "An attacker running this program on a machine they administer can bypass this check by creating a suitably named account"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 290,
        "impact" : "High",
        "subcategory" : "os_login_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1361
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "os_login_sensitive_op",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Comparison of OS login to a constant"
      },
      "description" : {
        "en" : "Comparing a user's operating system login name to a constant to guard a sensitive operation."
      },
      "local_effect" : {
        "en" : "An attacker running this program on a machine they administer can bypass this check by creating a suitably named account"
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 290,
        "impact" : "High",
        "subcategory" : "os_login_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1361
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "principal_name",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Comparison of principal name to a constant"
      },
      "description" : {
        "en" : "Comparing the name of a principal to a constant."
      },
      "local_effect" : {
        "en" : "An attacker can bypass this check by creating a suitably named account."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 290,
        "impact" : "Low",
        "subcategory" : "principal_name",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1362
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "principal_name",
      "code-language" : "cuda",
      "name" : {
        "en" : "Comparison of principal name to a constant"
      },
      "description" : {
        "en" : "Comparing the name of a principal to a constant."
      },
      "local_effect" : {
        "en" : "An attacker can bypass this check by creating a suitably named account."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 290,
        "impact" : "Low",
        "subcategory" : "principal_name",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1362
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "principal_name",
      "code-language" : "java",
      "name" : {
        "en" : "Comparison of principal name to a constant"
      },
      "description" : {
        "en" : "Comparing the name of a principal to a constant."
      },
      "local_effect" : {
        "en" : "An attacker can bypass this check by creating a suitably named account."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 290,
        "impact" : "Low",
        "subcategory" : "principal_name",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1362
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "principal_name",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Comparison of principal name to a constant"
      },
      "description" : {
        "en" : "Comparing the name of a principal to a constant."
      },
      "local_effect" : {
        "en" : "An attacker can bypass this check by creating a suitably named account."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 290,
        "impact" : "Low",
        "subcategory" : "principal_name",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1362
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "principal_name_sensitive_op",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Comparison of principal name to a constant"
      },
      "description" : {
        "en" : "Comparing the name of a principal to a constant to guard a sensitive operation."
      },
      "local_effect" : {
        "en" : "An attacker can bypass this check by creating a suitably named account."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 290,
        "impact" : "High",
        "subcategory" : "principal_name_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1362
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "principal_name_sensitive_op",
      "code-language" : "cuda",
      "name" : {
        "en" : "Comparison of principal name to a constant"
      },
      "description" : {
        "en" : "Comparing the name of a principal to a constant to guard a sensitive operation."
      },
      "local_effect" : {
        "en" : "An attacker can bypass this check by creating a suitably named account."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 290,
        "impact" : "High",
        "subcategory" : "principal_name_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1362
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "principal_name_sensitive_op",
      "code-language" : "java",
      "name" : {
        "en" : "Comparison of principal name to a constant"
      },
      "description" : {
        "en" : "Comparing the name of a principal to a constant to guard a sensitive operation."
      },
      "local_effect" : {
        "en" : "An attacker can bypass this check by creating a suitably named account."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 290,
        "impact" : "High",
        "subcategory" : "principal_name_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1362
      }
    },
    {
      "type" : "weak_guard",
      "subtype" : "principal_name_sensitive_op",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Comparison of principal name to a constant"
      },
      "description" : {
        "en" : "Comparing the name of a principal to a constant to guard a sensitive operation."
      },
      "local_effect" : {
        "en" : "An attacker can bypass this check by creating a suitably named account."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 290,
        "impact" : "High",
        "subcategory" : "principal_name_sensitive_op",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1362
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Hashing a password with a weak hash function"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive."
      },
      "local_effect" : {
        "en" : "An attacker may recover individual passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 916,
        "impact" : "Medium",
        "subcategory" : "weak_hash",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 26
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash",
      "code-language" : "c#",
      "name" : {
        "en" : "Hashing a password with a weak hash function"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive."
      },
      "local_effect" : {
        "en" : "An attacker may recover individual passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 916,
        "impact" : "Medium",
        "subcategory" : "weak_hash",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 26
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash",
      "code-language" : "cuda",
      "name" : {
        "en" : "Hashing a password with a weak hash function"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive."
      },
      "local_effect" : {
        "en" : "An attacker may recover individual passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 916,
        "impact" : "Medium",
        "subcategory" : "weak_hash",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 26
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash",
      "code-language" : "java",
      "name" : {
        "en" : "Hashing a password with a weak hash function"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive."
      },
      "local_effect" : {
        "en" : "An attacker may recover individual passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 916,
        "impact" : "Medium",
        "subcategory" : "weak_hash",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 26
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Hashing a password with a weak hash function"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive."
      },
      "local_effect" : {
        "en" : "An attacker may recover individual passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 916,
        "impact" : "Medium",
        "subcategory" : "weak_hash",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 26
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Hashing a password with a weak hash function"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive."
      },
      "local_effect" : {
        "en" : "An attacker may recover individual passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 916,
        "impact" : "Medium",
        "subcategory" : "weak_hash",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 26
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Hashing a password with a weak hash function"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive."
      },
      "local_effect" : {
        "en" : "An attacker may recover individual passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 916,
        "impact" : "Medium",
        "subcategory" : "weak_hash",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 26
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_digest_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Weak hash"
      },
      "description" : {
        "en" : "A weak hashing algorithm has been detected which should not be used in a security context."
      },
      "local_effect" : {
        "en" : "May result in a security violation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 916,
        "impact" : "High",
        "subcategory" : "weak_hash_digest_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 26
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_digest_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Weak hash"
      },
      "description" : {
        "en" : "A weak hashing algorithm has been detected which should not be used in a security context."
      },
      "local_effect" : {
        "en" : "May result in a security violation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 916,
        "impact" : "Medium",
        "subcategory" : "weak_hash_digest_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 26
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_hmac_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Weak hash"
      },
      "description" : {
        "en" : "A weak hashing algorithm has been detected which should not be used in a security context."
      },
      "local_effect" : {
        "en" : "May result in a security violation."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 916,
        "impact" : "Medium",
        "subcategory" : "weak_hash_hmac_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 26
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_no_salt",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Very weak password hashing"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive, and without using any salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover a large number of passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 759,
        "impact" : "High",
        "subcategory" : "weak_hash_no_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 16
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_no_salt",
      "code-language" : "c#",
      "name" : {
        "en" : "Very weak password hashing"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive, and without using any salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover a large number of passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 759,
        "impact" : "High",
        "subcategory" : "weak_hash_no_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 16
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_no_salt",
      "code-language" : "cuda",
      "name" : {
        "en" : "Very weak password hashing"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive, and without using any salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover a large number of passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 759,
        "impact" : "High",
        "subcategory" : "weak_hash_no_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 16
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_no_salt",
      "code-language" : "java",
      "name" : {
        "en" : "Very weak password hashing"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive, and without using any salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover a large number of passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 759,
        "impact" : "High",
        "subcategory" : "weak_hash_no_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 16
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_no_salt",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Very weak password hashing"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive, and without using any salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover a large number of passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 759,
        "impact" : "High",
        "subcategory" : "weak_hash_no_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 16
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_no_salt",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Very weak password hashing"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive, and without using any salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover a large number of passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 759,
        "impact" : "High",
        "subcategory" : "weak_hash_no_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 16
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_no_salt",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Very weak password hashing"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive, and without using any salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover a large number of passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 759,
        "impact" : "High",
        "subcategory" : "weak_hash_no_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 16
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_weak_salt",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Weak password hashing"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive, and without using a random and unique salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover a large number of passwords hashed this way with modest computational effort or pre-computed values."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 760,
        "impact" : "High",
        "subcategory" : "weak_hash_weak_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_weak_salt",
      "code-language" : "c#",
      "name" : {
        "en" : "Weak password hashing"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive, and without using a random and unique salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover a large number of passwords hashed this way with modest computational effort or pre-computed values."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 760,
        "impact" : "High",
        "subcategory" : "weak_hash_weak_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_weak_salt",
      "code-language" : "cuda",
      "name" : {
        "en" : "Weak password hashing"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive, and without using a random and unique salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover a large number of passwords hashed this way with modest computational effort or pre-computed values."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 760,
        "impact" : "High",
        "subcategory" : "weak_hash_weak_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_weak_salt",
      "code-language" : "java",
      "name" : {
        "en" : "Weak password hashing"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive, and without using a random and unique salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover a large number of passwords hashed this way with modest computational effort or pre-computed values."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 760,
        "impact" : "High",
        "subcategory" : "weak_hash_weak_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_weak_salt",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Weak password hashing"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive, and without using a random and unique salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover a large number of passwords hashed this way with modest computational effort or pre-computed values."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 760,
        "impact" : "High",
        "subcategory" : "weak_hash_weak_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_weak_salt",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Weak password hashing"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive, and without using a random and unique salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover a large number of passwords hashed this way with modest computational effort or pre-computed values."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 760,
        "impact" : "High",
        "subcategory" : "weak_hash_weak_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_hash_weak_salt",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Weak password hashing"
      },
      "description" : {
        "en" : "Hashing a password using a scheme that is not computationally intensive, and without using a random and unique salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover a large number of passwords hashed this way with modest computational effort or pre-computed values."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 760,
        "impact" : "High",
        "subcategory" : "weak_hash_weak_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_salt",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Hashing a password with a weak salt"
      },
      "description" : {
        "en" : "Hashing a password without using a random and unique salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover individual passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 760,
        "impact" : "Low",
        "subcategory" : "weak_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_salt",
      "code-language" : "c#",
      "name" : {
        "en" : "Hashing a password with a weak salt"
      },
      "description" : {
        "en" : "Hashing a password without using a random and unique salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover individual passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 760,
        "impact" : "Low",
        "subcategory" : "weak_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_salt",
      "code-language" : "cuda",
      "name" : {
        "en" : "Hashing a password with a weak salt"
      },
      "description" : {
        "en" : "Hashing a password without using a random and unique salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover individual passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 760,
        "impact" : "Low",
        "subcategory" : "weak_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_salt",
      "code-language" : "java",
      "name" : {
        "en" : "Hashing a password with a weak salt"
      },
      "description" : {
        "en" : "Hashing a password without using a random and unique salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover individual passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 760,
        "impact" : "Low",
        "subcategory" : "weak_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_salt",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Hashing a password with a weak salt"
      },
      "description" : {
        "en" : "Hashing a password without using a random and unique salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover individual passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 760,
        "impact" : "Low",
        "subcategory" : "weak_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_salt",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Hashing a password with a weak salt"
      },
      "description" : {
        "en" : "Hashing a password without using a random and unique salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover individual passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 760,
        "impact" : "Low",
        "subcategory" : "weak_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "weak_password_hash",
      "subtype" : "weak_salt",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Hashing a password with a weak salt"
      },
      "description" : {
        "en" : "Hashing a password without using a random and unique salt as part of the input."
      },
      "local_effect" : {
        "en" : "An attacker may recover individual passwords hashed this way with modest computational effort."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 760,
        "impact" : "Low",
        "subcategory" : "weak_salt",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1168
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "Wrapper object use after free"
      },
      "description" : {
        "en" : "An internal pointer of a wrapper object remains available after the object is freed"
      },
      "local_effect" : {
        "en" : "A use after free bug would occur if the internal pointer is used."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "Wrapper object use after free"
      },
      "description" : {
        "en" : "An internal pointer of a wrapper object remains available after the object is freed"
      },
      "local_effect" : {
        "en" : "A use after free bug would occur if the internal pointer is used."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "Wrapper object use after free"
      },
      "description" : {
        "en" : "An internal pointer of a wrapper object remains available after the object is freed"
      },
      "local_effect" : {
        "en" : "A use after free bug would occur if the internal pointer is used."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : "com_deref_read_after_free",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Freed COM internal read"
      },
      "description" : {
        "en" : "Reads target of a freed internal pointer of a COM object"
      },
      "local_effect" : {
        "en" : "Reading from freed memory can cause wrong values to be read and crashes due to illegal memory accesses."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "COM_deref_read_after_free",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : "com_deref_read_after_free",
      "code-language" : "cuda",
      "name" : {
        "en" : "Freed COM internal read"
      },
      "description" : {
        "en" : "Reads target of a freed internal pointer of a COM object"
      },
      "local_effect" : {
        "en" : "Reading from freed memory can cause wrong values to be read and crashes due to illegal memory accesses."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "COM_deref_read_after_free",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : "com_deref_read_after_free",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Freed COM internal read"
      },
      "description" : {
        "en" : "Reads target of a freed internal pointer of a COM object"
      },
      "local_effect" : {
        "en" : "Reading from freed memory can cause wrong values to be read and crashes due to illegal memory accesses."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "COM_deref_read_after_free",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : "com_deref_write_after_free",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Freed COM internal write"
      },
      "description" : {
        "en" : "Write to target of a freed internal pointer of a COM object"
      },
      "local_effect" : {
        "en" : "Writing to freed memory can cause memory corruption and crashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "COM_deref_write_after_free",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : "com_deref_write_after_free",
      "code-language" : "cuda",
      "name" : {
        "en" : "Freed COM internal write"
      },
      "description" : {
        "en" : "Write to target of a freed internal pointer of a COM object"
      },
      "local_effect" : {
        "en" : "Writing to freed memory can cause memory corruption and crashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "COM_deref_write_after_free",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : "com_deref_write_after_free",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Freed COM internal write"
      },
      "description" : {
        "en" : "Write to target of a freed internal pointer of a COM object"
      },
      "local_effect" : {
        "en" : "Writing to freed memory can cause memory corruption and crashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "COM_deref_write_after_free",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : "com_use_after_free",
      "code-language" : "c/c++",
      "name" : {
        "en" : "COM object use after free"
      },
      "description" : {
        "en" : "An internal pointer of a COM string object remains available after the object is freed"
      },
      "local_effect" : {
        "en" : "A use after free bug would occur if the internal pointer is used."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "COM_use_after_free",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : "com_use_after_free",
      "code-language" : "cuda",
      "name" : {
        "en" : "COM object use after free"
      },
      "description" : {
        "en" : "An internal pointer of a COM string object remains available after the object is freed"
      },
      "local_effect" : {
        "en" : "A use after free bug would occur if the internal pointer is used."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "COM_use_after_free",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : "com_use_after_free",
      "code-language" : "objective-c",
      "name" : {
        "en" : "COM object use after free"
      },
      "description" : {
        "en" : "An internal pointer of a COM string object remains available after the object is freed"
      },
      "local_effect" : {
        "en" : "A use after free bug would occur if the internal pointer is used."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "COM_use_after_free",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : "deref_read_after_free",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Freed internal location read"
      },
      "description" : {
        "en" : "Reads target of a freed internal pointer"
      },
      "local_effect" : {
        "en" : "Reading from freed memory can cause wrong values to be read and crashes due to illegal memory accesses."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "deref_read_after_free",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : "deref_read_after_free",
      "code-language" : "cuda",
      "name" : {
        "en" : "Freed internal location read"
      },
      "description" : {
        "en" : "Reads target of a freed internal pointer"
      },
      "local_effect" : {
        "en" : "Reading from freed memory can cause wrong values to be read and crashes due to illegal memory accesses."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "deref_read_after_free",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : "deref_read_after_free",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Freed internal location read"
      },
      "description" : {
        "en" : "Reads target of a freed internal pointer"
      },
      "local_effect" : {
        "en" : "Reading from freed memory can cause wrong values to be read and crashes due to illegal memory accesses."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "deref_read_after_free",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : "deref_write_after_free",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Freed internal location write"
      },
      "description" : {
        "en" : "Write to target of a freed internal pointer"
      },
      "local_effect" : {
        "en" : "Writing to freed memory can cause memory corruption and crashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "deref_write_after_free",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : "deref_write_after_free",
      "code-language" : "cuda",
      "name" : {
        "en" : "Freed internal location write"
      },
      "description" : {
        "en" : "Write to target of a freed internal pointer"
      },
      "local_effect" : {
        "en" : "Writing to freed memory can cause memory corruption and crashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "deref_write_after_free",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrapper_escape",
      "subtype" : "deref_write_after_free",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Freed internal location write"
      },
      "description" : {
        "en" : "Write to target of a freed internal pointer"
      },
      "local_effect" : {
        "en" : "Writing to freed memory can cause memory corruption and crashes."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - corruptions",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "deref_write_after_free",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrong_deallocator",
      "subtype" : "alloc_free_mismatch",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Incorrect deallocator used"
      },
      "description" : {
        "en" : "A resource is freed using the wrong deallocator"
      },
      "local_effect" : {
        "en" : "Depending on the difference between the correct and incorrect allocator, there may be a resource leak or memory corruption."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 762,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1170
      }
    },
    {
      "type" : "wrong_deallocator",
      "subtype" : "alloc_free_mismatch",
      "code-language" : "cuda",
      "name" : {
        "en" : "Incorrect deallocator used"
      },
      "description" : {
        "en" : "A resource is freed using the wrong deallocator"
      },
      "local_effect" : {
        "en" : "Depending on the difference between the correct and incorrect allocator, there may be a resource leak or memory corruption."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 762,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1170
      }
    },
    {
      "type" : "wrong_deallocator",
      "subtype" : "alloc_free_mismatch",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Incorrect deallocator used"
      },
      "description" : {
        "en" : "A resource is freed using the wrong deallocator"
      },
      "local_effect" : {
        "en" : "Depending on the difference between the correct and incorrect allocator, there may be a resource leak or memory corruption."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : 762,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1170
      }
    },
    {
      "type" : "wrong_deallocator",
      "subtype" : "com.bad_free",
      "code-language" : "c/c++",
      "name" : {
        "en" : "Explicit free of COM interface"
      },
      "description" : {
        "en" : "A COM interface is explicitly freed instead of using the recommended Release method"
      },
      "local_effect" : {
        "en" : "Other owners of the interface may be left with dangling pointers, ultimately resulting in use after free errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrong_deallocator",
      "subtype" : "com.bad_free",
      "code-language" : "cuda",
      "name" : {
        "en" : "Explicit free of COM interface"
      },
      "description" : {
        "en" : "A COM interface is explicitly freed instead of using the recommended Release method"
      },
      "local_effect" : {
        "en" : "Other owners of the interface may be left with dangling pointers, ultimately resulting in use after free errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrong_deallocator",
      "subtype" : "com.bad_free",
      "code-language" : "objective-c",
      "name" : {
        "en" : "Explicit free of COM interface"
      },
      "description" : {
        "en" : "A COM interface is explicitly freed instead of using the recommended Release method"
      },
      "local_effect" : {
        "en" : "Other owners of the interface may be left with dangling pointers, ultimately resulting in use after free errors."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Memory - illegal accesses",
        "cweCategory" : 416,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 908
      }
    },
    {
      "type" : "wrong_equality_operation",
      "subtype" : "referential",
      "code-language" : "c#",
      "name" : {
        "en" : "Wrong equality (referential)"
      },
      "description" : {
        "en" : "Using referential equality when value equality is the norm for this type"
      },
      "local_effect" : {
        "en" : "Referential equality may consider objects different when value equality considers them the same."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 595,
        "impact" : "Medium",
        "subcategory" : "referential",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1063
      }
    },
    {
      "type" : "wrong_equality_operation",
      "subtype" : "structural_on_different_types",
      "code-language" : "c#",
      "name" : {
        "en" : "Equality test on different types"
      },
      "description" : {
        "en" : "Structural equality is never true for objects of different types"
      },
      "local_effect" : {
        "en" : "The equality test will always return false."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Incorrect expression",
        "cweCategory" : 570,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1040
      }
    },
    {
      "type" : "wrong_method",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "wrong_method",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "Wrong method called"
      },
      "description" : {
        "en" : "Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value."
      },
      "local_effect" : {
        "en" : "The function call will not have its intended effect."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "API usage errors",
        "cweCategory" : null,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : true,
        "securityKind" : false,
        "testKind" : false,
        "weaknessId" : 1438
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "entity_expansion",
      "code-language" : "c#",
      "name" : {
        "en" : "Unrestricted entity expansion"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary entity references to a weakly configured XML parser that does not limit entity expansion."
      },
      "local_effect" : {
        "en" : "Processing an arbitrary DTD without limiting entity expansion may result in parsing a large number of entities, causing denial of service."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 776,
        "impact" : "Medium",
        "subcategory" : "entity_expansion",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 15
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "entity_expansion",
      "code-language" : "go",
      "name" : {
        "en" : "Unrestricted entity expansion"
      },
      "description" : {
        "en" : "Passing data with possibly arbitrary entity references to a weakly configured XML parser that does not limit entity expansion."
      },
      "local_effect" : {
        "en" : "Processing an arbitrary DTD without limiting entity expansion may result in parsing a large number of entities, causing denial of service."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 776,
        "impact" : "Medium",
        "subcategory" : "entity_expansion",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 15
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "entity_expansion",
      "code-language" : "java",
      "name" : {
        "en" : "Unrestricted entity expansion"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary entity references to a weakly configured XML parser that does not limit entity expansion."
      },
      "local_effect" : {
        "en" : "Processing an arbitrary DTD without limiting entity expansion may result in parsing a large number of entities, causing denial of service."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 776,
        "impact" : "Medium",
        "subcategory" : "entity_expansion",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 15
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "entity_expansion",
      "code-language" : "javascript",
      "name" : {
        "en" : "Unrestricted entity expansion"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary entity references to a weakly configured XML parser that does not limit entity expansion."
      },
      "local_effect" : {
        "en" : "Processing an arbitrary DTD without limiting entity expansion may result in parsing a large number of entities, causing denial of service."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 776,
        "impact" : "Medium",
        "subcategory" : "entity_expansion",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 15
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "entity_expansion",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unrestricted entity expansion"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary entity references to a weakly configured XML parser that does not limit entity expansion."
      },
      "local_effect" : {
        "en" : "Processing an arbitrary DTD without limiting entity expansion may result in parsing a large number of entities, causing denial of service."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 776,
        "impact" : "Medium",
        "subcategory" : "entity_expansion",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 15
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "entity_expansion",
      "code-language" : "typescript",
      "name" : {
        "en" : "Unrestricted entity expansion"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary entity references to a weakly configured XML parser that does not limit entity expansion."
      },
      "local_effect" : {
        "en" : "Processing an arbitrary DTD without limiting entity expansion may result in parsing a large number of entities, causing denial of service."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 776,
        "impact" : "Medium",
        "subcategory" : "entity_expansion",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 15
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "entity_expansion",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Unrestricted entity expansion"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary entity references to a weakly configured XML parser that does not limit entity expansion."
      },
      "local_effect" : {
        "en" : "Processing an arbitrary DTD without limiting entity expansion may result in parsing a large number of entities, causing denial of service."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 776,
        "impact" : "Medium",
        "subcategory" : "entity_expansion",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 15
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "external_entities",
      "code-language" : "c#",
      "name" : {
        "en" : "Unrestricted external entity references"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary external entity references to a weakly configured XML parser."
      },
      "local_effect" : {
        "en" : "Resolving arbitrary external entities may result in exposing sensitive data or in making unwanted server requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 611,
        "impact" : "Medium",
        "subcategory" : "external_entities",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 99
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "external_entities",
      "code-language" : "go",
      "name" : {
        "en" : "Unrestricted external entity references"
      },
      "description" : {
        "en" : "Passing data with possibly arbitrary external entity references to a weakly configured XML parser."
      },
      "local_effect" : {
        "en" : "Resolving arbitrary external entities may result in exposing sensitive data or in making unwanted server requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 611,
        "impact" : "Medium",
        "subcategory" : "external_entities",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 99
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "external_entities",
      "code-language" : "java",
      "name" : {
        "en" : "Unrestricted external entity references"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary external entity references to a weakly configured XML parser."
      },
      "local_effect" : {
        "en" : "Resolving arbitrary external entities may result in exposing sensitive data or in making unwanted server requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 611,
        "impact" : "Medium",
        "subcategory" : "external_entities",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 99
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "external_entities",
      "code-language" : "javascript",
      "name" : {
        "en" : "Unrestricted external entity references"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary external entity references to a weakly configured XML parser."
      },
      "local_effect" : {
        "en" : "Resolving arbitrary external entities may result in exposing sensitive data or in making unwanted server requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 611,
        "impact" : "Medium",
        "subcategory" : "external_entities",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 99
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "external_entities",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unrestricted external entity references"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary external entity references to a weakly configured XML parser."
      },
      "local_effect" : {
        "en" : "Resolving arbitrary external entities may result in exposing sensitive data or in making unwanted server requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 611,
        "impact" : "Medium",
        "subcategory" : "external_entities",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 99
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "external_entities",
      "code-language" : "php",
      "name" : {
        "en" : "Unrestricted external entity references"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary external entity references to a weakly configured XML parser."
      },
      "local_effect" : {
        "en" : "Resolving arbitrary external entities may result in exposing sensitive data or in making unwanted server requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 611,
        "impact" : "Medium",
        "subcategory" : "external_entities",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 99
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "external_entities",
      "code-language" : "python",
      "name" : {
        "en" : "Unrestricted external entity references"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary external entity references to a weakly configured XML parser."
      },
      "local_effect" : {
        "en" : "Resolving arbitrary external entities may result in exposing sensitive data or in making unwanted server requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 611,
        "impact" : "Medium",
        "subcategory" : "external_entities",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 99
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "external_entities",
      "code-language" : "typescript",
      "name" : {
        "en" : "Unrestricted external entity references"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary external entity references to a weakly configured XML parser."
      },
      "local_effect" : {
        "en" : "Resolving arbitrary external entities may result in exposing sensitive data or in making unwanted server requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 611,
        "impact" : "Medium",
        "subcategory" : "external_entities",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 99
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "external_entities",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Unrestricted external entity references"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary external entity references to a weakly configured XML parser."
      },
      "local_effect" : {
        "en" : "Resolving arbitrary external entities may result in exposing sensitive data or in making unwanted server requests."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 611,
        "impact" : "Medium",
        "subcategory" : "external_entities",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 99
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "unrestricted_dtds",
      "code-language" : "c#",
      "name" : {
        "en" : "Unrestricted document type definitions"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary DTDs to a weakly configured XML parser."
      },
      "local_effect" : {
        "en" : "An attacker-controlled DTD can be used to specify an external URL, making the impact of processing the DTD analogous to a server-side request forgery. Processing an arbitrary DTD may also result in parsing a large number of entities, causing denial of service."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 827,
        "impact" : "Medium",
        "subcategory" : "unrestricted_dtds",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1220
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "unrestricted_dtds",
      "code-language" : "java",
      "name" : {
        "en" : "Unrestricted document type definitions"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary DTDs to a weakly configured XML parser."
      },
      "local_effect" : {
        "en" : "An attacker-controlled DTD can be used to specify an external URL, making the impact of processing the DTD analogous to a server-side request forgery. Processing an arbitrary DTD may also result in parsing a large number of entities, causing denial of service."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 827,
        "impact" : "Medium",
        "subcategory" : "unrestricted_dtds",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1220
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "unrestricted_dtds",
      "code-language" : "kotlin",
      "name" : {
        "en" : "Unrestricted document type definitions"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary DTDs to a weakly configured XML parser."
      },
      "local_effect" : {
        "en" : "An attacker-controlled DTD can be used to specify an external URL, making the impact of processing the DTD analogous to a server-side request forgery. Processing an arbitrary DTD may also result in parsing a large number of entities, causing denial of service."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 827,
        "impact" : "Medium",
        "subcategory" : "unrestricted_dtds",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1220
      }
    },
    {
      "type" : "xml_external_entity",
      "subtype" : "unrestricted_dtds",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Unrestricted document type definitions"
      },
      "description" : {
        "en" : "Passing tainted input data with possibly arbitrary DTDs to a weakly configured XML parser."
      },
      "local_effect" : {
        "en" : "An attacker-controlled DTD can be used to specify an external URL, making the impact of processing the DTD analogous to a server-side request forgery. Processing an arbitrary DTD may also result in parsing a large number of entities, causing denial of service."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 827,
        "impact" : "Medium",
        "subcategory" : "unrestricted_dtds",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1220
      }
    },
    {
      "type" : "xml_injection",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "XML injection"
      },
      "description" : {
        "en" : "User-controllable data is parsed as XML."
      },
      "local_effect" : {
        "en" : "An attacker may be able to insert unintended content or structure to subvert the application's logic."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 91,
        "impact" : "Audit",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 29
      }
    },
    {
      "type" : "xml_injection",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "XML injection"
      },
      "description" : {
        "en" : "User-controllable data is parsed as XML."
      },
      "local_effect" : {
        "en" : "An attacker may be able to insert unintended content or structure to subvert the application's logic."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 91,
        "impact" : "Audit",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 29
      }
    },
    {
      "type" : "xml_injection",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "XML injection"
      },
      "description" : {
        "en" : "User-controllable data is parsed as XML."
      },
      "local_effect" : {
        "en" : "An attacker may be able to insert unintended content or structure to subvert the application's logic."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 91,
        "impact" : "Low",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 29
      }
    },
    {
      "type" : "xml_injection",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "XML injection"
      },
      "description" : {
        "en" : "User-controllable data is parsed as XML."
      },
      "local_effect" : {
        "en" : "An attacker may be able to insert unintended content or structure to subvert the application's logic."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Audit impact security",
        "cweCategory" : 91,
        "impact" : "Audit",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 29
      }
    },
    {
      "type" : "xpath_injection",
      "subtype" : null,
      "code-language" : "c/c++",
      "name" : {
        "en" : "XML Path (XPath) Language injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into an XPath query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the XPath query, which may inappropriately disclose data or grant unauthorized access to application functionality."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 643,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 96
      }
    },
    {
      "type" : "xpath_injection",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "XML Path (XPath) Language injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into an XPath query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the XPath query, which may inappropriately disclose data or grant unauthorized access to application functionality."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 643,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 96
      }
    },
    {
      "type" : "xpath_injection",
      "subtype" : null,
      "code-language" : "cuda",
      "name" : {
        "en" : "XML Path (XPath) Language injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into an XPath query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the XPath query, which may inappropriately disclose data or grant unauthorized access to application functionality."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 643,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 96
      }
    },
    {
      "type" : "xpath_injection",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "XML Path (XPath) Language injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into an XPath query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the XPath query, which may inappropriately disclose data or grant unauthorized access to application functionality."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 643,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 96
      }
    },
    {
      "type" : "xpath_injection",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "XML Path (XPath) Language injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into an XPath query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the XPath query, which may inappropriately disclose data or grant unauthorized access to application functionality."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 643,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 96
      }
    },
    {
      "type" : "xpath_injection",
      "subtype" : null,
      "code-language" : "kotlin",
      "name" : {
        "en" : "XML Path (XPath) Language injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into an XPath query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the XPath query, which may inappropriately disclose data or grant unauthorized access to application functionality."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 643,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 96
      }
    },
    {
      "type" : "xpath_injection",
      "subtype" : null,
      "code-language" : "objective-c",
      "name" : {
        "en" : "XML Path (XPath) Language injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into an XPath query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the XPath query, which may inappropriately disclose data or grant unauthorized access to application functionality."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 643,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 96
      }
    },
    {
      "type" : "xpath_injection",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "XML Path (XPath) Language injection"
      },
      "description" : {
        "en" : "A user-controllable string is injected into an XPath query."
      },
      "local_effect" : {
        "en" : "An attacker can change the intent of the XPath query, which may inappropriately disclose data or grant unauthorized access to application functionality."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 643,
        "impact" : "Medium",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 96
      }
    },
    {
      "type" : "xss",
      "subtype" : null,
      "code-language" : "c#",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : null,
      "code-language" : "go",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : null,
      "code-language" : "java",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : null,
      "code-language" : "javascript",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : null,
      "code-language" : "php",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : null,
      "code-language" : "python",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : null,
      "code-language" : "typescript",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : null,
      "code-language" : "vb.net",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : "cross_site_scripting_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "When potentially user-supplied values are output in an HTML response without escaping HTML entities, it can lead to cross-site scripting. Cross-site scripting is a common web vulnerability where an attacker is able to execute JavaScript inside a victim's browser. Use of raw/html_safe bypasses automatic escaping provided by many Rails templating engines."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cross_site_scripting_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : "cross_site_scripting_inline_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "When rendering as :text or :inline, the response is rendering as HTML. Rendering user-supplied values directly without escaping is a vector for cross-site scripting."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cross_site_scripting_inline_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : "cross_site_scripting_inline_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "When rendering as :text or :inline, the response is rendering as HTML. Rendering user-supplied values directly without escaping is a vector for cross-site scripting."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "cross_site_scripting_inline_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : "cross_site_scripting_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "When potentially user-supplied values are output in an HTML response without escaping HTML entities, it can lead to cross-site scripting. Cross-site scripting is a common web vulnerability where an attacker is able to execute JavaScript inside a victim's browser. Use of raw/html_safe bypasses automatic escaping provided by many Rails templating engines."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 79,
        "impact" : "Low",
        "subcategory" : "cross_site_scripting_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : "cross_site_scripting_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "When potentially user-supplied values are output in an HTML response without escaping HTML entities, it can lead to cross-site scripting. Cross-site scripting is a common web vulnerability where an attacker is able to execute JavaScript inside a victim's browser. Use of raw/html_safe bypasses automatic escaping provided by many Rails templating engines."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "cross_site_scripting_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : "cve_2011_0446_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Mail link"
      },
      "description" : {
        "en" : "This application uses a vulnerable form of mail_to.\n\nOfficial description of vulnerability: There is a vulnerability in mail_to helper in Ruby on Rails when used with the :encode => :javascript option.\n\nAn attacker could specify a malicious name or email value that could enable a cross-site scripting attack."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cve_2011_0446_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : "cve_2012_3464_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Official description of vulnerability: The HTML escaping code in this version of Ruby on Rails does not escape all potentially dangerous characters. In particular the code does not escape the single quote character. The helpers used in Rails itself never use single quotes, so most applications are unlikely to be vulnerable, however all users running an affected release should still upgrade."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "cve_2012_3464_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : "cve_2016_6316_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "In this version of Ruby on Rails, text declared as \"HTML safe\" when passed as an attribute value to a tag helper will not have quotes escaped which can lead to a cross-site scripting attack. Some methods like the sanitize helper will automatically mark strings as \"HTML safe\", but do not prevent cross-site scripting in this scenario."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "cve_2016_6316_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : "cve_2016_6316_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "In this version of Ruby on Rails, text declared as \"HTML safe\" when passed as an attribute value to a tag helper will not have quotes escaped which can lead to a cross-site scripting attack. Some methods like the sanitize helper will automatically mark strings as \"HTML safe\", but do not prevent cross-site scripting in this scenario."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "cve_2016_6316_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : "dom_xss",
      "code-language" : "javascript",
      "name" : {
        "en" : "DOM-based cross-site scripting"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a context that can execute JavaScript."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 169
      }
    },
    {
      "type" : "xss",
      "subtype" : "dom_xss",
      "code-language" : "typescript",
      "name" : {
        "en" : "DOM-based cross-site scripting"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is inserted into a context that can execute JavaScript."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "none",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 169
      }
    },
    {
      "type" : "xss",
      "subtype" : "json_html_escape_module_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "HTML entities in JSON will not be escaped by default."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "json_html_escape_module_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : "stored",
      "code-language" : "c#",
      "name" : {
        "en" : "Cross-site scripting (stored)"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is stored in a database and subsequently read back and included in a context that can execute JavaScript without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "stored_xss",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : "stored",
      "code-language" : "java",
      "name" : {
        "en" : "Cross-site scripting (stored)"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is stored in a database and subsequently read back and included in a context that can execute JavaScript without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "stored_xss",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : "stored",
      "code-language" : "vb.net",
      "name" : {
        "en" : "Cross-site scripting (stored)"
      },
      "description" : {
        "en" : "Untrusted user-supplied data is stored in a database and subsequently read back and included in a context that can execute JavaScript without adequate validation, escaping, or filtering."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "stored_xss",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1196
      }
    },
    {
      "type" : "xss",
      "subtype" : "unquoted_attribute_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Values interpolated into an attribute value context without double quotes are vulnerable to cross-site scripting. To attack an unquoted attribute, the payload only needs a space to move to a new attribute context. The space character will not be HTML escaped in current Rails templates. From there it is common to use event handlers (such as onblur) to introduce malicious JavaScript. Always enclose attribute values in double quotes to avoid this vulnerability."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 83,
        "impact" : "High",
        "subcategory" : "unquoted_attribute_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1222
      }
    },
    {
      "type" : "xss",
      "subtype" : "unquoted_attribute_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Values interpolated into an attribute value context without double quotes are vulnerable to cross-site scripting. To attack an unquoted attribute, the payload only needs a space to move to a new attribute context. The space character will not be HTML escaped in current Rails templates. From there it is common to use event handlers (such as onblur) to introduce malicious JavaScript. Always enclose attribute values in double quotes to avoid this vulnerability."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 83,
        "impact" : "Low",
        "subcategory" : "unquoted_attribute_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1222
      }
    },
    {
      "type" : "xss",
      "subtype" : "unquoted_attribute_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Values interpolated into an attribute value context without double quotes are vulnerable to cross-site scripting. To attack an unquoted attribute, the payload only needs a space to move to a new attribute context. The space character will not be HTML escaped in current Rails templates. From there it is common to use event handlers (such as onblur) to introduce malicious JavaScript. Always enclose attribute values in double quotes to avoid this vulnerability."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 83,
        "impact" : "Medium",
        "subcategory" : "unquoted_attribute_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1222
      }
    },
    {
      "type" : "xss",
      "subtype" : "xss_content_tag_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "The content_tag helper generates an HTML tag and requires careful handling of arguments to prevent cross-site scripting."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "xss_content_tag_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 13
      }
    },
    {
      "type" : "xss",
      "subtype" : "xss_content_tag_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "The content_tag helper generates an HTML tag and requires careful handling of arguments to prevent cross-site scripting."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "xss_content_tag_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 13
      }
    },
    {
      "type" : "xss",
      "subtype" : "xss_link_to_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This version of Ruby on Rails does not escape the text of a link. User-supplied values can lead to a cross-site scripting vulnerability."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "xss_link_to_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 13
      }
    },
    {
      "type" : "xss",
      "subtype" : "xss_link_to_href_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Even though Rails properly escapes HTML entities in the URL when creating the link tag, the method still permits arbitrary protocols for the link. For example, the link could begin with javascript: which would execute JavaScript when clicked."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 83,
        "impact" : "High",
        "subcategory" : "xss_link_to_href_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1222
      }
    },
    {
      "type" : "xss",
      "subtype" : "xss_link_to_href_low",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "Even though Rails properly escapes HTML entities in the URL when creating the link tag, the method still permits arbitrary protocols for the link. For example, the link could begin with javascript: which would execute JavaScript when clicked."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Low impact security",
        "cweCategory" : 83,
        "impact" : "Low",
        "subcategory" : "xss_link_to_href_low",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 1222
      }
    },
    {
      "type" : "xss",
      "subtype" : "xss_link_to_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This version of Ruby on Rails does not escape the text of a link. User-supplied values can lead to a cross-site scripting vulnerability."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "xss_link_to_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 13
      }
    },
    {
      "type" : "xss",
      "subtype" : "xss_to_json_hi",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This version of Ruby on Rails does not properly escape HTML entities in JSON output."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "High impact security",
        "cweCategory" : 79,
        "impact" : "High",
        "subcategory" : "xss_to_json_hi",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 13
      }
    },
    {
      "type" : "xss",
      "subtype" : "xss_to_json_med",
      "code-language" : "ruby",
      "name" : {
        "en" : "Cross-site scripting"
      },
      "description" : {
        "en" : "This version of Ruby on Rails does not properly escape HTML entities in JSON output."
      },
      "local_effect" : {
        "en" : "A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events."
      },
      "origin" : "Coverity",
      "cim_checker_properties" : {
        "category" : "Medium impact security",
        "cweCategory" : 79,
        "impact" : "Medium",
        "subcategory" : "xss_to_json_med",
        "qualityKind" : false,
        "securityKind" : true,
        "testKind" : false,
        "weaknessId" : 13
      }
    }
  ]
}
