# Accept the base image name as an argument
ARG BASE_IMAGE

# Extend from the base image passed as an argument
FROM ${BASE_IMAGE}

USER $SERVICE_NAME
# Create Conda Env for ESM
WORKDIR /app/esm/
RUN ${HOME}/conda/bin/mamba env create -f /app/esm/omics_setup/env.yml

WORKDIR /app/esm
RUN bash -c "source ${HOME}/conda/etc/profile.d/conda.sh && \
source ${HOME}/conda/etc/profile.d/mamba.sh && \
mamba activate esm_py11 && \
pip install . &&\
pip install torch==2.4.0+cpu torchvision==0.19.0+cpu torchaudio==2.4.0+cpu --index-url https://download.pytorch.org/whl/cpu  && \
pip install intel-extension-for-pytorch==2.4.0"

RUN echo "#!/bin/bash" >> /app/init.sh && \
echo "source ${HOME}/conda/etc/profile.d/conda.sh" >> /app/init.sh && \
echo "source ${HOME}/conda/etc/profile.d/mamba.sh" >> /app/init.sh && \
echo "mamba activate esm_py11" >> /app/init.sh && \
chmod +x /app/init.sh && \
echo "source /app/init.sh" >> ~/.bashrc

WORKDIR /app/esm/examples/lm-design/
RUN wget https://dl.fbaipublicfiles.com/fair-esm/examples/lm_design/linear_projection_model.pt


WORKDIR /app/esm/
HEALTHCHECK NONE

RUN echo '#!/bin/bash' > /app/entrypoint.sh && \
    echo 'if [ -z "$1" ]; then' >> /app/entrypoint.sh && \
    echo '    exec /bin/bash' >> /app/entrypoint.sh && \
    echo 'else' >> /app/entrypoint.sh && \
    echo '    source /app/init.sh' >> /app/entrypoint.sh && \
    echo '    exec "$@"' >> /app/entrypoint.sh && \
    echo 'fi' >> /app/entrypoint.sh && \
    chmod +x /app/entrypoint.sh

ENTRYPOINT ["/app/entrypoint.sh"]
CMD []
