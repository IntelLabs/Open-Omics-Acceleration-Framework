ARG FROM_IMAGE=ubuntu:24.04

# Stage 2: Set up the main build environment
FROM ${FROM_IMAGE} as builder

ENV DEBIAN_FRONTEND=noninteractive

# Install necessary build tools and clean up
RUN apt-get update && apt-get install -y --no-install-recommends \
    git build-essential wget vim ca-certificates autoconf automake make && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get autoremove -y && \
    apt-get clean
ENV SERVICE_NAME="esm-base-service"
RUN groupadd --gid 1001 $SERVICE_NAME && \
	useradd -m -g $SERVICE_NAME --shell /bin/false --uid 1001 $SERVICE_NAME

COPY . /app
WORKDIR /app

RUN    chown -R $SERVICE_NAME:$SERVICE_NAME /app
USER $SERVICE_NAME

RUN wget "https://github.com/conda-forge/miniforge/releases/download/24.3.0-0/Miniforge3-$(uname)-$(uname -m).sh"
RUN bash Miniforge3-$(uname)-$(uname -m).sh -b -p "${HOME}/conda"

RUN git clone --recursive https://github.com/facebookresearch/esm.git
COPY esm_change_all.patch /app/esm/esm_change_all.patch
WORKDIR /app/esm
RUN git apply esm_change_all.patch


USER root
RUN mkdir -p /executables && \
    ln -s /app/esm/scripts/extract.py /executables/ && \
    ln -s /app/esm/examples/lm-design/lm_design.py /executables/ && \
    ln -s /app/esm/examples/inverse_folding/sample_sequences.py /executables/ && \
    ln -s /app/esm/examples/inverse_folding/score_log_likelihoods.py /executables/ && \
    ln -s /app/esm/scripts/fold.py /executables/
RUN echo '#!/bin/bash\ncd /app/esm/examples/lm-design\npython lm_design.py "$@"' > /executables/lm_design.sh && \
    chmod +x /executables/lm_design.sh


USER $SERVICE_NAME


RUN mkdir -p /home/esm-base-service/.cache/torch/hub/ && \
    rm -rf /home/esm-base-service/.cache/torch/hub/checkpoints && \
    ln -s /checkpoints /home/esm-base-service/.cache/torch/hub/checkpoints

HEALTHCHECK NONE



