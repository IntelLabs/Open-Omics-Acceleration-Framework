ARG FROM_IMAGE=ubuntu:22.04
# Install Base miniconda image
ARG BASE_IMAGE=condaforge/miniforge3:23.1.0-3
FROM ${BASE_IMAGE} as conda_setup

# Non-root user setup
ENV SERVICE_NAME="alphafold2-inf-service"

RUN groupadd --gid 1001 $SERVICE_NAME && \
    useradd -m -g $SERVICE_NAME --shell /bin/false --uid 1001 $SERVICE_NAME

# Install Anaconda and PIP dependency
RUN conda update -n base conda
RUN conda install python==3.9
RUN conda install -y -c conda-forge gcc_linux-64==12.1.0 gxx_linux-64==12.1.0
RUN conda install -y -c conda-forge openmm==7.7.0 pdbfixer==1.8.1
RUN conda install -y bioconda::kalign2==2.04
RUN conda install -y -c conda-forge mkl==2023.2.0 mkl-devel==2023.2.0
RUN python -m pip install onednn-cpu-iomp==2023.2.0
RUN python -m pip install torch==2.0.1 pybind11==2.11.1
RUN python -m pip install absl-py==2.0.0 biopython==1.81 chex==0.1.84 dm-haiku==0.0.10 dm-tree==0.1.8 immutabledict==3.0.0  ml-collections==0.1.1 numpy==1.26.1 scipy==1.11.3 tensorflow==2.14.0 pandas==2.1.1 psutil==5.9.6 tqdm==4.65.0 joblib==1.3.2 pragzip==0.6.0
RUN python -m pip install jax==0.4.21 jaxlib==0.4.21
RUN python -m pip install intel-extension-for-pytorch==2.0.100 intel-openmp==2023.2.0
RUN conda install -y -c conda-forge autoconf==2.71
RUN conda install -y -c conda-forge make==4.3


FROM ${FROM_IMAGE} as builder
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    git build-essential cmake wget tzdata gcc curl gnupg gnupg2 gnupg1 sudo kalign autoconf numactl time vim tar ca-certificates -y\
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove -y \
    && apt-get clean
RUN apt update

COPY --from=conda_setup /opt/conda /opt/conda
ENV PATH "/opt/conda/bin:$PATH"
RUN echo "source activate" >> ~/.bashrc
CMD source ~/.bashrc

WORKDIR /
RUN git clone --recursive https://github.com/IntelLabs/Open-Omics-Acceleration-Framework.git
WORKDIR /Open-Omics-Acceleration-Framework/applications/

#RUN git clone --branch 5.3.0 https://github.com/jemalloc/jemalloc.git
#RUN cd jemalloc && bash autogen.sh --prefix=/opt/conda/ && make install
#RUN cd .. && rm -rf jemalloc

RUN git clone --branch 5.3.0 https://github.com/jemalloc/jemalloc.git
WORKDIR /Open-Omics-Acceleration-Framework/jemalloc
RUN bash autogen.sh --prefix=/opt/conda/ && make install
WORKDIR /Open-Omics-Acceleration-Framework
RUN rm -rf jemalloc

ENV PATH="/usr/bin:$PATH"
ENV PATH "/opt/conda/bin:$PATH"
ENV LD_LIBRARY_PATH "/opt/conda/lib:$LD_LIBRARY_PATH"


WORKDIR /Open-Omics-Acceleration-Framework/applications/alphafold/tpp/tpp-pytorch-extension
RUN CC=gcc python setup.py install \
    && python -c "from tpp_pytorch_extension.alphafold.Alpha_Attention import GatingAttentionOpti_forward"

#RUN cd tpp-pytorch-extension && CC=gcc && CXX=g++ && python setup.py install \
#    && python -c "from tpp_pytorch_extension.alphafold.Alpha_Attention import GatingAttentionOpti_forward" \
#    && cd ..

COPY --from=conda_setup /Open-Omics-Acceleration-Framework /Open-Omics-Acceleration-Framework

WORKDIR /Open-Omics-Acceleration-Framework/applications/alphafold/
RUN wget -q -P ./alphafold/common/ https://git.scicore.unibas.ch/schwede/openstructure/-/raw/7102c63615b64735c4941278d92b554ec94415f8/modules/mol/alg/src/stereo_chemical_props.txt --no-check-certificate

# Swith to Non-root user
RUN chown -R $SERVICE_NAME:$SERVICE_NAME $WORKDIR
USER $SERVICE_NAME

HEALTHCHECK NONE

ENV PATH "/opt/conda/bin:$PATH"
ENV LD_LIBRARY_PATH "/opt/conda/lib:$LD_LIBRARY_PATH"

CMD source ~/.bashrc && mkdir weights && mkdir weights/extracted && python extract_params.py --input /data/params/params_model_1.npz --output_dir ./weights/extracted/model_1 \
&& python extract_params.py --input /data/params/params_model_2.npz --output_dir ./weights/extracted/model_2 \
&& python extract_params.py --input /data/params/params_model_3.npz --output_dir ./weights/extracted/model_3 \
&& python extract_params.py --input /data/params/params_model_4.npz --output_dir ./weights/extracted/model_4 \
&& python extract_params.py --input /data/params/params_model_5.npz --output_dir ./weights/extracted/model_5 \
&& LD_PRELOAD=/opt/conda/lib/libiomp5.so:/opt/conda/lib/libjemalloc.so:$LD_PRELOAD \
MALLOC_CONF="oversize_threshold:1,background_thread:true,metadata_thp:auto,dirty_decay_ms:-1,muzzy_decay_ms:-1" \
python run_multiprocess_infer.py --root_condaenv=/opt/conda --root_home=/Open-Omics-Acceleration-Framework/applications/alphafold --data_dir=/data --input_dir=/samples --output_dir=/output --model_names="model_1,model_2,model_3,model_4,model_5" &&  /usr/bin/time -v bash one_amber.sh /Open-Omics-Acceleration-Framework/applications/alphafold/ /output /samples /output model_1  &&  /usr/bin/time -v bash one_amber.sh /Open-Omics-Acceleration-Framework/applications/alphafold/ /output /samples /output model_2 &&  /usr/bin/time -v bash one_amber.sh /Open-Omics-Acceleration-Framework/applications/alphafold/ /output /samples /output model_3 &&  /usr/bin/time -v bash one_amber.sh /Open-Omics-Acceleration-Framework/applications/alphafold/ /output /samples /output model_4 &&  /usr/bin/time -v bash one_amber.sh /Open-Omics-Acceleration-Framework/applications/alphafold/ /output /samples /output model_5
