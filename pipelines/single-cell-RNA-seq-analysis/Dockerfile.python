# MIT License

# Copyright (c) 2022 Intel Labs

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Authors: Narendra Chaudhary <narendra.chaudhary@intel.com>; Sanchit Misra <sanchit.misra@intel.com>

# Install Base miniconda image
ARG BASE_IMAGE=continuumio/miniconda3
FROM ${BASE_IMAGE}

# Non-root user setup
ENV SERVICE_NAME="single-cell-RNA-service"

RUN groupadd --gid 1001 $SERVICE_NAME && \
    useradd -m -g $SERVICE_NAME --shell /bin/false --uid 1001 $SERVICE_NAME


RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    git build-essential gcc curl gnupg gnupg2 gnupg1 sudo

RUN wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB \
| gpg --dearmor | sudo tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null
RUN echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    curl ca-certificates gpg-agent software-properties-common intel-basekit intel-hpckit && \
  rm -rf /var/lib/apt/lists/*

RUN conda update -n base conda
COPY ./environment.yml ./
RUN conda env create --name=single_cell -f environment.yml
RUN echo "source activate single_cell" > ~/.bashrc
ENV PATH /opt/conda/envs/single_cell/bin:$PATH
# RUN conda install python==3.8.0
# RUN conda install -y seaborn=0.12.2 scikit-learn=1.0.2 statsmodels=0.13.2 numba=0.53.1 pytables=3.7.0 matplotlib-base=3.6.2 pandas=1.5.2
# RUN conda install -y -c conda-forge mkl-service=2.4.0
# RUN conda install -y -c conda-forge python-igraph=0.10.3 leidenalg=0.9.1
# RUN conda install -y -c conda-forge cython=0.29.33 jinja2=3.1.2 clang-tools=15.0.7
# RUN conda install -y -c katanagraph/label/dev -c conda-forge katana-python

# RUN pip install scanpy==1.8.1
# RUN pip install scikit-learn-intelex==2023.0.1
# RUN pip install pybind11
# RUN pip install jupyter
# RUN pip install wget

COPY ./_t_sne.py /opt/conda/lib/python3.8/site-packages/daal4py/sklearn/manifold/_t_sne.py


WORKDIR /workspace
ENV HOME /workspace
COPY ./notebooks/ /workspace

RUN pip uninstall -y umap-learn

ENV OPEN_OMICS_HOME=/Open-Omics-Acceleration-Framework

WORKDIR /
RUN git clone --recursive https://github.com/IntelLabs/Open-Omics-Acceleration-Framework.git
WORKDIR ${OPEN_OMICS_HOME}/lib/tal/application/UMAP_fast/umap_extend/
RUN python setup.py install

WORKDIR ${OPEN_OMICS_HOME}/lib/tal/application/UMAP_fast/umap/
RUN python setup.py install  

# ENV NUMEXPR_MAX_THREADS=64
# ENV NUMBA_NUM_THREADS=64

WORKDIR /workspace

# Swith to Non-root user
RUN chown -R $SERVICE_NAME:$SERVICE_NAME /workspace
USER $SERVICE_NAME

HEALTHCHECK NONE

CMD python -m sklearnex full_single_cell_analysis.py

# build with "docker build -f Dockerfile.python -t scanpy ."
# mkdir -p ~/output
# docker run -v ~/output:/workspace/figures -v ~/Open-Omics-Acceleration-Framework/pipelines/single_cell_pipeline/data:/data scanpy 


